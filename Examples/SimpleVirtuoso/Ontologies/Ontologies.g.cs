// Attention: This file is generated. Any modifications will eventually be overwritten.
// Date: 08.10.2019 15:46:36

using System;
using System.Collections.Generic;
using System.Text;
using Semiodesk.Trinity;

namespace SimpleVirtuoso
{
	
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public class rdf : Ontology
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "rdf";
    public static string GetPrefix() { return Prefix; }     

    ///<summary>
    ///
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    ///</summary>
    public static readonly Resource _22_rdf_syntax_ns = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#"));    

    ///<summary>
    ///The datatype of RDF literals storing fragments of HTML content
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML"/>
    ///</summary>
    public static readonly Resource HTML = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML"));    

    ///<summary>
    ///The datatype of language-tagged string values
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"/>
    ///</summary>
    public static readonly Resource langString = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"));    

    ///<summary>
    ///The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral"/>
    ///</summary>
    public static readonly Resource PlainLiteral = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral"));    

    ///<summary>
    ///The subject is an instance of a class.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    ///</summary>
    public static readonly Property type = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#type"));    

    ///<summary>
    ///The class of RDF properties.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
    ///</summary>
    public static readonly Class Property = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"));    

    ///<summary>
    ///The class of RDF statements.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement"/>
    ///</summary>
    public static readonly Class Statement = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement"));    

    ///<summary>
    ///The subject of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#subject"/>
    ///</summary>
    public static readonly Property subject = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#subject"));    

    ///<summary>
    ///The predicate of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate"/>
    ///</summary>
    public static readonly Property predicate = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate"));    

    ///<summary>
    ///The object of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#object"/>
    ///</summary>
    public static readonly Property _object = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#object"));    

    ///<summary>
    ///The class of unordered containers.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag"/>
    ///</summary>
    public static readonly Class Bag = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag"));    

    ///<summary>
    ///The class of ordered containers.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"/>
    ///</summary>
    public static readonly Class Seq = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"));    

    ///<summary>
    ///The class of containers of alternatives.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt"/>
    ///</summary>
    public static readonly Class Alt = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt"));    

    ///<summary>
    ///Idiomatic property used for structured values.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#value"/>
    ///</summary>
    public static readonly Property value = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#value"));    

    ///<summary>
    ///The class of RDF Lists.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#List"/>
    ///</summary>
    public static readonly Class List = new Class(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#List"));    

    ///<summary>
    ///The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    ///</summary>
    public static readonly Resource nil = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"));    

    ///<summary>
    ///The first item in the subject RDF list.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#first"/>
    ///</summary>
    public static readonly Property first = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#first"));    

    ///<summary>
    ///The rest of the subject RDF list after the first item.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"/>
    ///</summary>
    public static readonly Property rest = new Property(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"));    

    ///<summary>
    ///The datatype of XML literal values.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral"/>
    ///</summary>
    public static readonly Resource XMLLiteral = new Resource(new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral"));
}
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public static class RDF
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/1999/02/22-rdf-syntax-ns#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "RDF";
    public static string GetPrefix() { return Prefix; } 

    ///<summary>
    ///
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    ///</summary>
    public const string _22_rdf_syntax_ns = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";

    ///<summary>
    ///The datatype of RDF literals storing fragments of HTML content
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML"/>
    ///</summary>
    public const string HTML = "http://www.w3.org/1999/02/22-rdf-syntax-ns#HTML";

    ///<summary>
    ///The datatype of language-tagged string values
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#langString"/>
    ///</summary>
    public const string langString = "http://www.w3.org/1999/02/22-rdf-syntax-ns#langString";

    ///<summary>
    ///The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral"/>
    ///</summary>
    public const string PlainLiteral = "http://www.w3.org/1999/02/22-rdf-syntax-ns#PlainLiteral";

    ///<summary>
    ///The subject is an instance of a class.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#type"/>
    ///</summary>
    public const string type = "http://www.w3.org/1999/02/22-rdf-syntax-ns#type";

    ///<summary>
    ///The class of RDF properties.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Property"/>
    ///</summary>
    public const string Property = "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property";

    ///<summary>
    ///The class of RDF statements.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement"/>
    ///</summary>
    public const string Statement = "http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement";

    ///<summary>
    ///The subject of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#subject"/>
    ///</summary>
    public const string subject = "http://www.w3.org/1999/02/22-rdf-syntax-ns#subject";

    ///<summary>
    ///The predicate of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate"/>
    ///</summary>
    public const string predicate = "http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate";

    ///<summary>
    ///The object of the subject RDF statement.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#object"/>
    ///</summary>
    public const string _object = "http://www.w3.org/1999/02/22-rdf-syntax-ns#object";

    ///<summary>
    ///The class of unordered containers.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag"/>
    ///</summary>
    public const string Bag = "http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag";

    ///<summary>
    ///The class of ordered containers.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq"/>
    ///</summary>
    public const string Seq = "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq";

    ///<summary>
    ///The class of containers of alternatives.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt"/>
    ///</summary>
    public const string Alt = "http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt";

    ///<summary>
    ///Idiomatic property used for structured values.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#value"/>
    ///</summary>
    public const string value = "http://www.w3.org/1999/02/22-rdf-syntax-ns#value";

    ///<summary>
    ///The class of RDF Lists.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#List"/>
    ///</summary>
    public const string List = "http://www.w3.org/1999/02/22-rdf-syntax-ns#List";

    ///<summary>
    ///The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
    ///</summary>
    public const string nil = "http://www.w3.org/1999/02/22-rdf-syntax-ns#nil";

    ///<summary>
    ///The first item in the subject RDF list.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#first"/>
    ///</summary>
    public const string first = "http://www.w3.org/1999/02/22-rdf-syntax-ns#first";

    ///<summary>
    ///The rest of the subject RDF list after the first item.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#rest"/>
    ///</summary>
    public const string rest = "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest";

    ///<summary>
    ///The datatype of XML literal values.
    ///<see cref="http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral"/>
    ///</summary>
    public const string XMLLiteral = "http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral";
}
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public class rdfs : Ontology
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/2000/01/rdf-schema#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "rdfs";
    public static string GetPrefix() { return Prefix; }     

    ///<summary>
    ///
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#"/>
    ///</summary>
    public static readonly Resource rdf_schema = new Resource(new Uri("http://www.w3.org/2000/01/rdf-schema#"));    

    ///<summary>
    ///The class resource, everything.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    ///</summary>
    public static readonly Class Resource = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#Resource"));    

    ///<summary>
    ///The class of classes.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Class"/>
    ///</summary>
    public static readonly Class Class = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#Class"));    

    ///<summary>
    ///The subject is a subclass of a class.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
    ///</summary>
    public static readonly Property subClassOf = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#subClassOf"));    

    ///<summary>
    ///The subject is a subproperty of a property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
    ///</summary>
    public static readonly Property subPropertyOf = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#subPropertyOf"));    

    ///<summary>
    ///A description of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#comment"/>
    ///</summary>
    public static readonly Property comment = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#comment"));    

    ///<summary>
    ///A human-readable name for the subject.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#label"/>
    ///</summary>
    public static readonly Property label = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#label"));    

    ///<summary>
    ///A domain of the subject property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#domain"/>
    ///</summary>
    public static readonly Property domain = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#domain"));    

    ///<summary>
    ///A range of the subject property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#range"/>
    ///</summary>
    public static readonly Property range = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#range"));    

    ///<summary>
    ///Further information about the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#seeAlso"/>
    ///</summary>
    public static readonly Property seeAlso = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#seeAlso"));    

    ///<summary>
    ///The defininition of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#isDefinedBy"/>
    ///</summary>
    public static readonly Property isDefinedBy = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#isDefinedBy"));    

    ///<summary>
    ///The class of literal values, eg. textual strings and integers.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    ///</summary>
    public static readonly Class Literal = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#Literal"));    

    ///<summary>
    ///The class of RDF containers.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Container"/>
    ///</summary>
    public static readonly Class Container = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#Container"));    

    ///<summary>
    ///The class of container membership properties, rdf:_1, rdf:_2, ...,
    ///                    all of which are sub-properties of 'member'.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty"/>
    ///</summary>
    public static readonly Class ContainerMembershipProperty = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty"));    

    ///<summary>
    ///A member of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#member"/>
    ///</summary>
    public static readonly Property member = new Property(new Uri("http://www.w3.org/2000/01/rdf-schema#member"));    

    ///<summary>
    ///The class of RDF datatypes.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Datatype"/>
    ///</summary>
    public static readonly Class Datatype = new Class(new Uri("http://www.w3.org/2000/01/rdf-schema#Datatype"));
}
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public static class RDFS
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/2000/01/rdf-schema#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "RDFS";
    public static string GetPrefix() { return Prefix; } 

    ///<summary>
    ///
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#"/>
    ///</summary>
    public const string rdf_schema = "http://www.w3.org/2000/01/rdf-schema#";

    ///<summary>
    ///The class resource, everything.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Resource"/>
    ///</summary>
    public const string Resource = "http://www.w3.org/2000/01/rdf-schema#Resource";

    ///<summary>
    ///The class of classes.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Class"/>
    ///</summary>
    public const string Class = "http://www.w3.org/2000/01/rdf-schema#Class";

    ///<summary>
    ///The subject is a subclass of a class.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#subClassOf"/>
    ///</summary>
    public const string subClassOf = "http://www.w3.org/2000/01/rdf-schema#subClassOf";

    ///<summary>
    ///The subject is a subproperty of a property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#subPropertyOf"/>
    ///</summary>
    public const string subPropertyOf = "http://www.w3.org/2000/01/rdf-schema#subPropertyOf";

    ///<summary>
    ///A description of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#comment"/>
    ///</summary>
    public const string comment = "http://www.w3.org/2000/01/rdf-schema#comment";

    ///<summary>
    ///A human-readable name for the subject.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#label"/>
    ///</summary>
    public const string label = "http://www.w3.org/2000/01/rdf-schema#label";

    ///<summary>
    ///A domain of the subject property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#domain"/>
    ///</summary>
    public const string domain = "http://www.w3.org/2000/01/rdf-schema#domain";

    ///<summary>
    ///A range of the subject property.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#range"/>
    ///</summary>
    public const string range = "http://www.w3.org/2000/01/rdf-schema#range";

    ///<summary>
    ///Further information about the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#seeAlso"/>
    ///</summary>
    public const string seeAlso = "http://www.w3.org/2000/01/rdf-schema#seeAlso";

    ///<summary>
    ///The defininition of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#isDefinedBy"/>
    ///</summary>
    public const string isDefinedBy = "http://www.w3.org/2000/01/rdf-schema#isDefinedBy";

    ///<summary>
    ///The class of literal values, eg. textual strings and integers.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Literal"/>
    ///</summary>
    public const string Literal = "http://www.w3.org/2000/01/rdf-schema#Literal";

    ///<summary>
    ///The class of RDF containers.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Container"/>
    ///</summary>
    public const string Container = "http://www.w3.org/2000/01/rdf-schema#Container";

    ///<summary>
    ///The class of container membership properties, rdf:_1, rdf:_2, ...,
    ///                    all of which are sub-properties of 'member'.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty"/>
    ///</summary>
    public const string ContainerMembershipProperty = "http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty";

    ///<summary>
    ///A member of the subject resource.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#member"/>
    ///</summary>
    public const string member = "http://www.w3.org/2000/01/rdf-schema#member";

    ///<summary>
    ///The class of RDF datatypes.
    ///<see cref="http://www.w3.org/2000/01/rdf-schema#Datatype"/>
    ///</summary>
    public const string Datatype = "http://www.w3.org/2000/01/rdf-schema#Datatype";
}
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public class owl : Ontology
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/2002/07/owl#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "owl";
    public static string GetPrefix() { return Prefix; }     

    ///<summary>
    ///The class of collections of pairwise different individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDifferent"/>
    ///</summary>
    public static readonly Class AllDifferent = new Class(new Uri("http://www.w3.org/2002/07/owl#AllDifferent"));    

    ///<summary>
    ///The class of collections of pairwise disjoint classes.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
    ///</summary>
    public static readonly Class AllDisjointClasses = new Class(new Uri("http://www.w3.org/2002/07/owl#AllDisjointClasses"));    

    ///<summary>
    ///The class of collections of pairwise disjoint properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDisjointProperties"/>
    ///</summary>
    public static readonly Class AllDisjointProperties = new Class(new Uri("http://www.w3.org/2002/07/owl#AllDisjointProperties"));    

    ///<summary>
    ///The class of annotated annotations for which the RDF serialization consists of an annotated subject, predicate and object.
    ///<see cref="http://www.w3.org/2002/07/owl#Annotation"/>
    ///</summary>
    public static readonly Class Annotation = new Class(new Uri("http://www.w3.org/2002/07/owl#Annotation"));    

    ///<summary>
    ///The class of annotation properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AnnotationProperty"/>
    ///</summary>
    public static readonly Class AnnotationProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#AnnotationProperty"));    

    ///<summary>
    ///The class of asymmetric properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
    ///</summary>
    public static readonly Class AsymmetricProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#AsymmetricProperty"));    

    ///<summary>
    ///The class of annotated axioms for which the RDF serialization consists of an annotated subject, predicate and object.
    ///<see cref="http://www.w3.org/2002/07/owl#Axiom"/>
    ///</summary>
    public static readonly Class Axiom = new Class(new Uri("http://www.w3.org/2002/07/owl#Axiom"));    

    ///<summary>
    ///The class of OWL classes.
    ///<see cref="http://www.w3.org/2002/07/owl#Class"/>
    ///</summary>
    public static readonly Class Class = new Class(new Uri("http://www.w3.org/2002/07/owl#Class"));    

    ///<summary>
    ///The class of OWL data ranges, which are special kinds of datatypes. Note: The use of the IRI owl:DataRange has been deprecated as of OWL 2. The IRI rdfs:Datatype SHOULD be used instead.
    ///<see cref="http://www.w3.org/2002/07/owl#DataRange"/>
    ///</summary>
    public static readonly Class DataRange = new Class(new Uri("http://www.w3.org/2002/07/owl#DataRange"));    

    ///<summary>
    ///The class of data properties.
    ///<see cref="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
    ///</summary>
    public static readonly Class DatatypeProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#DatatypeProperty"));    

    ///<summary>
    ///The class of deprecated classes.
    ///<see cref="http://www.w3.org/2002/07/owl#DeprecatedClass"/>
    ///</summary>
    public static readonly Class DeprecatedClass = new Class(new Uri("http://www.w3.org/2002/07/owl#DeprecatedClass"));    

    ///<summary>
    ///The class of deprecated properties.
    ///<see cref="http://www.w3.org/2002/07/owl#DeprecatedProperty"/>
    ///</summary>
    public static readonly Class DeprecatedProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#DeprecatedProperty"));    

    ///<summary>
    ///The class of functional properties.
    ///<see cref="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
    ///</summary>
    public static readonly Class FunctionalProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#FunctionalProperty"));    

    ///<summary>
    ///The class of inverse-functional properties.
    ///<see cref="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/>
    ///</summary>
    public static readonly Class InverseFunctionalProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#InverseFunctionalProperty"));    

    ///<summary>
    ///The class of irreflexive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
    ///</summary>
    public static readonly Class IrreflexiveProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#IrreflexiveProperty"));    

    ///<summary>
    ///The class of named individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#NamedIndividual"/>
    ///</summary>
    public static readonly Class NamedIndividual = new Class(new Uri("http://www.w3.org/2002/07/owl#NamedIndividual"));    

    ///<summary>
    ///The class of negative property assertions.
    ///<see cref="http://www.w3.org/2002/07/owl#NegativePropertyAssertion"/>
    ///</summary>
    public static readonly Class NegativePropertyAssertion = new Class(new Uri("http://www.w3.org/2002/07/owl#NegativePropertyAssertion"));    

    ///<summary>
    ///This is the empty class.
    ///<see cref="http://www.w3.org/2002/07/owl#Nothing"/>
    ///</summary>
    public static readonly Class Nothing = new Class(new Uri("http://www.w3.org/2002/07/owl#Nothing"));    

    ///<summary>
    ///The class of object properties.
    ///<see cref="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    ///</summary>
    public static readonly Class ObjectProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#ObjectProperty"));    

    ///<summary>
    ///The class of ontologies.
    ///<see cref="http://www.w3.org/2002/07/owl#Ontology"/>
    ///</summary>
    public static readonly Class Ontology = new Class(new Uri("http://www.w3.org/2002/07/owl#Ontology"));    

    ///<summary>
    ///The class of ontology properties.
    ///<see cref="http://www.w3.org/2002/07/owl#OntologyProperty"/>
    ///</summary>
    public static readonly Class OntologyProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#OntologyProperty"));    

    ///<summary>
    ///The class of reflexive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#ReflexiveProperty"/>
    ///</summary>
    public static readonly Class ReflexiveProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#ReflexiveProperty"));    

    ///<summary>
    ///The class of property restrictions.
    ///<see cref="http://www.w3.org/2002/07/owl#Restriction"/>
    ///</summary>
    public static readonly Class Restriction = new Class(new Uri("http://www.w3.org/2002/07/owl#Restriction"));    

    ///<summary>
    ///The class of symmetric properties.
    ///<see cref="http://www.w3.org/2002/07/owl#SymmetricProperty"/>
    ///</summary>
    public static readonly Class SymmetricProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#SymmetricProperty"));    

    ///<summary>
    ///The class of transitive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
    ///</summary>
    public static readonly Class TransitiveProperty = new Class(new Uri("http://www.w3.org/2002/07/owl#TransitiveProperty"));    

    ///<summary>
    ///The class of OWL individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#Thing"/>
    ///</summary>
    public static readonly Class Thing = new Class(new Uri("http://www.w3.org/2002/07/owl#Thing"));    

    ///<summary>
    ///The property that determines the class that a universal property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#allValuesFrom"/>
    ///</summary>
    public static readonly Property allValuesFrom = new Property(new Uri("http://www.w3.org/2002/07/owl#allValuesFrom"));    

    ///<summary>
    ///The property that determines the predicate of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedProperty"/>
    ///</summary>
    public static readonly Property annotatedProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#annotatedProperty"));    

    ///<summary>
    ///The property that determines the subject of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedSource"/>
    ///</summary>
    public static readonly Property annotatedSource = new Property(new Uri("http://www.w3.org/2002/07/owl#annotatedSource"));    

    ///<summary>
    ///The property that determines the object of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedTarget"/>
    ///</summary>
    public static readonly Property annotatedTarget = new Property(new Uri("http://www.w3.org/2002/07/owl#annotatedTarget"));    

    ///<summary>
    ///The property that determines the predicate of a negative property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#assertionProperty"/>
    ///</summary>
    public static readonly Property assertionProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#assertionProperty"));    

    ///<summary>
    ///The annotation property that indicates that a given ontology is backward compatible with another ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#backwardCompatibleWith"/>
    ///</summary>
    public static readonly Property backwardCompatibleWith = new Property(new Uri("http://www.w3.org/2002/07/owl#backwardCompatibleWith"));    

    ///<summary>
    ///The data property that does not relate any individual to any data value.
    ///<see cref="http://www.w3.org/2002/07/owl#bottomDataProperty"/>
    ///</summary>
    public static readonly Property bottomDataProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#bottomDataProperty"));    

    ///<summary>
    ///The object property that does not relate any two individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#bottomObjectProperty"/>
    ///</summary>
    public static readonly Property bottomObjectProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#bottomObjectProperty"));    

    ///<summary>
    ///The property that determines the cardinality of an exact cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#cardinality"/>
    ///</summary>
    public static readonly Property cardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#cardinality"));    

    ///<summary>
    ///The property that determines that a given class is the complement of another class.
    ///<see cref="http://www.w3.org/2002/07/owl#complementOf"/>
    ///</summary>
    public static readonly Property complementOf = new Property(new Uri("http://www.w3.org/2002/07/owl#complementOf"));    

    ///<summary>
    ///The property that determines that a given data range is the complement of another data range with respect to the data domain.
    ///<see cref="http://www.w3.org/2002/07/owl#datatypeComplementOf"/>
    ///</summary>
    public static readonly Property datatypeComplementOf = new Property(new Uri("http://www.w3.org/2002/07/owl#datatypeComplementOf"));    

    ///<summary>
    ///The annotation property that indicates that a given entity has been deprecated.
    ///<see cref="http://www.w3.org/2002/07/owl#deprecated"/>
    ///</summary>
    public static readonly Property deprecated = new Property(new Uri("http://www.w3.org/2002/07/owl#deprecated"));    

    ///<summary>
    ///The property that determines that two given individuals are different.
    ///<see cref="http://www.w3.org/2002/07/owl#differentFrom"/>
    ///</summary>
    public static readonly Property differentFrom = new Property(new Uri("http://www.w3.org/2002/07/owl#differentFrom"));    

    ///<summary>
    ///The property that determines that a given class is equivalent to the disjoint union of a collection of other classes.
    ///<see cref="http://www.w3.org/2002/07/owl#disjointUnionOf"/>
    ///</summary>
    public static readonly Property disjointUnionOf = new Property(new Uri("http://www.w3.org/2002/07/owl#disjointUnionOf"));    

    ///<summary>
    ///The property that determines that two given classes are disjoint.
    ///<see cref="http://www.w3.org/2002/07/owl#disjointWith"/>
    ///</summary>
    public static readonly Property disjointWith = new Property(new Uri("http://www.w3.org/2002/07/owl#disjointWith"));    

    ///<summary>
    ///The property that determines the collection of pairwise different individuals in a owl:AllDifferent axiom.
    ///<see cref="http://www.w3.org/2002/07/owl#distinctMembers"/>
    ///</summary>
    public static readonly Property distinctMembers = new Property(new Uri("http://www.w3.org/2002/07/owl#distinctMembers"));    

    ///<summary>
    ///The property that determines that two given classes are equivalent, and that is used to specify datatype definitions.
    ///<see cref="http://www.w3.org/2002/07/owl#equivalentClass"/>
    ///</summary>
    public static readonly Property equivalentClass = new Property(new Uri("http://www.w3.org/2002/07/owl#equivalentClass"));    

    ///<summary>
    ///The property that determines that two given properties are equivalent.
    ///<see cref="http://www.w3.org/2002/07/owl#equivalentProperty"/>
    ///</summary>
    public static readonly Property equivalentProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#equivalentProperty"));    

    ///<summary>
    ///The property that determines the collection of properties that jointly build a key.
    ///<see cref="http://www.w3.org/2002/07/owl#hasKey"/>
    ///</summary>
    public static readonly Property hasKey = new Property(new Uri("http://www.w3.org/2002/07/owl#hasKey"));    

    ///<summary>
    ///The property that determines the property that a self restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#hasSelf"/>
    ///</summary>
    public static readonly Property hasSelf = new Property(new Uri("http://www.w3.org/2002/07/owl#hasSelf"));    

    ///<summary>
    ///The property that determines the individual that a has-value restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#hasValue"/>
    ///</summary>
    public static readonly Property hasValue = new Property(new Uri("http://www.w3.org/2002/07/owl#hasValue"));    

    ///<summary>
    ///The property that is used for importing other ontologies into a given ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#imports"/>
    ///</summary>
    public static readonly Property imports = new Property(new Uri("http://www.w3.org/2002/07/owl#imports"));    

    ///<summary>
    ///The annotation property that indicates that a given ontology is incompatible with another ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#incompatibleWith"/>
    ///</summary>
    public static readonly Property incompatibleWith = new Property(new Uri("http://www.w3.org/2002/07/owl#incompatibleWith"));    

    ///<summary>
    ///The property that determines the collection of classes or data ranges that build an intersection.
    ///<see cref="http://www.w3.org/2002/07/owl#intersectionOf"/>
    ///</summary>
    public static readonly Property intersectionOf = new Property(new Uri("http://www.w3.org/2002/07/owl#intersectionOf"));    

    ///<summary>
    ///The property that determines that two given properties are inverse.
    ///<see cref="http://www.w3.org/2002/07/owl#inverseOf"/>
    ///</summary>
    public static readonly Property inverseOf = new Property(new Uri("http://www.w3.org/2002/07/owl#inverseOf"));    

    ///<summary>
    ///The property that determines the cardinality of a maximum cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#maxCardinality"/>
    ///</summary>
    public static readonly Property maxCardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#maxCardinality"));    

    ///<summary>
    ///The property that determines the cardinality of a maximum qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#maxQualifiedCardinality"/>
    ///</summary>
    public static readonly Property maxQualifiedCardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#maxQualifiedCardinality"));    

    ///<summary>
    ///The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
    ///<see cref="http://www.w3.org/2002/07/owl#members"/>
    ///</summary>
    public static readonly Property members = new Property(new Uri("http://www.w3.org/2002/07/owl#members"));    

    ///<summary>
    ///The property that determines the cardinality of a minimum cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#minCardinality"/>
    ///</summary>
    public static readonly Property minCardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#minCardinality"));    

    ///<summary>
    ///The property that determines the cardinality of a minimum qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#minQualifiedCardinality"/>
    ///</summary>
    public static readonly Property minQualifiedCardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#minQualifiedCardinality"));    

    ///<summary>
    ///The property that determines the class that a qualified object cardinality restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onClass"/>
    ///</summary>
    public static readonly Property onClass = new Property(new Uri("http://www.w3.org/2002/07/owl#onClass"));    

    ///<summary>
    ///The property that determines the data range that a qualified data cardinality restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onDataRange"/>
    ///</summary>
    public static readonly Property onDataRange = new Property(new Uri("http://www.w3.org/2002/07/owl#onDataRange"));    

    ///<summary>
    ///The property that determines the datatype that a datatype restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onDatatype"/>
    ///</summary>
    public static readonly Property onDatatype = new Property(new Uri("http://www.w3.org/2002/07/owl#onDatatype"));    

    ///<summary>
    ///The property that determines the collection of individuals or data values that build an enumeration.
    ///<see cref="http://www.w3.org/2002/07/owl#oneOf"/>
    ///</summary>
    public static readonly Property oneOf = new Property(new Uri("http://www.w3.org/2002/07/owl#oneOf"));    

    ///<summary>
    ///The property that determines the n-tuple of properties that a property restriction on an n-ary data range refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onProperties"/>
    ///</summary>
    public static readonly Property onProperties = new Property(new Uri("http://www.w3.org/2002/07/owl#onProperties"));    

    ///<summary>
    ///The property that determines the property that a property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onProperty"/>
    ///</summary>
    public static readonly Property onProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#onProperty"));    

    ///<summary>
    ///The annotation property that indicates the predecessor ontology of a given ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#priorVersion"/>
    ///</summary>
    public static readonly Property priorVersion = new Property(new Uri("http://www.w3.org/2002/07/owl#priorVersion"));    

    ///<summary>
    ///The property that determines the n-tuple of properties that build a sub property chain of a given property.
    ///<see cref="http://www.w3.org/2002/07/owl#propertyChainAxiom"/>
    ///</summary>
    public static readonly Property propertyChainAxiom = new Property(new Uri("http://www.w3.org/2002/07/owl#propertyChainAxiom"));    

    ///<summary>
    ///The property that determines that two given properties are disjoint.
    ///<see cref="http://www.w3.org/2002/07/owl#propertyDisjointWith"/>
    ///</summary>
    public static readonly Property propertyDisjointWith = new Property(new Uri("http://www.w3.org/2002/07/owl#propertyDisjointWith"));    

    ///<summary>
    ///The property that determines the cardinality of an exact qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#qualifiedCardinality"/>
    ///</summary>
    public static readonly Property qualifiedCardinality = new Property(new Uri("http://www.w3.org/2002/07/owl#qualifiedCardinality"));    

    ///<summary>
    ///The property that determines that two given individuals are equal.
    ///<see cref="http://www.w3.org/2002/07/owl#sameAs"/>
    ///</summary>
    public static readonly Property sameAs = new Property(new Uri("http://www.w3.org/2002/07/owl#sameAs"));    

    ///<summary>
    ///The property that determines the class that an existential property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#someValuesFrom"/>
    ///</summary>
    public static readonly Property someValuesFrom = new Property(new Uri("http://www.w3.org/2002/07/owl#someValuesFrom"));    

    ///<summary>
    ///The property that determines the subject of a negative property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#sourceIndividual"/>
    ///</summary>
    public static readonly Property sourceIndividual = new Property(new Uri("http://www.w3.org/2002/07/owl#sourceIndividual"));    

    ///<summary>
    ///The property that determines the object of a negative object property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#targetIndividual"/>
    ///</summary>
    public static readonly Property targetIndividual = new Property(new Uri("http://www.w3.org/2002/07/owl#targetIndividual"));    

    ///<summary>
    ///The property that determines the value of a negative data property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#targetValue"/>
    ///</summary>
    public static readonly Property targetValue = new Property(new Uri("http://www.w3.org/2002/07/owl#targetValue"));    

    ///<summary>
    ///The data property that relates every individual to every data value.
    ///<see cref="http://www.w3.org/2002/07/owl#topDataProperty"/>
    ///</summary>
    public static readonly Property topDataProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#topDataProperty"));    

    ///<summary>
    ///The object property that relates every two individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#topObjectProperty"/>
    ///</summary>
    public static readonly Property topObjectProperty = new Property(new Uri("http://www.w3.org/2002/07/owl#topObjectProperty"));    

    ///<summary>
    ///The property that determines the collection of classes or data ranges that build a union.
    ///<see cref="http://www.w3.org/2002/07/owl#unionOf"/>
    ///</summary>
    public static readonly Property unionOf = new Property(new Uri("http://www.w3.org/2002/07/owl#unionOf"));    

    ///<summary>
    ///The annotation property that provides version information for an ontology or another OWL construct.
    ///<see cref="http://www.w3.org/2002/07/owl#versionInfo"/>
    ///</summary>
    public static readonly Property versionInfo = new Property(new Uri("http://www.w3.org/2002/07/owl#versionInfo"));    

    ///<summary>
    ///The property that identifies the version IRI of an ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#versionIRI"/>
    ///</summary>
    public static readonly Property versionIRI = new Property(new Uri("http://www.w3.org/2002/07/owl#versionIRI"));    

    ///<summary>
    ///The property that determines the collection of facet-value pairs that define a datatype restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#withRestrictions"/>
    ///</summary>
    public static readonly Property withRestrictions = new Property(new Uri("http://www.w3.org/2002/07/owl#withRestrictions"));
}
///<summary>
///Semiodesk.Trinity.BindingSet
///
///</summary>
public static class OWL
{
    public static readonly Uri Namespace = new Uri("http://www.w3.org/2002/07/owl#");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "OWL";
    public static string GetPrefix() { return Prefix; } 

    ///<summary>
    ///The class of collections of pairwise different individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDifferent"/>
    ///</summary>
    public const string AllDifferent = "http://www.w3.org/2002/07/owl#AllDifferent";

    ///<summary>
    ///The class of collections of pairwise disjoint classes.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
    ///</summary>
    public const string AllDisjointClasses = "http://www.w3.org/2002/07/owl#AllDisjointClasses";

    ///<summary>
    ///The class of collections of pairwise disjoint properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AllDisjointProperties"/>
    ///</summary>
    public const string AllDisjointProperties = "http://www.w3.org/2002/07/owl#AllDisjointProperties";

    ///<summary>
    ///The class of annotated annotations for which the RDF serialization consists of an annotated subject, predicate and object.
    ///<see cref="http://www.w3.org/2002/07/owl#Annotation"/>
    ///</summary>
    public const string Annotation = "http://www.w3.org/2002/07/owl#Annotation";

    ///<summary>
    ///The class of annotation properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AnnotationProperty"/>
    ///</summary>
    public const string AnnotationProperty = "http://www.w3.org/2002/07/owl#AnnotationProperty";

    ///<summary>
    ///The class of asymmetric properties.
    ///<see cref="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
    ///</summary>
    public const string AsymmetricProperty = "http://www.w3.org/2002/07/owl#AsymmetricProperty";

    ///<summary>
    ///The class of annotated axioms for which the RDF serialization consists of an annotated subject, predicate and object.
    ///<see cref="http://www.w3.org/2002/07/owl#Axiom"/>
    ///</summary>
    public const string Axiom = "http://www.w3.org/2002/07/owl#Axiom";

    ///<summary>
    ///The class of OWL classes.
    ///<see cref="http://www.w3.org/2002/07/owl#Class"/>
    ///</summary>
    public const string Class = "http://www.w3.org/2002/07/owl#Class";

    ///<summary>
    ///The class of OWL data ranges, which are special kinds of datatypes. Note: The use of the IRI owl:DataRange has been deprecated as of OWL 2. The IRI rdfs:Datatype SHOULD be used instead.
    ///<see cref="http://www.w3.org/2002/07/owl#DataRange"/>
    ///</summary>
    public const string DataRange = "http://www.w3.org/2002/07/owl#DataRange";

    ///<summary>
    ///The class of data properties.
    ///<see cref="http://www.w3.org/2002/07/owl#DatatypeProperty"/>
    ///</summary>
    public const string DatatypeProperty = "http://www.w3.org/2002/07/owl#DatatypeProperty";

    ///<summary>
    ///The class of deprecated classes.
    ///<see cref="http://www.w3.org/2002/07/owl#DeprecatedClass"/>
    ///</summary>
    public const string DeprecatedClass = "http://www.w3.org/2002/07/owl#DeprecatedClass";

    ///<summary>
    ///The class of deprecated properties.
    ///<see cref="http://www.w3.org/2002/07/owl#DeprecatedProperty"/>
    ///</summary>
    public const string DeprecatedProperty = "http://www.w3.org/2002/07/owl#DeprecatedProperty";

    ///<summary>
    ///The class of functional properties.
    ///<see cref="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
    ///</summary>
    public const string FunctionalProperty = "http://www.w3.org/2002/07/owl#FunctionalProperty";

    ///<summary>
    ///The class of inverse-functional properties.
    ///<see cref="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/>
    ///</summary>
    public const string InverseFunctionalProperty = "http://www.w3.org/2002/07/owl#InverseFunctionalProperty";

    ///<summary>
    ///The class of irreflexive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
    ///</summary>
    public const string IrreflexiveProperty = "http://www.w3.org/2002/07/owl#IrreflexiveProperty";

    ///<summary>
    ///The class of named individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#NamedIndividual"/>
    ///</summary>
    public const string NamedIndividual = "http://www.w3.org/2002/07/owl#NamedIndividual";

    ///<summary>
    ///The class of negative property assertions.
    ///<see cref="http://www.w3.org/2002/07/owl#NegativePropertyAssertion"/>
    ///</summary>
    public const string NegativePropertyAssertion = "http://www.w3.org/2002/07/owl#NegativePropertyAssertion";

    ///<summary>
    ///This is the empty class.
    ///<see cref="http://www.w3.org/2002/07/owl#Nothing"/>
    ///</summary>
    public const string Nothing = "http://www.w3.org/2002/07/owl#Nothing";

    ///<summary>
    ///The class of object properties.
    ///<see cref="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    ///</summary>
    public const string ObjectProperty = "http://www.w3.org/2002/07/owl#ObjectProperty";

    ///<summary>
    ///The class of ontologies.
    ///<see cref="http://www.w3.org/2002/07/owl#Ontology"/>
    ///</summary>
    public const string Ontology = "http://www.w3.org/2002/07/owl#Ontology";

    ///<summary>
    ///The class of ontology properties.
    ///<see cref="http://www.w3.org/2002/07/owl#OntologyProperty"/>
    ///</summary>
    public const string OntologyProperty = "http://www.w3.org/2002/07/owl#OntologyProperty";

    ///<summary>
    ///The class of reflexive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#ReflexiveProperty"/>
    ///</summary>
    public const string ReflexiveProperty = "http://www.w3.org/2002/07/owl#ReflexiveProperty";

    ///<summary>
    ///The class of property restrictions.
    ///<see cref="http://www.w3.org/2002/07/owl#Restriction"/>
    ///</summary>
    public const string Restriction = "http://www.w3.org/2002/07/owl#Restriction";

    ///<summary>
    ///The class of symmetric properties.
    ///<see cref="http://www.w3.org/2002/07/owl#SymmetricProperty"/>
    ///</summary>
    public const string SymmetricProperty = "http://www.w3.org/2002/07/owl#SymmetricProperty";

    ///<summary>
    ///The class of transitive properties.
    ///<see cref="http://www.w3.org/2002/07/owl#TransitiveProperty"/>
    ///</summary>
    public const string TransitiveProperty = "http://www.w3.org/2002/07/owl#TransitiveProperty";

    ///<summary>
    ///The class of OWL individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#Thing"/>
    ///</summary>
    public const string Thing = "http://www.w3.org/2002/07/owl#Thing";

    ///<summary>
    ///The property that determines the class that a universal property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#allValuesFrom"/>
    ///</summary>
    public const string allValuesFrom = "http://www.w3.org/2002/07/owl#allValuesFrom";

    ///<summary>
    ///The property that determines the predicate of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedProperty"/>
    ///</summary>
    public const string annotatedProperty = "http://www.w3.org/2002/07/owl#annotatedProperty";

    ///<summary>
    ///The property that determines the subject of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedSource"/>
    ///</summary>
    public const string annotatedSource = "http://www.w3.org/2002/07/owl#annotatedSource";

    ///<summary>
    ///The property that determines the object of an annotated axiom or annotated annotation.
    ///<see cref="http://www.w3.org/2002/07/owl#annotatedTarget"/>
    ///</summary>
    public const string annotatedTarget = "http://www.w3.org/2002/07/owl#annotatedTarget";

    ///<summary>
    ///The property that determines the predicate of a negative property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#assertionProperty"/>
    ///</summary>
    public const string assertionProperty = "http://www.w3.org/2002/07/owl#assertionProperty";

    ///<summary>
    ///The annotation property that indicates that a given ontology is backward compatible with another ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#backwardCompatibleWith"/>
    ///</summary>
    public const string backwardCompatibleWith = "http://www.w3.org/2002/07/owl#backwardCompatibleWith";

    ///<summary>
    ///The data property that does not relate any individual to any data value.
    ///<see cref="http://www.w3.org/2002/07/owl#bottomDataProperty"/>
    ///</summary>
    public const string bottomDataProperty = "http://www.w3.org/2002/07/owl#bottomDataProperty";

    ///<summary>
    ///The object property that does not relate any two individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#bottomObjectProperty"/>
    ///</summary>
    public const string bottomObjectProperty = "http://www.w3.org/2002/07/owl#bottomObjectProperty";

    ///<summary>
    ///The property that determines the cardinality of an exact cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#cardinality"/>
    ///</summary>
    public const string cardinality = "http://www.w3.org/2002/07/owl#cardinality";

    ///<summary>
    ///The property that determines that a given class is the complement of another class.
    ///<see cref="http://www.w3.org/2002/07/owl#complementOf"/>
    ///</summary>
    public const string complementOf = "http://www.w3.org/2002/07/owl#complementOf";

    ///<summary>
    ///The property that determines that a given data range is the complement of another data range with respect to the data domain.
    ///<see cref="http://www.w3.org/2002/07/owl#datatypeComplementOf"/>
    ///</summary>
    public const string datatypeComplementOf = "http://www.w3.org/2002/07/owl#datatypeComplementOf";

    ///<summary>
    ///The annotation property that indicates that a given entity has been deprecated.
    ///<see cref="http://www.w3.org/2002/07/owl#deprecated"/>
    ///</summary>
    public const string deprecated = "http://www.w3.org/2002/07/owl#deprecated";

    ///<summary>
    ///The property that determines that two given individuals are different.
    ///<see cref="http://www.w3.org/2002/07/owl#differentFrom"/>
    ///</summary>
    public const string differentFrom = "http://www.w3.org/2002/07/owl#differentFrom";

    ///<summary>
    ///The property that determines that a given class is equivalent to the disjoint union of a collection of other classes.
    ///<see cref="http://www.w3.org/2002/07/owl#disjointUnionOf"/>
    ///</summary>
    public const string disjointUnionOf = "http://www.w3.org/2002/07/owl#disjointUnionOf";

    ///<summary>
    ///The property that determines that two given classes are disjoint.
    ///<see cref="http://www.w3.org/2002/07/owl#disjointWith"/>
    ///</summary>
    public const string disjointWith = "http://www.w3.org/2002/07/owl#disjointWith";

    ///<summary>
    ///The property that determines the collection of pairwise different individuals in a owl:AllDifferent axiom.
    ///<see cref="http://www.w3.org/2002/07/owl#distinctMembers"/>
    ///</summary>
    public const string distinctMembers = "http://www.w3.org/2002/07/owl#distinctMembers";

    ///<summary>
    ///The property that determines that two given classes are equivalent, and that is used to specify datatype definitions.
    ///<see cref="http://www.w3.org/2002/07/owl#equivalentClass"/>
    ///</summary>
    public const string equivalentClass = "http://www.w3.org/2002/07/owl#equivalentClass";

    ///<summary>
    ///The property that determines that two given properties are equivalent.
    ///<see cref="http://www.w3.org/2002/07/owl#equivalentProperty"/>
    ///</summary>
    public const string equivalentProperty = "http://www.w3.org/2002/07/owl#equivalentProperty";

    ///<summary>
    ///The property that determines the collection of properties that jointly build a key.
    ///<see cref="http://www.w3.org/2002/07/owl#hasKey"/>
    ///</summary>
    public const string hasKey = "http://www.w3.org/2002/07/owl#hasKey";

    ///<summary>
    ///The property that determines the property that a self restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#hasSelf"/>
    ///</summary>
    public const string hasSelf = "http://www.w3.org/2002/07/owl#hasSelf";

    ///<summary>
    ///The property that determines the individual that a has-value restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#hasValue"/>
    ///</summary>
    public const string hasValue = "http://www.w3.org/2002/07/owl#hasValue";

    ///<summary>
    ///The property that is used for importing other ontologies into a given ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#imports"/>
    ///</summary>
    public const string imports = "http://www.w3.org/2002/07/owl#imports";

    ///<summary>
    ///The annotation property that indicates that a given ontology is incompatible with another ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#incompatibleWith"/>
    ///</summary>
    public const string incompatibleWith = "http://www.w3.org/2002/07/owl#incompatibleWith";

    ///<summary>
    ///The property that determines the collection of classes or data ranges that build an intersection.
    ///<see cref="http://www.w3.org/2002/07/owl#intersectionOf"/>
    ///</summary>
    public const string intersectionOf = "http://www.w3.org/2002/07/owl#intersectionOf";

    ///<summary>
    ///The property that determines that two given properties are inverse.
    ///<see cref="http://www.w3.org/2002/07/owl#inverseOf"/>
    ///</summary>
    public const string inverseOf = "http://www.w3.org/2002/07/owl#inverseOf";

    ///<summary>
    ///The property that determines the cardinality of a maximum cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#maxCardinality"/>
    ///</summary>
    public const string maxCardinality = "http://www.w3.org/2002/07/owl#maxCardinality";

    ///<summary>
    ///The property that determines the cardinality of a maximum qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#maxQualifiedCardinality"/>
    ///</summary>
    public const string maxQualifiedCardinality = "http://www.w3.org/2002/07/owl#maxQualifiedCardinality";

    ///<summary>
    ///The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.
    ///<see cref="http://www.w3.org/2002/07/owl#members"/>
    ///</summary>
    public const string members = "http://www.w3.org/2002/07/owl#members";

    ///<summary>
    ///The property that determines the cardinality of a minimum cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#minCardinality"/>
    ///</summary>
    public const string minCardinality = "http://www.w3.org/2002/07/owl#minCardinality";

    ///<summary>
    ///The property that determines the cardinality of a minimum qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#minQualifiedCardinality"/>
    ///</summary>
    public const string minQualifiedCardinality = "http://www.w3.org/2002/07/owl#minQualifiedCardinality";

    ///<summary>
    ///The property that determines the class that a qualified object cardinality restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onClass"/>
    ///</summary>
    public const string onClass = "http://www.w3.org/2002/07/owl#onClass";

    ///<summary>
    ///The property that determines the data range that a qualified data cardinality restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onDataRange"/>
    ///</summary>
    public const string onDataRange = "http://www.w3.org/2002/07/owl#onDataRange";

    ///<summary>
    ///The property that determines the datatype that a datatype restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onDatatype"/>
    ///</summary>
    public const string onDatatype = "http://www.w3.org/2002/07/owl#onDatatype";

    ///<summary>
    ///The property that determines the collection of individuals or data values that build an enumeration.
    ///<see cref="http://www.w3.org/2002/07/owl#oneOf"/>
    ///</summary>
    public const string oneOf = "http://www.w3.org/2002/07/owl#oneOf";

    ///<summary>
    ///The property that determines the n-tuple of properties that a property restriction on an n-ary data range refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onProperties"/>
    ///</summary>
    public const string onProperties = "http://www.w3.org/2002/07/owl#onProperties";

    ///<summary>
    ///The property that determines the property that a property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#onProperty"/>
    ///</summary>
    public const string onProperty = "http://www.w3.org/2002/07/owl#onProperty";

    ///<summary>
    ///The annotation property that indicates the predecessor ontology of a given ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#priorVersion"/>
    ///</summary>
    public const string priorVersion = "http://www.w3.org/2002/07/owl#priorVersion";

    ///<summary>
    ///The property that determines the n-tuple of properties that build a sub property chain of a given property.
    ///<see cref="http://www.w3.org/2002/07/owl#propertyChainAxiom"/>
    ///</summary>
    public const string propertyChainAxiom = "http://www.w3.org/2002/07/owl#propertyChainAxiom";

    ///<summary>
    ///The property that determines that two given properties are disjoint.
    ///<see cref="http://www.w3.org/2002/07/owl#propertyDisjointWith"/>
    ///</summary>
    public const string propertyDisjointWith = "http://www.w3.org/2002/07/owl#propertyDisjointWith";

    ///<summary>
    ///The property that determines the cardinality of an exact qualified cardinality restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#qualifiedCardinality"/>
    ///</summary>
    public const string qualifiedCardinality = "http://www.w3.org/2002/07/owl#qualifiedCardinality";

    ///<summary>
    ///The property that determines that two given individuals are equal.
    ///<see cref="http://www.w3.org/2002/07/owl#sameAs"/>
    ///</summary>
    public const string sameAs = "http://www.w3.org/2002/07/owl#sameAs";

    ///<summary>
    ///The property that determines the class that an existential property restriction refers to.
    ///<see cref="http://www.w3.org/2002/07/owl#someValuesFrom"/>
    ///</summary>
    public const string someValuesFrom = "http://www.w3.org/2002/07/owl#someValuesFrom";

    ///<summary>
    ///The property that determines the subject of a negative property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#sourceIndividual"/>
    ///</summary>
    public const string sourceIndividual = "http://www.w3.org/2002/07/owl#sourceIndividual";

    ///<summary>
    ///The property that determines the object of a negative object property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#targetIndividual"/>
    ///</summary>
    public const string targetIndividual = "http://www.w3.org/2002/07/owl#targetIndividual";

    ///<summary>
    ///The property that determines the value of a negative data property assertion.
    ///<see cref="http://www.w3.org/2002/07/owl#targetValue"/>
    ///</summary>
    public const string targetValue = "http://www.w3.org/2002/07/owl#targetValue";

    ///<summary>
    ///The data property that relates every individual to every data value.
    ///<see cref="http://www.w3.org/2002/07/owl#topDataProperty"/>
    ///</summary>
    public const string topDataProperty = "http://www.w3.org/2002/07/owl#topDataProperty";

    ///<summary>
    ///The object property that relates every two individuals.
    ///<see cref="http://www.w3.org/2002/07/owl#topObjectProperty"/>
    ///</summary>
    public const string topObjectProperty = "http://www.w3.org/2002/07/owl#topObjectProperty";

    ///<summary>
    ///The property that determines the collection of classes or data ranges that build a union.
    ///<see cref="http://www.w3.org/2002/07/owl#unionOf"/>
    ///</summary>
    public const string unionOf = "http://www.w3.org/2002/07/owl#unionOf";

    ///<summary>
    ///The annotation property that provides version information for an ontology or another OWL construct.
    ///<see cref="http://www.w3.org/2002/07/owl#versionInfo"/>
    ///</summary>
    public const string versionInfo = "http://www.w3.org/2002/07/owl#versionInfo";

    ///<summary>
    ///The property that identifies the version IRI of an ontology.
    ///<see cref="http://www.w3.org/2002/07/owl#versionIRI"/>
    ///</summary>
    public const string versionIRI = "http://www.w3.org/2002/07/owl#versionIRI";

    ///<summary>
    ///The property that determines the collection of facet-value pairs that define a datatype restriction.
    ///<see cref="http://www.w3.org/2002/07/owl#withRestrictions"/>
    ///</summary>
    public const string withRestrictions = "http://www.w3.org/2002/07/owl#withRestrictions";
}
///<summary>
///
///
///</summary>
public class schema : Ontology
{
    public static readonly Uri Namespace = new Uri("http://schema.org/");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "schema";
    public static string GetPrefix() { return Prefix; }     

    ///<summary>
    ///A 3D model represents some kind of 3D content, which may have <a class="localLink" href="http://schema.org/encoding">encoding</a>s in one or more <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a>s. Many 3D formats are available (e.g. see <a href="https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats">Wikipedia</a>); specific encoding formats can be represented using the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> property applied to the relevant <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a>. For the
    ///case of a single file published after Zip compression, the convention of appending '+zip' to the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using <a class="localLink" href="http://schema.org/3DModel">3DModel</a>.
    ///<see cref="http://schema.org/3DModel"/>
    ///</summary>
    public static readonly Class _3DModel = new Class(new Uri("http://schema.org/3DModel"));    

    ///<summary>
    ///A radio channel that uses AM.
    ///<see cref="http://schema.org/AMRadioChannel"/>
    ///</summary>
    public static readonly Class AMRadioChannel = new Class(new Uri("http://schema.org/AMRadioChannel"));    

    ///<summary>
    ///Reference documentation for application programming interfaces (APIs).
    ///<see cref="http://schema.org/APIReference"/>
    ///</summary>
    public static readonly Class APIReference = new Class(new Uri("http://schema.org/APIReference"));    

    ///<summary>
    ///Web page type: About page.
    ///<see cref="http://schema.org/AboutPage"/>
    ///</summary>
    public static readonly Class AboutPage = new Class(new Uri("http://schema.org/AboutPage"));    

    ///<summary>
    ///The act of committing to/adopting an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RejectAction">RejectAction</a>: The antonym of AcceptAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/AcceptAction"/>
    ///</summary>
    public static readonly Class AcceptAction = new Class(new Uri("http://schema.org/AcceptAction"));    

    ///<summary>
    ///An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
    ///For more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Accommodation"/>
    ///</summary>
    public static readonly Class Accommodation = new Class(new Uri("http://schema.org/Accommodation"));    

    ///<summary>
    ///Accountancy business.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/AccountingService"/>
    ///</summary>
    public static readonly Class AccountingService = new Class(new Uri("http://schema.org/AccountingService"));    

    ///<summary>
    ///The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.
    ///<see cref="http://schema.org/AchieveAction"/>
    ///</summary>
    public static readonly Class AchieveAction = new Class(new Uri("http://schema.org/AchieveAction"));    

    ///<summary>
    ///An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog post</a> and <a href="http://schema.org/docs/actions.html">Actions overview document</a>.
    ///<see cref="http://schema.org/Action"/>
    ///</summary>
    public static readonly Class Action = new Class(new Uri("http://schema.org/Action"));    

    ///<summary>
    ///A set of requirements that a must be fulfilled in order to perform an Action.
    ///<see cref="http://schema.org/ActionAccessSpecification"/>
    ///</summary>
    public static readonly Class ActionAccessSpecification = new Class(new Uri("http://schema.org/ActionAccessSpecification"));    

    ///<summary>
    ///The status of an Action.
    ///<see cref="http://schema.org/ActionStatusType"/>
    ///</summary>
    public static readonly Class ActionStatusType = new Class(new Uri("http://schema.org/ActionStatusType"));    

    ///<summary>
    ///The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).
    ///<see cref="http://schema.org/ActivateAction"/>
    ///</summary>
    public static readonly Class ActivateAction = new Class(new Uri("http://schema.org/ActivateAction"));    

    ///<summary>
    ///The act of editing by adding an object to a collection.
    ///<see cref="http://schema.org/AddAction"/>
    ///</summary>
    public static readonly Class AddAction = new Class(new Uri("http://schema.org/AddAction"));    

    ///<summary>
    ///A geographical region, typically under the jurisdiction of a particular government.
    ///<see cref="http://schema.org/AdministrativeArea"/>
    ///</summary>
    public static readonly Class AdministrativeArea = new Class(new Uri("http://schema.org/AdministrativeArea"));    

    ///<summary>
    ///An adult entertainment establishment.
    ///<see cref="http://schema.org/AdultEntertainment"/>
    ///</summary>
    public static readonly Class AdultEntertainment = new Class(new Uri("http://schema.org/AdultEntertainment"));    

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/Article">Article</a> that an external entity has paid to place or to produce to its specifications. Includes <a href="https://en.wikipedia.org/wiki/Advertorial">advertorials</a>, sponsored content, native advertising and other paid content.
    ///<see cref="http://schema.org/AdvertiserContentArticle"/>
    ///</summary>
    public static readonly Class AdvertiserContentArticle = new Class(new Uri("http://schema.org/AdvertiserContentArticle"));    

    ///<summary>
    ///When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.
    ///<see cref="http://schema.org/AggregateOffer"/>
    ///</summary>
    public static readonly Class AggregateOffer = new Class(new Uri("http://schema.org/AggregateOffer"));    

    ///<summary>
    ///The average rating based on multiple ratings or reviews.
    ///<see cref="http://schema.org/AggregateRating"/>
    ///</summary>
    public static readonly Class AggregateRating = new Class(new Uri("http://schema.org/AggregateRating"));    

    ///<summary>
    ///The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/AgreeAction"/>
    ///</summary>
    public static readonly Class AgreeAction = new Class(new Uri("http://schema.org/AgreeAction"));    

    ///<summary>
    ///An organization that provides flights for passengers.
    ///<see cref="http://schema.org/Airline"/>
    ///</summary>
    public static readonly Class Airline = new Class(new Uri("http://schema.org/Airline"));    

    ///<summary>
    ///An airport.
    ///<see cref="http://schema.org/Airport"/>
    ///</summary>
    public static readonly Class Airport = new Class(new Uri("http://schema.org/Airport"));    

    ///<summary>
    ///An intangible item that describes an alignment between a learning resource and a node in an educational framework.
    ///<see cref="http://schema.org/AlignmentObject"/>
    ///</summary>
    public static readonly Class AlignmentObject = new Class(new Uri("http://schema.org/AlignmentObject"));    

    ///<summary>
    ///The act of organizing tasks/objects/events by associating resources to it.
    ///<see cref="http://schema.org/AllocateAction"/>
    ///</summary>
    public static readonly Class AllocateAction = new Class(new Uri("http://schema.org/AllocateAction"));    

    ///<summary>
    ///An amusement park.
    ///<see cref="http://schema.org/AmusementPark"/>
    ///</summary>
    public static readonly Class AmusementPark = new Class(new Uri("http://schema.org/AmusementPark"));    

    ///<summary>
    ///An AnalysisNewsArticle is a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.
    ///<see cref="http://schema.org/AnalysisNewsArticle"/>
    ///</summary>
    public static readonly Class AnalysisNewsArticle = new Class(new Uri("http://schema.org/AnalysisNewsArticle"));    

    ///<summary>
    ///Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.
    ///<see cref="http://schema.org/AnatomicalStructure"/>
    ///</summary>
    public static readonly Class AnatomicalStructure = new Class(new Uri("http://schema.org/AnatomicalStructure"));    

    ///<summary>
    ///An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can includes circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.
    ///<see cref="http://schema.org/AnatomicalSystem"/>
    ///</summary>
    public static readonly Class AnatomicalSystem = new Class(new Uri("http://schema.org/AnatomicalSystem"));    

    ///<summary>
    ///Animal shelter.
    ///<see cref="http://schema.org/AnimalShelter"/>
    ///</summary>
    public static readonly Class AnimalShelter = new Class(new Uri("http://schema.org/AnimalShelter"));    

    ///<summary>
    ///An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
    ///<see cref="http://schema.org/Answer"/>
    ///</summary>
    public static readonly Class Answer = new Class(new Uri("http://schema.org/Answer"));    

    ///<summary>
    ///An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
    ///<see cref="http://schema.org/Apartment"/>
    ///</summary>
    public static readonly Class Apartment = new Class(new Uri("http://schema.org/Apartment"));    

    ///<summary>
    ///Residence type: Apartment complex.
    ///<see cref="http://schema.org/ApartmentComplex"/>
    ///</summary>
    public static readonly Class ApartmentComplex = new Class(new Uri("http://schema.org/ApartmentComplex"));    

    ///<summary>
    ///The act of inserting at the end if an ordered collection.
    ///<see cref="http://schema.org/AppendAction"/>
    ///</summary>
    public static readonly Class AppendAction = new Class(new Uri("http://schema.org/AppendAction"));    

    ///<summary>
    ///The act of registering to an organization/service without the guarantee to receive it.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ApplyAction"/>
    ///</summary>
    public static readonly Class ApplyAction = new Class(new Uri("http://schema.org/ApplyAction"));    

    ///<summary>
    ///An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.
    ///<see cref="http://schema.org/ApprovedIndication"/>
    ///</summary>
    public static readonly Class ApprovedIndication = new Class(new Uri("http://schema.org/ApprovedIndication"));    

    ///<summary>
    ///Aquarium.
    ///<see cref="http://schema.org/Aquarium"/>
    ///</summary>
    public static readonly Class Aquarium = new Class(new Uri("http://schema.org/Aquarium"));    

    ///<summary>
    ///An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections.
    ///<see cref="http://schema.org/ArchiveComponent"/>
    ///</summary>
    public static readonly Class ArchiveComponent = new Class(new Uri("http://schema.org/ArchiveComponent"));    

    ///<summary>
    ///An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public.
    ///<see cref="http://schema.org/ArchiveOrganization"/>
    ///</summary>
    public static readonly Class ArchiveOrganization = new Class(new Uri("http://schema.org/ArchiveOrganization"));    

    ///<summary>
    ///The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.
    ///<see cref="http://schema.org/ArriveAction"/>
    ///</summary>
    public static readonly Class ArriveAction = new Class(new Uri("http://schema.org/ArriveAction"));    

    ///<summary>
    ///An art gallery.
    ///<see cref="http://schema.org/ArtGallery"/>
    ///</summary>
    public static readonly Class ArtGallery = new Class(new Uri("http://schema.org/ArtGallery"));    

    ///<summary>
    ///A type of blood vessel that specifically carries blood away from the heart.
    ///<see cref="http://schema.org/Artery"/>
    ///</summary>
    public static readonly Class Artery = new Class(new Uri("http://schema.org/Artery"));    

    ///<summary>
    ///An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/Article"/>
    ///</summary>
    public static readonly Class Article = new Class(new Uri("http://schema.org/Article"));    

    ///<summary>
    ///The act of posing a question / favor to someone.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/AskAction"/>
    ///</summary>
    public static readonly Class AskAction = new Class(new Uri("http://schema.org/AskAction"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> expressing an open call by a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.
    ///<see cref="http://schema.org/AskPublicNewsArticle"/>
    ///</summary>
    public static readonly Class AskPublicNewsArticle = new Class(new Uri("http://schema.org/AskPublicNewsArticle"));    

    ///<summary>
    ///The act of forming one's opinion, reaction or sentiment.
    ///<see cref="http://schema.org/AssessAction"/>
    ///</summary>
    public static readonly Class AssessAction = new Class(new Uri("http://schema.org/AssessAction"));    

    ///<summary>
    ///The act of allocating an action/event/task to some destination (someone or something).
    ///<see cref="http://schema.org/AssignAction"/>
    ///</summary>
    public static readonly Class AssignAction = new Class(new Uri("http://schema.org/AssignAction"));    

    ///<summary>
    ///A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.
    ///<see cref="http://schema.org/Atlas"/>
    ///</summary>
    public static readonly Class Atlas = new Class(new Uri("http://schema.org/Atlas"));    

    ///<summary>
    ///Professional service: Attorney. <br/><br/>
    ///
    ///This type is deprecated - <a class="localLink" href="http://schema.org/LegalService">LegalService</a> is more inclusive and less ambiguous.
    ///<see cref="http://schema.org/Attorney"/>
    ///</summary>
    public static readonly Class Attorney = new Class(new Uri("http://schema.org/Attorney"));    

    ///<summary>
    ///Intended audience for an item, i.e. the group for whom the item was created.
    ///<see cref="http://schema.org/Audience"/>
    ///</summary>
    public static readonly Class Audience = new Class(new Uri("http://schema.org/Audience"));    

    ///<summary>
    ///An audio file.
    ///<see cref="http://schema.org/AudioObject"/>
    ///</summary>
    public static readonly Class AudioObject = new Class(new Uri("http://schema.org/AudioObject"));    

    ///<summary>
    ///An audiobook.
    ///<see cref="http://schema.org/Audiobook"/>
    ///</summary>
    public static readonly Class Audiobook = new Class(new Uri("http://schema.org/Audiobook"));    

    ///<summary>
    ///The act of granting permission to an object.
    ///<see cref="http://schema.org/AuthorizeAction"/>
    ///</summary>
    public static readonly Class AuthorizeAction = new Class(new Uri("http://schema.org/AuthorizeAction"));    

    ///<summary>
    ///Auto body shop.
    ///<see cref="http://schema.org/AutoBodyShop"/>
    ///</summary>
    public static readonly Class AutoBodyShop = new Class(new Uri("http://schema.org/AutoBodyShop"));    

    ///<summary>
    ///An car dealership.
    ///<see cref="http://schema.org/AutoDealer"/>
    ///</summary>
    public static readonly Class AutoDealer = new Class(new Uri("http://schema.org/AutoDealer"));    

    ///<summary>
    ///An auto parts store.
    ///<see cref="http://schema.org/AutoPartsStore"/>
    ///</summary>
    public static readonly Class AutoPartsStore = new Class(new Uri("http://schema.org/AutoPartsStore"));    

    ///<summary>
    ///A car rental business.
    ///<see cref="http://schema.org/AutoRental"/>
    ///</summary>
    public static readonly Class AutoRental = new Class(new Uri("http://schema.org/AutoRental"));    

    ///<summary>
    ///Car repair business.
    ///<see cref="http://schema.org/AutoRepair"/>
    ///</summary>
    public static readonly Class AutoRepair = new Class(new Uri("http://schema.org/AutoRepair"));    

    ///<summary>
    ///A car wash business.
    ///<see cref="http://schema.org/AutoWash"/>
    ///</summary>
    public static readonly Class AutoWash = new Class(new Uri("http://schema.org/AutoWash"));    

    ///<summary>
    ///ATM/cash machine.
    ///<see cref="http://schema.org/AutomatedTeller"/>
    ///</summary>
    public static readonly Class AutomatedTeller = new Class(new Uri("http://schema.org/AutomatedTeller"));    

    ///<summary>
    ///Car repair, sales, or parts.
    ///<see cref="http://schema.org/AutomotiveBusiness"/>
    ///</summary>
    public static readonly Class AutomotiveBusiness = new Class(new Uri("http://schema.org/AutomotiveBusiness"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> providing historical context, definition and detail on a specific topic (aka "explainer" or "backgrounder"). For example, an in-depth article or frequently-asked-questions (<a href="https://en.wikipedia.org/wiki/FAQ">FAQ</a>) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using <a class="localLink" href="http://schema.org/Book">Book</a> or <a class="localLink" href="http://schema.org/Article">Article</a>, in particular <a class="localLink" href="http://schema.org/ScholarlyArticle">ScholarlyArticle</a>. See also <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> for related vocabulary from a learning/education perspective.
    ///<see cref="http://schema.org/BackgroundNewsArticle"/>
    ///</summary>
    public static readonly Class BackgroundNewsArticle = new Class(new Uri("http://schema.org/BackgroundNewsArticle"));    

    ///<summary>
    ///A bakery.
    ///<see cref="http://schema.org/Bakery"/>
    ///</summary>
    public static readonly Class Bakery = new Class(new Uri("http://schema.org/Bakery"));    

    ///<summary>
    ///A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.
    ///<see cref="http://schema.org/BankAccount"/>
    ///</summary>
    public static readonly Class BankAccount = new Class(new Uri("http://schema.org/BankAccount"));    

    ///<summary>
    ///Bank or credit union.
    ///<see cref="http://schema.org/BankOrCreditUnion"/>
    ///</summary>
    public static readonly Class BankOrCreditUnion = new Class(new Uri("http://schema.org/BankOrCreditUnion"));    

    ///<summary>
    ///A bar or pub.
    ///<see cref="http://schema.org/BarOrPub"/>
    ///</summary>
    public static readonly Class BarOrPub = new Class(new Uri("http://schema.org/BarOrPub"));    

    ///<summary>
    ///An image of a visual machine-readable code such as a barcode or QR code.
    ///<see cref="http://schema.org/Barcode"/>
    ///</summary>
    public static readonly Class Barcode = new Class(new Uri("http://schema.org/Barcode"));    

    ///<summary>
    ///Beach.
    ///<see cref="http://schema.org/Beach"/>
    ///</summary>
    public static readonly Class Beach = new Class(new Uri("http://schema.org/Beach"));    

    ///<summary>
    ///Beauty salon.
    ///<see cref="http://schema.org/BeautySalon"/>
    ///</summary>
    public static readonly Class BeautySalon = new Class(new Uri("http://schema.org/BeautySalon"));    

    ///<summary>
    ///Bed and breakfast.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/BedAndBreakfast"/>
    ///</summary>
    public static readonly Class BedAndBreakfast = new Class(new Uri("http://schema.org/BedAndBreakfast"));    

    ///<summary>
    ///An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class="localLink" href="http://schema.org/BedType">BedType</a> (under development).
    ///<see cref="http://schema.org/BedDetails"/>
    ///</summary>
    public static readonly Class BedDetails = new Class(new Uri("http://schema.org/BedDetails"));    

    ///<summary>
    ///A type of bed. This is used for indicating the bed or beds available in an accommodation.
    ///<see cref="http://schema.org/BedType"/>
    ///</summary>
    public static readonly Class BedType = new Class(new Uri("http://schema.org/BedType"));    

    ///<summary>
    ///The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BefriendAction"/>
    ///</summary>
    public static readonly Class BefriendAction = new Class(new Uri("http://schema.org/BefriendAction"));    

    ///<summary>
    ///A bike store.
    ///<see cref="http://schema.org/BikeStore"/>
    ///</summary>
    public static readonly Class BikeStore = new Class(new Uri("http://schema.org/BikeStore"));    

    ///<summary>
    ///A blog.
    ///<see cref="http://schema.org/Blog"/>
    ///</summary>
    public static readonly Class Blog = new Class(new Uri("http://schema.org/Blog"));    

    ///<summary>
    ///A blog post.
    ///<see cref="http://schema.org/BlogPosting"/>
    ///</summary>
    public static readonly Class BlogPosting = new Class(new Uri("http://schema.org/BlogPosting"));    

    ///<summary>
    ///A medical test performed on a sample of a patient's blood.
    ///<see cref="http://schema.org/BloodTest"/>
    ///</summary>
    public static readonly Class BloodTest = new Class(new Uri("http://schema.org/BloodTest"));    

    ///<summary>
    ///A type of boarding policy used by an airline.
    ///<see cref="http://schema.org/BoardingPolicyType"/>
    ///</summary>
    public static readonly Class BoardingPolicyType = new Class(new Uri("http://schema.org/BoardingPolicyType"));    

    ///<summary>
    ///A body of water, such as a sea, ocean, or lake.
    ///<see cref="http://schema.org/BodyOfWater"/>
    ///</summary>
    public static readonly Class BodyOfWater = new Class(new Uri("http://schema.org/BodyOfWater"));    

    ///<summary>
    ///Rigid connective tissue that comprises up the skeletal structure of the human body.
    ///<see cref="http://schema.org/Bone"/>
    ///</summary>
    public static readonly Class Bone = new Class(new Uri("http://schema.org/Bone"));    

    ///<summary>
    ///A book.
    ///<see cref="http://schema.org/Book"/>
    ///</summary>
    public static readonly Class Book = new Class(new Uri("http://schema.org/Book"));    

    ///<summary>
    ///The publication format of the book.
    ///<see cref="http://schema.org/BookFormatType"/>
    ///</summary>
    public static readonly Class BookFormatType = new Class(new Uri("http://schema.org/BookFormatType"));    

    ///<summary>
    ///A series of books. Included books can be indicated with the hasPart property.
    ///<see cref="http://schema.org/BookSeries"/>
    ///</summary>
    public static readonly Class BookSeries = new Class(new Uri("http://schema.org/BookSeries"));    

    ///<summary>
    ///A bookstore.
    ///<see cref="http://schema.org/BookStore"/>
    ///</summary>
    public static readonly Class BookStore = new Class(new Uri("http://schema.org/BookStore"));    

    ///<summary>
    ///An agent bookmarks/flags/labels/tags/marks an object.
    ///<see cref="http://schema.org/BookmarkAction"/>
    ///</summary>
    public static readonly Class BookmarkAction = new Class(new Uri("http://schema.org/BookmarkAction"));    

    ///<summary>
    ///Boolean: True or False.
    ///<see cref="http://schema.org/Boolean"/>
    ///</summary>
    public static readonly Class Boolean = new Class(new Uri("http://schema.org/Boolean"));    

    ///<summary>
    ///The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BorrowAction"/>
    ///</summary>
    public static readonly Class BorrowAction = new Class(new Uri("http://schema.org/BorrowAction"));    

    ///<summary>
    ///A bowling alley.
    ///<see cref="http://schema.org/BowlingAlley"/>
    ///</summary>
    public static readonly Class BowlingAlley = new Class(new Uri("http://schema.org/BowlingAlley"));    

    ///<summary>
    ///Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.
    ///<see cref="http://schema.org/BrainStructure"/>
    ///</summary>
    public static readonly Class BrainStructure = new Class(new Uri("http://schema.org/BrainStructure"));    

    ///<summary>
    ///A brand is a name used by an organization or business person for labeling a product, product group, or similar.
    ///<see cref="http://schema.org/Brand"/>
    ///</summary>
    public static readonly Class Brand = new Class(new Uri("http://schema.org/Brand"));    

    ///<summary>
    ///A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.<br/><br/>
    ///
    ///The <a class="localLink" href="http://schema.org/position">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class="localLink" href="http://schema.org/itemListOrder">itemListOrder</a> of <a class="localLink" href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
    ///<see cref="http://schema.org/BreadcrumbList"/>
    ///</summary>
    public static readonly Class BreadcrumbList = new Class(new Uri("http://schema.org/BreadcrumbList"));    

    ///<summary>
    ///Brewery.
    ///<see cref="http://schema.org/Brewery"/>
    ///</summary>
    public static readonly Class Brewery = new Class(new Uri("http://schema.org/Brewery"));    

    ///<summary>
    ///A bridge.
    ///<see cref="http://schema.org/Bridge"/>
    ///</summary>
    public static readonly Class Bridge = new Class(new Uri("http://schema.org/Bridge"));    

    ///<summary>
    ///A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/BroadcastChannel"/>
    ///</summary>
    public static readonly Class BroadcastChannel = new Class(new Uri("http://schema.org/BroadcastChannel"));    

    ///<summary>
    ///An over the air or online broadcast event.
    ///<see cref="http://schema.org/BroadcastEvent"/>
    ///</summary>
    public static readonly Class BroadcastEvent = new Class(new Uri("http://schema.org/BroadcastEvent"));    

    ///<summary>
    ///The frequency in MHz and the modulation used for a particular BroadcastService.
    ///<see cref="http://schema.org/BroadcastFrequencySpecification"/>
    ///</summary>
    public static readonly Class BroadcastFrequencySpecification = new Class(new Uri("http://schema.org/BroadcastFrequencySpecification"));    

    ///<summary>
    ///A delivery service through which content is provided via broadcast over the air or online.
    ///<see cref="http://schema.org/BroadcastService"/>
    ///</summary>
    public static readonly Class BroadcastService = new Class(new Uri("http://schema.org/BroadcastService"));    

    ///<summary>
    ///An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.
    ///<see cref="http://schema.org/BrokerageAccount"/>
    ///</summary>
    public static readonly Class BrokerageAccount = new Class(new Uri("http://schema.org/BrokerageAccount"));    

    ///<summary>
    ///A Buddhist temple.
    ///<see cref="http://schema.org/BuddhistTemple"/>
    ///</summary>
    public static readonly Class BuddhistTemple = new Class(new Uri("http://schema.org/BuddhistTemple"));    

    ///<summary>
    ///A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury busses, usually in service for long distance travel.
    ///<see cref="http://schema.org/BusOrCoach"/>
    ///</summary>
    public static readonly Class BusOrCoach = new Class(new Uri("http://schema.org/BusOrCoach"));    

    ///<summary>
    ///A reservation for bus travel. <br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/BusReservation"/>
    ///</summary>
    public static readonly Class BusReservation = new Class(new Uri("http://schema.org/BusReservation"));    

    ///<summary>
    ///A bus station.
    ///<see cref="http://schema.org/BusStation"/>
    ///</summary>
    public static readonly Class BusStation = new Class(new Uri("http://schema.org/BusStation"));    

    ///<summary>
    ///A bus stop.
    ///<see cref="http://schema.org/BusStop"/>
    ///</summary>
    public static readonly Class BusStop = new Class(new Uri("http://schema.org/BusStop"));    

    ///<summary>
    ///A trip on a commercial bus line.
    ///<see cref="http://schema.org/BusTrip"/>
    ///</summary>
    public static readonly Class BusTrip = new Class(new Uri("http://schema.org/BusTrip"));    

    ///<summary>
    ///A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
    ///<see cref="http://schema.org/BusinessAudience"/>
    ///</summary>
    public static readonly Class BusinessAudience = new Class(new Uri("http://schema.org/BusinessAudience"));    

    ///<summary>
    ///A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#Business</li>
    ///<li>http://purl.org/goodrelations/v1#Enduser</li>
    ///<li>http://purl.org/goodrelations/v1#PublicInstitution</li>
    ///<li>http://purl.org/goodrelations/v1#Reseller</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BusinessEntityType"/>
    ///</summary>
    public static readonly Class BusinessEntityType = new Class(new Uri("http://schema.org/BusinessEntityType"));    

    ///<summary>
    ///Event type: Business event.
    ///<see cref="http://schema.org/BusinessEvent"/>
    ///</summary>
    public static readonly Class BusinessEvent = new Class(new Uri("http://schema.org/BusinessEvent"));    

    ///<summary>
    ///The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
    ///<li>http://purl.org/goodrelations/v1#Dispose</li>
    ///<li>http://purl.org/goodrelations/v1#LeaseOut</li>
    ///<li>http://purl.org/goodrelations/v1#Maintain</li>
    ///<li>http://purl.org/goodrelations/v1#ProvideService</li>
    ///<li>http://purl.org/goodrelations/v1#Repair</li>
    ///<li>http://purl.org/goodrelations/v1#Sell</li>
    ///<li>http://purl.org/goodrelations/v1#Buy</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BusinessFunction"/>
    ///</summary>
    public static readonly Class BusinessFunction = new Class(new Uri("http://schema.org/BusinessFunction"));    

    ///<summary>
    ///The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
    ///<see cref="http://schema.org/BuyAction"/>
    ///</summary>
    public static readonly Class BuyAction = new Class(new Uri("http://schema.org/BuyAction"));    

    ///<summary>
    ///A service which provides access to media programming like TV or radio. Access may be via cable or satellite.
    ///<see cref="http://schema.org/CableOrSatelliteService"/>
    ///</summary>
    public static readonly Class CableOrSatelliteService = new Class(new Uri("http://schema.org/CableOrSatelliteService"));    

    ///<summary>
    ///A cafe or coffee shop.
    ///<see cref="http://schema.org/CafeOrCoffeeShop"/>
    ///</summary>
    public static readonly Class CafeOrCoffeeShop = new Class(new Uri("http://schema.org/CafeOrCoffeeShop"));    

    ///<summary>
    ///A camping site, campsite, or <a class="localLink" href="http://schema.org/Campground">Campground</a> is a place used for overnight stay in the outdoors, typically containing individual <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> locations. <br/><br/>
    ///
    ///In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
    ///
    ///See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Campground"/>
    ///</summary>
    public static readonly Class Campground = new Class(new Uri("http://schema.org/Campground"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or <a class="localLink" href="http://schema.org/Campground">Campground</a>.<br/><br/>
    ///
    ///In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
    ///(Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
    ///
    ///See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/CampingPitch"/>
    ///</summary>
    public static readonly Class CampingPitch = new Class(new Uri("http://schema.org/CampingPitch"));    

    ///<summary>
    ///A canal, like the Panama Canal.
    ///<see cref="http://schema.org/Canal"/>
    ///</summary>
    public static readonly Class Canal = new Class(new Uri("http://schema.org/Canal"));    

    ///<summary>
    ///The act of asserting that a future event/action is no longer going to happen.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of CancelAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CancelAction"/>
    ///</summary>
    public static readonly Class CancelAction = new Class(new Uri("http://schema.org/CancelAction"));    

    ///<summary>
    ///A car is a wheeled, self-powered motor vehicle used for transportation.
    ///<see cref="http://schema.org/Car"/>
    ///</summary>
    public static readonly Class Car = new Class(new Uri("http://schema.org/Car"));    

    ///<summary>
    ///A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.
    ///<see cref="http://schema.org/CarUsageType"/>
    ///</summary>
    public static readonly Class CarUsageType = new Class(new Uri("http://schema.org/CarUsageType"));    

    ///<summary>
    ///A casino.
    ///<see cref="http://schema.org/Casino"/>
    ///</summary>
    public static readonly Class Casino = new Class(new Uri("http://schema.org/Casino"));    

    ///<summary>
    ///A Category Code.
    ///<see cref="http://schema.org/CategoryCode"/>
    ///</summary>
    public static readonly Class CategoryCode = new Class(new Uri("http://schema.org/CategoryCode"));    

    ///<summary>
    ///A set of Category Code values.
    ///<see cref="http://schema.org/CategoryCodeSet"/>
    ///</summary>
    public static readonly Class CategoryCodeSet = new Class(new Uri("http://schema.org/CategoryCodeSet"));    

    ///<summary>
    ///A Catholic church.
    ///<see cref="http://schema.org/CatholicChurch"/>
    ///</summary>
    public static readonly Class CatholicChurch = new Class(new Uri("http://schema.org/CatholicChurch"));    

    ///<summary>
    ///A graveyard.
    ///<see cref="http://schema.org/Cemetery"/>
    ///</summary>
    public static readonly Class Cemetery = new Class(new Uri("http://schema.org/Cemetery"));    

    ///<summary>
    ///One of the sections into which a book is divided. A chapter usually has a section number or a name.
    ///<see cref="http://schema.org/Chapter"/>
    ///</summary>
    public static readonly Class Chapter = new Class(new Uri("http://schema.org/Chapter"));    

    ///<summary>
    ///An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.
    ///<see cref="http://schema.org/CheckAction"/>
    ///</summary>
    public static readonly Class CheckAction = new Class(new Uri("http://schema.org/CheckAction"));    

    ///<summary>
    ///The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of CheckInAction.</li>
    ///<li><a class="localLink" href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>
    ///<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CheckInAction"/>
    ///</summary>
    public static readonly Class CheckInAction = new Class(new Uri("http://schema.org/CheckInAction"));    

    ///<summary>
    ///The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of CheckOutAction.</li>
    ///<li><a class="localLink" href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
    ///<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CheckOutAction"/>
    ///</summary>
    public static readonly Class CheckOutAction = new Class(new Uri("http://schema.org/CheckOutAction"));    

    ///<summary>
    ///Web page type: Checkout page.
    ///<see cref="http://schema.org/CheckoutPage"/>
    ///</summary>
    public static readonly Class CheckoutPage = new Class(new Uri("http://schema.org/CheckoutPage"));    

    ///<summary>
    ///A Childcare center.
    ///<see cref="http://schema.org/ChildCare"/>
    ///</summary>
    public static readonly Class ChildCare = new Class(new Uri("http://schema.org/ChildCare"));    

    ///<summary>
    ///Event type: Children's event.
    ///<see cref="http://schema.org/ChildrensEvent"/>
    ///</summary>
    public static readonly Class ChildrensEvent = new Class(new Uri("http://schema.org/ChildrensEvent"));    

    ///<summary>
    ///The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
    ///<see cref="http://schema.org/ChooseAction"/>
    ///</summary>
    public static readonly Class ChooseAction = new Class(new Uri("http://schema.org/ChooseAction"));    

    ///<summary>
    ///A church.
    ///<see cref="http://schema.org/Church"/>
    ///</summary>
    public static readonly Class Church = new Class(new Uri("http://schema.org/Church"));    

    ///<summary>
    ///A city or town.
    ///<see cref="http://schema.org/City"/>
    ///</summary>
    public static readonly Class City = new Class(new Uri("http://schema.org/City"));    

    ///<summary>
    ///A city hall.
    ///<see cref="http://schema.org/CityHall"/>
    ///</summary>
    public static readonly Class CityHall = new Class(new Uri("http://schema.org/CityHall"));    

    ///<summary>
    ///A public structure, such as a town hall or concert hall.
    ///<see cref="http://schema.org/CivicStructure"/>
    ///</summary>
    public static readonly Class CivicStructure = new Class(new Uri("http://schema.org/CivicStructure"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/Claim">Claim</a> in Schema.org represents a specific, factually-oriented claim that could be the <a class="localLink" href="http://schema.org/itemReviewed">itemReviewed</a> in a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>. The content of a claim can be summarized with the <a class="localLink" href="http://schema.org/text">text</a> property. Variations on well known claims can have their common identity indicated via <a class="localLink" href="http://schema.org/sameAs">sameAs</a> links, and summarized with a <a class="localLink" href="http://schema.org/name">name</a>. Ideally, a <a class="localLink" href="http://schema.org/Claim">Claim</a> description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.<br/><br/>
    ///
    ///Beyond <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>, the Claim type can be associated with related creative works - for example a <a class="localLink" href="http://schema.org/ScholaryArticle">ScholaryArticle</a> or <a class="localLink" href="http://schema.org/Question">Question</a> might be <a class="localLink" href="http://schema.org/about">about</a> some <a class="localLink" href="http://schema.org/Claim">Claim</a>.<br/><br/>
    ///
    ///At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.
    ///<see cref="http://schema.org/Claim"/>
    ///</summary>
    public static readonly Class Claim = new Class(new Uri("http://schema.org/Claim"));    

    ///<summary>
    ///A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).
    ///<see cref="http://schema.org/ClaimReview"/>
    ///</summary>
    public static readonly Class ClaimReview = new Class(new Uri("http://schema.org/ClaimReview"));    

    ///<summary>
    ///A class, also often called a 'Type'; equivalent to rdfs:Class.
    ///<see cref="http://schema.org/Class"/>
    ///</summary>
    public static readonly Class Class = new Class(new Uri("http://schema.org/Class"));    

    ///<summary>
    ///A short TV or radio program or a segment/part of a program.
    ///<see cref="http://schema.org/Clip"/>
    ///</summary>
    public static readonly Class Clip = new Class(new Uri("http://schema.org/Clip"));    

    ///<summary>
    ///A clothing store.
    ///<see cref="http://schema.org/ClothingStore"/>
    ///</summary>
    public static readonly Class ClothingStore = new Class(new Uri("http://schema.org/ClothingStore"));    

    ///<summary>
    ///Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
    ///<see cref="http://schema.org/Code"/>
    ///</summary>
    public static readonly Class Code = new Class(new Uri("http://schema.org/Code"));    

    ///<summary>
    ///A created collection of Creative Works or other artefacts.
    ///<see cref="http://schema.org/Collection"/>
    ///</summary>
    public static readonly Class Collection = new Class(new Uri("http://schema.org/Collection"));    

    ///<summary>
    ///Web page type: Collection page.
    ///<see cref="http://schema.org/CollectionPage"/>
    ///</summary>
    public static readonly Class CollectionPage = new Class(new Uri("http://schema.org/CollectionPage"));    

    ///<summary>
    ///A college, university, or other third-level educational institution.
    ///<see cref="http://schema.org/CollegeOrUniversity"/>
    ///</summary>
    public static readonly Class CollegeOrUniversity = new Class(new Uri("http://schema.org/CollegeOrUniversity"));    

    ///<summary>
    ///A comedy club.
    ///<see cref="http://schema.org/ComedyClub"/>
    ///</summary>
    public static readonly Class ComedyClub = new Class(new Uri("http://schema.org/ComedyClub"));    

    ///<summary>
    ///Event type: Comedy event.
    ///<see cref="http://schema.org/ComedyEvent"/>
    ///</summary>
    public static readonly Class ComedyEvent = new Class(new Uri("http://schema.org/ComedyEvent"));    

    ///<summary>
    ///The artwork on the cover of a comic.
    ///<see cref="http://schema.org/ComicCoverArt"/>
    ///</summary>
    public static readonly Class ComicCoverArt = new Class(new Uri("http://schema.org/ComicCoverArt"));    

    ///<summary>
    ///Individual comic issues are serially published as
    ///    part of a larger series. For the sake of consistency, even one-shot issues
    ///    belong to a series comprised of a single issue. All comic issues can be
    ///    uniquely identified by: the combination of the name and volume number of the
    ///    series to which the issue belongs; the issue number; and the variant
    ///    description of the issue (if any).
    ///<see cref="http://schema.org/ComicIssue"/>
    ///</summary>
    public static readonly Class ComicIssue = new Class(new Uri("http://schema.org/ComicIssue"));    

    ///<summary>
    ///A sequential publication of comic stories under a
    ///    unifying title, for example "The Amazing Spider-Man" or "Groo the
    ///    Wanderer".
    ///<see cref="http://schema.org/ComicSeries"/>
    ///</summary>
    public static readonly Class ComicSeries = new Class(new Uri("http://schema.org/ComicSeries"));    

    ///<summary>
    ///The term "story" is any indivisible, re-printable
    ///    unit of a comic, including the interior stories, covers, and backmatter. Most
    ///    comics have at least two stories: a cover (ComicCoverArt) and an interior story.
    ///<see cref="http://schema.org/ComicStory"/>
    ///</summary>
    public static readonly Class ComicStory = new Class(new Uri("http://schema.org/ComicStory"));    

    ///<summary>
    ///A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class="localLink" href="http://schema.org/text">text</a> property, and its topic via <a class="localLink" href="http://schema.org/about">about</a>, properties shared with all CreativeWorks.
    ///<see cref="http://schema.org/Comment"/>
    ///</summary>
    public static readonly Class Comment = new Class(new Uri("http://schema.org/Comment"));    

    ///<summary>
    ///The act of generating a comment about a subject.
    ///<see cref="http://schema.org/CommentAction"/>
    ///</summary>
    public static readonly Class CommentAction = new Class(new Uri("http://schema.org/CommentAction"));    

    ///<summary>
    ///The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
    ///<see cref="http://schema.org/CommunicateAction"/>
    ///</summary>
    public static readonly Class CommunicateAction = new Class(new Uri("http://schema.org/CommunicateAction"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CompleteDataFeed">CompleteDataFeed</a> is a <a class="localLink" href="http://schema.org/DataFeed">DataFeed</a> whose standard representation includes content for every item currently in the feed.<br/><br/>
    ///
    ///This is the equivalent of Atom's element as defined in Feed Paging and Archiving <a href="https://tools.ietf.org/html/rfc5005">RFC 5005</a>, For example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. "Top Twenty Records") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.
    ///<see cref="http://schema.org/CompleteDataFeed"/>
    ///</summary>
    public static readonly Class CompleteDataFeed = new Class(new Uri("http://schema.org/CompleteDataFeed"));    

    ///<summary>
    ///A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning").
    ///<see cref="http://schema.org/CompoundPriceSpecification"/>
    ///</summary>
    public static readonly Class CompoundPriceSpecification = new Class(new Uri("http://schema.org/CompoundPriceSpecification"));    

    ///<summary>
    ///This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class="localLink" href="http://schema.org/Language">Language</a> type.
    ///<see cref="http://schema.org/ComputerLanguage"/>
    ///</summary>
    public static readonly Class ComputerLanguage = new Class(new Uri("http://schema.org/ComputerLanguage"));    

    ///<summary>
    ///A computer store.
    ///<see cref="http://schema.org/ComputerStore"/>
    ///</summary>
    public static readonly Class ComputerStore = new Class(new Uri("http://schema.org/ComputerStore"));    

    ///<summary>
    ///The act of notifying someone that a future event/action is going to happen as expected.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: The antonym of ConfirmAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ConfirmAction"/>
    ///</summary>
    public static readonly Class ConfirmAction = new Class(new Uri("http://schema.org/ConfirmAction"));    

    ///<summary>
    ///A Consortium is a membership <a class="localLink" href="http://schema.org/Organization">Organization</a> whose members are typically Organizations.
    ///<see cref="http://schema.org/Consortium"/>
    ///</summary>
    public static readonly Class Consortium = new Class(new Uri("http://schema.org/Consortium"));    

    ///<summary>
    ///The act of ingesting information/resources/food.
    ///<see cref="http://schema.org/ConsumeAction"/>
    ///</summary>
    public static readonly Class ConsumeAction = new Class(new Uri("http://schema.org/ConsumeAction"));    

    ///<summary>
    ///Web page type: Contact page.
    ///<see cref="http://schema.org/ContactPage"/>
    ///</summary>
    public static readonly Class ContactPage = new Class(new Uri("http://schema.org/ContactPage"));    

    ///<summary>
    ///A contact point&#x2014;for example, a Customer Complaints department.
    ///<see cref="http://schema.org/ContactPoint"/>
    ///</summary>
    public static readonly Class ContactPoint = new Class(new Uri("http://schema.org/ContactPoint"));    

    ///<summary>
    ///Enumerated options related to a ContactPoint.
    ///<see cref="http://schema.org/ContactPointOption"/>
    ///</summary>
    public static readonly Class ContactPointOption = new Class(new Uri("http://schema.org/ContactPointOption"));    

    ///<summary>
    ///One of the continents (for example, Europe or Africa).
    ///<see cref="http://schema.org/Continent"/>
    ///</summary>
    public static readonly Class Continent = new Class(new Uri("http://schema.org/Continent"));    

    ///<summary>
    ///An agent controls a device or application.
    ///<see cref="http://schema.org/ControlAction"/>
    ///</summary>
    public static readonly Class ControlAction = new Class(new Uri("http://schema.org/ControlAction"));    

    ///<summary>
    ///A convenience store.
    ///<see cref="http://schema.org/ConvenienceStore"/>
    ///</summary>
    public static readonly Class ConvenienceStore = new Class(new Uri("http://schema.org/ConvenienceStore"));    

    ///<summary>
    ///One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
    ///<see cref="http://schema.org/Conversation"/>
    ///</summary>
    public static readonly Class Conversation = new Class(new Uri("http://schema.org/Conversation"));    

    ///<summary>
    ///The act of producing/preparing food.
    ///<see cref="http://schema.org/CookAction"/>
    ///</summary>
    public static readonly Class CookAction = new Class(new Uri("http://schema.org/CookAction"));    

    ///<summary>
    ///Organization: A business corporation.
    ///<see cref="http://schema.org/Corporation"/>
    ///</summary>
    public static readonly Class Corporation = new Class(new Uri("http://schema.org/Corporation"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/comment">comment</a> that corrects <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/CorrectionComment"/>
    ///</summary>
    public static readonly Class CorrectionComment = new Class(new Uri("http://schema.org/CorrectionComment"));    

    ///<summary>
    ///A country.
    ///<see cref="http://schema.org/Country"/>
    ///</summary>
    public static readonly Class Country = new Class(new Uri("http://schema.org/Country"));    

    ///<summary>
    ///A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.
    ///<see cref="http://schema.org/Course"/>
    ///</summary>
    public static readonly Class Course = new Class(new Uri("http://schema.org/Course"));    

    ///<summary>
    ///An instance of a <a class="localLink" href="http://schema.org/Course">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.
    ///<see cref="http://schema.org/CourseInstance"/>
    ///</summary>
    public static readonly Class CourseInstance = new Class(new Uri("http://schema.org/CourseInstance"));    

    ///<summary>
    ///A courthouse.
    ///<see cref="http://schema.org/Courthouse"/>
    ///</summary>
    public static readonly Class Courthouse = new Class(new Uri("http://schema.org/Courthouse"));    

    ///<summary>
    ///The artwork on the outer surface of a CreativeWork.
    ///<see cref="http://schema.org/CoverArt"/>
    ///</summary>
    public static readonly Class CoverArt = new Class(new Uri("http://schema.org/CoverArt"));    

    ///<summary>
    ///The act of deliberately creating/producing/generating/building a result out of the agent.
    ///<see cref="http://schema.org/CreateAction"/>
    ///</summary>
    public static readonly Class CreateAction = new Class(new Uri("http://schema.org/CreateAction"));    

    ///<summary>
    ///The most generic kind of creative work, including books, movies, photographs, software programs, etc.
    ///<see cref="http://schema.org/CreativeWork"/>
    ///</summary>
    public static readonly Class CreativeWork = new Class(new Uri("http://schema.org/CreativeWork"));    

    ///<summary>
    ///A media season e.g. tv, radio, video game etc.
    ///<see cref="http://schema.org/CreativeWorkSeason"/>
    ///</summary>
    public static readonly Class CreativeWorkSeason = new Class(new Uri("http://schema.org/CreativeWorkSeason"));    

    ///<summary>
    ///A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>
    ///
    ///Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>
    ///
    ///It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
    ///<see cref="http://schema.org/CreativeWorkSeries"/>
    ///</summary>
    public static readonly Class CreativeWorkSeries = new Class(new Uri("http://schema.org/CreativeWorkSeries"));    

    ///<summary>
    ///A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#AmericanExpress</li>
    ///<li>http://purl.org/goodrelations/v1#DinersClub</li>
    ///<li>http://purl.org/goodrelations/v1#Discover</li>
    ///<li>http://purl.org/goodrelations/v1#JCB</li>
    ///<li>http://purl.org/goodrelations/v1#MasterCard</li>
    ///<li>http://purl.org/goodrelations/v1#VISA</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CreditCard"/>
    ///</summary>
    public static readonly Class CreditCard = new Class(new Uri("http://schema.org/CreditCard"));    

    ///<summary>
    ///A crematorium.
    ///<see cref="http://schema.org/Crematorium"/>
    ///</summary>
    public static readonly Class Crematorium = new Class(new Uri("http://schema.org/Crematorium"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a> is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a>s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the <a class="localLink" href="http://schema.org/UserReview">UserReview</a> type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.
    ///<see cref="http://schema.org/CriticReview"/>
    ///</summary>
    public static readonly Class CriticReview = new Class(new Uri("http://schema.org/CriticReview"));    

    ///<summary>
    ///Text representing a CSS selector.
    ///<see cref="http://schema.org/CssSelectorType"/>
    ///</summary>
    public static readonly Class CssSelectorType = new Class(new Uri("http://schema.org/CssSelectorType"));    

    ///<summary>
    ///A service to convert funds from one currency to another currency.
    ///<see cref="http://schema.org/CurrencyConversionService"/>
    ///</summary>
    public static readonly Class CurrencyConversionService = new Class(new Uri("http://schema.org/CurrencyConversionService"));    

    ///<summary>
    ///An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.
    ///<see cref="http://schema.org/DDxElement"/>
    ///</summary>
    public static readonly Class DDxElement = new Class(new Uri("http://schema.org/DDxElement"));    

    ///<summary>
    ///Event type: A social dance.
    ///<see cref="http://schema.org/DanceEvent"/>
    ///</summary>
    public static readonly Class DanceEvent = new Class(new Uri("http://schema.org/DanceEvent"));    

    ///<summary>
    ///A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
    ///<see cref="http://schema.org/DanceGroup"/>
    ///</summary>
    public static readonly Class DanceGroup = new Class(new Uri("http://schema.org/DanceGroup"));    

    ///<summary>
    ///A collection of datasets.
    ///<see cref="http://schema.org/DataCatalog"/>
    ///</summary>
    public static readonly Class DataCatalog = new Class(new Uri("http://schema.org/DataCatalog"));    

    ///<summary>
    ///A dataset in downloadable form.
    ///<see cref="http://schema.org/DataDownload"/>
    ///</summary>
    public static readonly Class DataDownload = new Class(new Uri("http://schema.org/DataDownload"));    

    ///<summary>
    ///A single feed providing structured information about one or more entities or topics.
    ///<see cref="http://schema.org/DataFeed"/>
    ///</summary>
    public static readonly Class DataFeed = new Class(new Uri("http://schema.org/DataFeed"));    

    ///<summary>
    ///A single item within a larger data feed.
    ///<see cref="http://schema.org/DataFeedItem"/>
    ///</summary>
    public static readonly Class DataFeedItem = new Class(new Uri("http://schema.org/DataFeedItem"));    

    ///<summary>
    ///The basic data types such as Integers, Strings, etc.
    ///<see cref="http://schema.org/DataType"/>
    ///</summary>
    public static readonly Class DataType = new Class(new Uri("http://schema.org/DataType"));    

    ///<summary>
    ///A body of structured information describing some topic(s) of interest.
    ///<see cref="http://schema.org/Dataset"/>
    ///</summary>
    public static readonly Class Dataset = new Class(new Uri("http://schema.org/Dataset"));    

    ///<summary>
    ///A date value in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
    ///<see cref="http://schema.org/Date"/>
    ///</summary>
    public static readonly Class Date = new Class(new Uri("http://schema.org/Date"));    

    ///<summary>
    ///A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
    ///<see cref="http://schema.org/DateTime"/>
    ///</summary>
    public static readonly Class DateTime = new Class(new Uri("http://schema.org/DateTime"));    

    ///<summary>
    ///A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type is recommended
    ///<see cref="http://schema.org/DatedMoneySpecification"/>
    ///</summary>
    public static readonly Class DatedMoneySpecification = new Class(new Uri("http://schema.org/DatedMoneySpecification"));    

    ///<summary>
    ///The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>
    ///
    ///Originally, URLs from <a href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a class="localLink" href="http://schema.org/Monday">Monday</a>, <a class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a class="localLink" href="http://schema.org/Friday">Friday</a>, <a class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special entry for <a class="localLink" href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now been integrated directly into schema.org.
    ///<see cref="http://schema.org/DayOfWeek"/>
    ///</summary>
    public static readonly Class DayOfWeek = new Class(new Uri("http://schema.org/DayOfWeek"));    

    ///<summary>
    ///A day spa.
    ///<see cref="http://schema.org/DaySpa"/>
    ///</summary>
    public static readonly Class DaySpa = new Class(new Uri("http://schema.org/DaySpa"));    

    ///<summary>
    ///The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).
    ///<see cref="http://schema.org/DeactivateAction"/>
    ///</summary>
    public static readonly Class DeactivateAction = new Class(new Uri("http://schema.org/DeactivateAction"));    

    ///<summary>
    ///A defence establishment, such as an army or navy base.
    ///<see cref="http://schema.org/DefenceEstablishment"/>
    ///</summary>
    public static readonly Class DefenceEstablishment = new Class(new Uri("http://schema.org/DefenceEstablishment"));    

    ///<summary>
    ///A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.
    ///<see cref="http://schema.org/DefinedTerm"/>
    ///</summary>
    public static readonly Class DefinedTerm = new Class(new Uri("http://schema.org/DefinedTerm"));    

    ///<summary>
    ///A set of defined terms for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.
    ///<see cref="http://schema.org/DefinedTermSet"/>
    ///</summary>
    public static readonly Class DefinedTermSet = new Class(new Uri("http://schema.org/DefinedTermSet"));    

    ///<summary>
    ///The act of editing a recipient by removing one of its objects.
    ///<see cref="http://schema.org/DeleteAction"/>
    ///</summary>
    public static readonly Class DeleteAction = new Class(new Uri("http://schema.org/DeleteAction"));    

    ///<summary>
    ///The price for the delivery of an offer using a particular delivery method.
    ///<see cref="http://schema.org/DeliveryChargeSpecification"/>
    ///</summary>
    public static readonly Class DeliveryChargeSpecification = new Class(new Uri("http://schema.org/DeliveryChargeSpecification"));    

    ///<summary>
    ///An event involving the delivery of an item.
    ///<see cref="http://schema.org/DeliveryEvent"/>
    ///</summary>
    public static readonly Class DeliveryEvent = new Class(new Uri("http://schema.org/DeliveryEvent"));    

    ///<summary>
    ///A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
    ///<li>http://purl.org/goodrelations/v1#DHL</li>
    ///<li>http://purl.org/goodrelations/v1#FederalExpress</li>
    ///<li>http://purl.org/goodrelations/v1#UPS</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/DeliveryMethod"/>
    ///</summary>
    public static readonly Class DeliveryMethod = new Class(new Uri("http://schema.org/DeliveryMethod"));    

    ///<summary>
    ///A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
    ///<see cref="http://schema.org/Demand"/>
    ///</summary>
    public static readonly Class Demand = new Class(new Uri("http://schema.org/Demand"));    

    ///<summary>
    ///A dentist.
    ///<see cref="http://schema.org/Dentist"/>
    ///</summary>
    public static readonly Class Dentist = new Class(new Uri("http://schema.org/Dentist"));    

    ///<summary>
    ///The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.
    ///<see cref="http://schema.org/DepartAction"/>
    ///</summary>
    public static readonly Class DepartAction = new Class(new Uri("http://schema.org/DepartAction"));    

    ///<summary>
    ///A department store.
    ///<see cref="http://schema.org/DepartmentStore"/>
    ///</summary>
    public static readonly Class DepartmentStore = new Class(new Uri("http://schema.org/DepartmentStore"));    

    ///<summary>
    ///A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.
    ///<see cref="http://schema.org/DepositAccount"/>
    ///</summary>
    public static readonly Class DepositAccount = new Class(new Uri("http://schema.org/DepositAccount"));    

    ///<summary>
    ///A medical laboratory that offers on-site or off-site diagnostic services.
    ///<see cref="http://schema.org/DiagnosticLab"/>
    ///</summary>
    public static readonly Class DiagnosticLab = new Class(new Uri("http://schema.org/DiagnosticLab"));    

    ///<summary>
    ///A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.
    ///<see cref="http://schema.org/DiagnosticProcedure"/>
    ///</summary>
    public static readonly Class DiagnosticProcedure = new Class(new Uri("http://schema.org/DiagnosticProcedure"));    

    ///<summary>
    ///A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.
    ///<see cref="http://schema.org/Diet"/>
    ///</summary>
    public static readonly Class Diet = new Class(new Uri("http://schema.org/Diet"));    

    ///<summary>
    ///A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
    ///<see cref="http://schema.org/DietarySupplement"/>
    ///</summary>
    public static readonly Class DietarySupplement = new Class(new Uri("http://schema.org/DietarySupplement"));    

    ///<summary>
    ///An electronic file or document.
    ///<see cref="http://schema.org/DigitalDocument"/>
    ///</summary>
    public static readonly Class DigitalDocument = new Class(new Uri("http://schema.org/DigitalDocument"));    

    ///<summary>
    ///A permission for a particular person or group to access a particular file.
    ///<see cref="http://schema.org/DigitalDocumentPermission"/>
    ///</summary>
    public static readonly Class DigitalDocumentPermission = new Class(new Uri("http://schema.org/DigitalDocumentPermission"));    

    ///<summary>
    ///A type of permission which can be granted for accessing a digital document.
    ///<see cref="http://schema.org/DigitalDocumentPermissionType"/>
    ///</summary>
    public static readonly Class DigitalDocumentPermissionType = new Class(new Uri("http://schema.org/DigitalDocumentPermissionType"));    

    ///<summary>
    ///The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/DisagreeAction"/>
    ///</summary>
    public static readonly Class DisagreeAction = new Class(new Uri("http://schema.org/DisagreeAction"));    

    ///<summary>
    ///The act of discovering/finding an object.
    ///<see cref="http://schema.org/DiscoverAction"/>
    ///</summary>
    public static readonly Class DiscoverAction = new Class(new Uri("http://schema.org/DiscoverAction"));    

    ///<summary>
    ///A posting to a discussion forum.
    ///<see cref="http://schema.org/DiscussionForumPosting"/>
    ///</summary>
    public static readonly Class DiscussionForumPosting = new Class(new Uri("http://schema.org/DiscussionForumPosting"));    

    ///<summary>
    ///The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/DislikeAction"/>
    ///</summary>
    public static readonly Class DislikeAction = new Class(new Uri("http://schema.org/DislikeAction"));    

    ///<summary>
    ///Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.
    ///<see cref="http://schema.org/Distance"/>
    ///</summary>
    public static readonly Class Distance = new Class(new Uri("http://schema.org/Distance"));    

    ///<summary>
    ///A distillery.
    ///<see cref="http://schema.org/Distillery"/>
    ///</summary>
    public static readonly Class Distillery = new Class(new Uri("http://schema.org/Distillery"));    

    ///<summary>
    ///The act of providing goods, services, or money without compensation, often for philanthropic reasons.
    ///<see cref="http://schema.org/DonateAction"/>
    ///</summary>
    public static readonly Class DonateAction = new Class(new Uri("http://schema.org/DonateAction"));    

    ///<summary>
    ///A specific dosing schedule for a drug or supplement.
    ///<see cref="http://schema.org/DoseSchedule"/>
    ///</summary>
    public static readonly Class DoseSchedule = new Class(new Uri("http://schema.org/DoseSchedule"));    

    ///<summary>
    ///The act of downloading an object.
    ///<see cref="http://schema.org/DownloadAction"/>
    ///</summary>
    public static readonly Class DownloadAction = new Class(new Uri("http://schema.org/DownloadAction"));    

    ///<summary>
    ///The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
    ///<see cref="http://schema.org/DrawAction"/>
    ///</summary>
    public static readonly Class DrawAction = new Class(new Uri("http://schema.org/DrawAction"));    

    ///<summary>
    ///A picture or diagram made with a pencil, pen, or crayon rather than paint.
    ///<see cref="http://schema.org/Drawing"/>
    ///</summary>
    public static readonly Class Drawing = new Class(new Uri("http://schema.org/Drawing"));    

    ///<summary>
    ///The act of swallowing liquids.
    ///<see cref="http://schema.org/DrinkAction"/>
    ///</summary>
    public static readonly Class DrinkAction = new Class(new Uri("http://schema.org/DrinkAction"));    

    ///<summary>
    ///A value indicating which roadwheels will receive torque.
    ///<see cref="http://schema.org/DriveWheelConfigurationValue"/>
    ///</summary>
    public static readonly Class DriveWheelConfigurationValue = new Class(new Uri("http://schema.org/DriveWheelConfigurationValue"));    

    ///<summary>
    ///A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge make a clear difference between them.
    ///<see cref="http://schema.org/Drug"/>
    ///</summary>
    public static readonly Class Drug = new Class(new Uri("http://schema.org/Drug"));    

    ///<summary>
    ///A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.
    ///<see cref="http://schema.org/DrugClass"/>
    ///</summary>
    public static readonly Class DrugClass = new Class(new Uri("http://schema.org/DrugClass"));    

    ///<summary>
    ///The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.
    ///<see cref="http://schema.org/DrugCost"/>
    ///</summary>
    public static readonly Class DrugCost = new Class(new Uri("http://schema.org/DrugCost"));    

    ///<summary>
    ///Enumerated categories of medical drug costs.
    ///<see cref="http://schema.org/DrugCostCategory"/>
    ///</summary>
    public static readonly Class DrugCostCategory = new Class(new Uri("http://schema.org/DrugCostCategory"));    

    ///<summary>
    ///The legal availability status of a medical drug.
    ///<see cref="http://schema.org/DrugLegalStatus"/>
    ///</summary>
    public static readonly Class DrugLegalStatus = new Class(new Uri("http://schema.org/DrugLegalStatus"));    

    ///<summary>
    ///Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.
    ///<see cref="http://schema.org/DrugPregnancyCategory"/>
    ///</summary>
    public static readonly Class DrugPregnancyCategory = new Class(new Uri("http://schema.org/DrugPregnancyCategory"));    

    ///<summary>
    ///Indicates whether this drug is available by prescription or over-the-counter.
    ///<see cref="http://schema.org/DrugPrescriptionStatus"/>
    ///</summary>
    public static readonly Class DrugPrescriptionStatus = new Class(new Uri("http://schema.org/DrugPrescriptionStatus"));    

    ///<summary>
    ///A specific strength in which a medical drug is available in a specific country.
    ///<see cref="http://schema.org/DrugStrength"/>
    ///</summary>
    public static readonly Class DrugStrength = new Class(new Uri("http://schema.org/DrugStrength"));    

    ///<summary>
    ///A dry-cleaning business.
    ///<see cref="http://schema.org/DryCleaningOrLaundry"/>
    ///</summary>
    public static readonly Class DryCleaningOrLaundry = new Class(new Uri("http://schema.org/DryCleaningOrLaundry"));    

    ///<summary>
    ///Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>).
    ///<see cref="http://schema.org/Duration"/>
    ///</summary>
    public static readonly Class Duration = new Class(new Uri("http://schema.org/Duration"));    

    ///<summary>
    ///The act of swallowing solid objects.
    ///<see cref="http://schema.org/EatAction"/>
    ///</summary>
    public static readonly Class EatAction = new Class(new Uri("http://schema.org/EatAction"));    

    ///<summary>
    ///Event type: Education event.
    ///<see cref="http://schema.org/EducationEvent"/>
    ///</summary>
    public static readonly Class EducationEvent = new Class(new Uri("http://schema.org/EducationEvent"));    

    ///<summary>
    ///An EducationalAudience.
    ///<see cref="http://schema.org/EducationalAudience"/>
    ///</summary>
    public static readonly Class EducationalAudience = new Class(new Uri("http://schema.org/EducationalAudience"));    

    ///<summary>
    ///An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.
    ///<see cref="http://schema.org/EducationalOccupationalCredential"/>
    ///</summary>
    public static readonly Class EducationalOccupationalCredential = new Class(new Uri("http://schema.org/EducationalOccupationalCredential"));    

    ///<summary>
    ///A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).
    ///<see cref="http://schema.org/EducationalOccupationalProgram"/>
    ///</summary>
    public static readonly Class EducationalOccupationalProgram = new Class(new Uri("http://schema.org/EducationalOccupationalProgram"));    

    ///<summary>
    ///An educational organization.
    ///<see cref="http://schema.org/EducationalOrganization"/>
    ///</summary>
    public static readonly Class EducationalOrganization = new Class(new Uri("http://schema.org/EducationalOrganization"));    

    ///<summary>
    ///An electrician.
    ///<see cref="http://schema.org/Electrician"/>
    ///</summary>
    public static readonly Class Electrician = new Class(new Uri("http://schema.org/Electrician"));    

    ///<summary>
    ///An electronics store.
    ///<see cref="http://schema.org/ElectronicsStore"/>
    ///</summary>
    public static readonly Class ElectronicsStore = new Class(new Uri("http://schema.org/ElectronicsStore"));    

    ///<summary>
    ///An elementary school.
    ///<see cref="http://schema.org/ElementarySchool"/>
    ///</summary>
    public static readonly Class ElementarySchool = new Class(new Uri("http://schema.org/ElementarySchool"));    

    ///<summary>
    ///An email message.
    ///<see cref="http://schema.org/EmailMessage"/>
    ///</summary>
    public static readonly Class EmailMessage = new Class(new Uri("http://schema.org/EmailMessage"));    

    ///<summary>
    ///An embassy.
    ///<see cref="http://schema.org/Embassy"/>
    ///</summary>
    public static readonly Class Embassy = new Class(new Uri("http://schema.org/Embassy"));    

    ///<summary>
    ///An emergency service, such as a fire station or ER.
    ///<see cref="http://schema.org/EmergencyService"/>
    ///</summary>
    public static readonly Class EmergencyService = new Class(new Uri("http://schema.org/EmergencyService"));    

    ///<summary>
    ///A subclass of OrganizationRole used to describe employee relationships.
    ///<see cref="http://schema.org/EmployeeRole"/>
    ///</summary>
    public static readonly Class EmployeeRole = new Class(new Uri("http://schema.org/EmployeeRole"));    

    ///<summary>
    ///An aggregate rating of an Organization related to its role as an employer.
    ///<see cref="http://schema.org/EmployerAggregateRating"/>
    ///</summary>
    public static readonly Class EmployerAggregateRating = new Class(new Uri("http://schema.org/EmployerAggregateRating"));    

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/EmployerReview">EmployerReview</a> is a review of an <a class="localLink" href="http://schema.org/Organization">Organization</a> regarding its role as an employer, written by a current or former employee of that organization.
    ///<see cref="http://schema.org/EmployerReview"/>
    ///</summary>
    public static readonly Class EmployerReview = new Class(new Uri("http://schema.org/EmployerReview"));    

    ///<summary>
    ///An employment agency.
    ///<see cref="http://schema.org/EmploymentAgency"/>
    ///</summary>
    public static readonly Class EmploymentAgency = new Class(new Uri("http://schema.org/EmploymentAgency"));    

    ///<summary>
    ///An agent approves/certifies/likes/supports/sanction an object.
    ///<see cref="http://schema.org/EndorseAction"/>
    ///</summary>
    public static readonly Class EndorseAction = new Class(new Uri("http://schema.org/EndorseAction"));    

    ///<summary>
    ///An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
    ///"Like" or "+1" on a social network. It can be considered the <a class="localLink" href="http://schema.org/result">result</a> of an <a class="localLink" href="http://schema.org/EndorseAction">EndorseAction</a> in which the <a class="localLink" href="http://schema.org/object">object</a> of the action is rated positively by
    ///some <a class="localLink" href="http://schema.org/agent">agent</a>. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the <a class="localLink" href="http://schema.org/Action">Action</a>.<br/><br/>
    ///
    ///An <a class="localLink" href="http://schema.org/EndorsementRating">EndorsementRating</a> may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
    ///endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
    ///<see cref="http://schema.org/EndorsementRating"/>
    ///</summary>
    public static readonly Class EndorsementRating = new Class(new Uri("http://schema.org/EndorsementRating"));    

    ///<summary>
    ///Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.
    ///<see cref="http://schema.org/Energy"/>
    ///</summary>
    public static readonly Class Energy = new Class(new Uri("http://schema.org/Energy"));    

    ///<summary>
    ///Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.
    ///<see cref="http://schema.org/EngineSpecification"/>
    ///</summary>
    public static readonly Class EngineSpecification = new Class(new Uri("http://schema.org/EngineSpecification"));    

    ///<summary>
    ///A business providing entertainment.
    ///<see cref="http://schema.org/EntertainmentBusiness"/>
    ///</summary>
    public static readonly Class EntertainmentBusiness = new Class(new Uri("http://schema.org/EntertainmentBusiness"));    

    ///<summary>
    ///An entry point, within some Web-based protocol.
    ///<see cref="http://schema.org/EntryPoint"/>
    ///</summary>
    public static readonly Class EntryPoint = new Class(new Uri("http://schema.org/EntryPoint"));    

    ///<summary>
    ///Lists or enumerations—for example, a list of cuisines or music genres, etc.
    ///<see cref="http://schema.org/Enumeration"/>
    ///</summary>
    public static readonly Class Enumeration = new Class(new Uri("http://schema.org/Enumeration"));    

    ///<summary>
    ///A media episode (e.g. TV, radio, video game) which can be part of a series or season.
    ///<see cref="http://schema.org/Episode"/>
    ///</summary>
    public static readonly Class Episode = new Class(new Uri("http://schema.org/Episode"));    

    ///<summary>
    ///An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class="localLink" href="http://schema.org/offers">offers</a> property. Repeated events may be structured as separate Event objects.
    ///<see cref="http://schema.org/Event"/>
    ///</summary>
    public static readonly Class Event = new Class(new Uri("http://schema.org/Event"));    

    ///<summary>
    ///A reservation for an event like a concert, sporting event, or lecture.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/EventReservation"/>
    ///</summary>
    public static readonly Class EventReservation = new Class(new Uri("http://schema.org/EventReservation"));    

    ///<summary>
    ///A series of <a class="localLink" href="http://schema.org/Event">Event</a>s. Included events can relate with the series using the <a class="localLink" href="http://schema.org/superEvent">superEvent</a> property.<br/><br/>
    ///
    ///An EventSeries is a collection of events that share some unifying characteristic. For example, "The Olympic Games" is a series, which
    ///is repeated regularly. The "2012 London Olympics" can be presented both as an <a class="localLink" href="http://schema.org/Event">Event</a> in the series "Olympic Games", and as an
    ///<a class="localLink" href="http://schema.org/EventSeries">EventSeries</a> that included a number of sporting competitions as Events.<br/><br/>
    ///
    ///The nature of the association between the events in an <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a> can vary, but typical examples could
    ///include a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.<br/><br/>
    ///
    ///EventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without
    ///worrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries
    ///may seem more Event-like when the period of time is compact and when aspects such as location are fixed, but
    ///it may also sometimes prove useful to describe a longer-term series as an Event.
    ///<see cref="http://schema.org/EventSeries"/>
    ///</summary>
    public static readonly Class EventSeries = new Class(new Uri("http://schema.org/EventSeries"));    

    ///<summary>
    ///EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
    ///<see cref="http://schema.org/EventStatusType"/>
    ///</summary>
    public static readonly Class EventStatusType = new Class(new Uri("http://schema.org/EventStatusType"));    

    ///<summary>
    ///An event venue.
    ///<see cref="http://schema.org/EventVenue"/>
    ///</summary>
    public static readonly Class EventVenue = new Class(new Uri("http://schema.org/EventVenue"));    

    ///<summary>
    ///A structured value representing exchange rate.
    ///<see cref="http://schema.org/ExchangeRateSpecification"/>
    ///</summary>
    public static readonly Class ExchangeRateSpecification = new Class(new Uri("http://schema.org/ExchangeRateSpecification"));    

    ///<summary>
    ///The act of participating in exertive activity for the purposes of improving health and fitness.
    ///<see cref="http://schema.org/ExerciseAction"/>
    ///</summary>
    public static readonly Class ExerciseAction = new Class(new Uri("http://schema.org/ExerciseAction"));    

    ///<summary>
    ///A gym.
    ///<see cref="http://schema.org/ExerciseGym"/>
    ///</summary>
    public static readonly Class ExerciseGym = new Class(new Uri("http://schema.org/ExerciseGym"));    

    ///<summary>
    ///Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.
    ///<see cref="http://schema.org/ExercisePlan"/>
    ///</summary>
    public static readonly Class ExercisePlan = new Class(new Uri("http://schema.org/ExercisePlan"));    

    ///<summary>
    ///Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...
    ///<see cref="http://schema.org/ExhibitionEvent"/>
    ///</summary>
    public static readonly Class ExhibitionEvent = new Class(new Uri("http://schema.org/ExhibitionEvent"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/FAQPage">FAQPage</a> is a <a class="localLink" href="http://schema.org/WebPage">WebPage</a> presenting one or more "<a href="https://en.wikipedia.org/wiki/FAQ">Frequently asked questions</a>" (see also <a class="localLink" href="http://schema.org/QAPage">QAPage</a>).
    ///<see cref="http://schema.org/FAQPage"/>
    ///</summary>
    public static readonly Class FAQPage = new Class(new Uri("http://schema.org/FAQPage"));    

    ///<summary>
    ///A radio channel that uses FM.
    ///<see cref="http://schema.org/FMRadioChannel"/>
    ///</summary>
    public static readonly Class FMRadioChannel = new Class(new Uri("http://schema.org/FMRadioChannel"));    

    ///<summary>
    ///A fast-food restaurant.
    ///<see cref="http://schema.org/FastFoodRestaurant"/>
    ///</summary>
    public static readonly Class FastFoodRestaurant = new Class(new Uri("http://schema.org/FastFoodRestaurant"));    

    ///<summary>
    ///Event type: Festival.
    ///<see cref="http://schema.org/Festival"/>
    ///</summary>
    public static readonly Class Festival = new Class(new Uri("http://schema.org/Festival"));    

    ///<summary>
    ///The act of capturing sound and moving images on film, video, or digitally.
    ///<see cref="http://schema.org/FilmAction"/>
    ///</summary>
    public static readonly Class FilmAction = new Class(new Uri("http://schema.org/FilmAction"));    

    ///<summary>
    ///A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.
    ///<see cref="http://schema.org/FinancialProduct"/>
    ///</summary>
    public static readonly Class FinancialProduct = new Class(new Uri("http://schema.org/FinancialProduct"));    

    ///<summary>
    ///Financial services business.
    ///<see cref="http://schema.org/FinancialService"/>
    ///</summary>
    public static readonly Class FinancialService = new Class(new Uri("http://schema.org/FinancialService"));    

    ///<summary>
    ///The act of finding an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/FindAction"/>
    ///</summary>
    public static readonly Class FindAction = new Class(new Uri("http://schema.org/FindAction"));    

    ///<summary>
    ///A fire station. With firemen.
    ///<see cref="http://schema.org/FireStation"/>
    ///</summary>
    public static readonly Class FireStation = new Class(new Uri("http://schema.org/FireStation"));    

    ///<summary>
    ///An airline flight.
    ///<see cref="http://schema.org/Flight"/>
    ///</summary>
    public static readonly Class Flight = new Class(new Uri("http://schema.org/Flight"));    

    ///<summary>
    ///A reservation for air travel.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/FlightReservation"/>
    ///</summary>
    public static readonly Class FlightReservation = new Class(new Uri("http://schema.org/FlightReservation"));    

    ///<summary>
    ///Data type: Floating number.
    ///<see cref="http://schema.org/Float"/>
    ///</summary>
    public static readonly Class Float = new Class(new Uri("http://schema.org/Float"));    

    ///<summary>
    ///A florist.
    ///<see cref="http://schema.org/Florist"/>
    ///</summary>
    public static readonly Class Florist = new Class(new Uri("http://schema.org/Florist"));    

    ///<summary>
    ///The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/FollowAction"/>
    ///</summary>
    public static readonly Class FollowAction = new Class(new Uri("http://schema.org/FollowAction"));    

    ///<summary>
    ///A food-related business.
    ///<see cref="http://schema.org/FoodEstablishment"/>
    ///</summary>
    public static readonly Class FoodEstablishment = new Class(new Uri("http://schema.org/FoodEstablishment"));    

    ///<summary>
    ///A reservation to dine at a food-related business.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/FoodEstablishmentReservation"/>
    ///</summary>
    public static readonly Class FoodEstablishmentReservation = new Class(new Uri("http://schema.org/FoodEstablishmentReservation"));    

    ///<summary>
    ///Event type: Food event.
    ///<see cref="http://schema.org/FoodEvent"/>
    ///</summary>
    public static readonly Class FoodEvent = new Class(new Uri("http://schema.org/FoodEvent"));    

    ///<summary>
    ///A food service, like breakfast, lunch, or dinner.
    ///<see cref="http://schema.org/FoodService"/>
    ///</summary>
    public static readonly Class FoodService = new Class(new Uri("http://schema.org/FoodService"));    

    ///<summary>
    ///A FundingAgency is an organization that implements one or more <a class="localLink" href="http://schema.org/FundingScheme">FundingScheme</a>s and manages
    ///    the granting process (via <a class="localLink" href="http://schema.org/Grant">Grant</a>s, typically <a class="localLink" href="http://schema.org/MonetaryGrant">MonetaryGrant</a>s).
    ///    A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.<br/><br/>
    ///
    ///<pre><code>Examples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation...
    ///</code></pre>
    ///
    ///<see cref="http://schema.org/FundingAgency"/>
    ///</summary>
    public static readonly Class FundingAgency = new Class(new Uri("http://schema.org/FundingAgency"));    

    ///<summary>
    ///A FundingScheme combines organizational, project and policy aspects of grant-based funding
    ///    that sets guidelines, principles and mechanisms to support other kinds of projects and activities.
    ///    Funding is typically organized via <a class="localLink" href="http://schema.org/Grant">Grant</a> funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - <a class="localLink" href="http://schema.org/FundingAgency">FundingAgency</a>s such as ERC, REA, ...
    ///<see cref="http://schema.org/FundingScheme"/>
    ///</summary>
    public static readonly Class FundingScheme = new Class(new Uri("http://schema.org/FundingScheme"));    

    ///<summary>
    ///A furniture store.
    ///<see cref="http://schema.org/FurnitureStore"/>
    ///</summary>
    public static readonly Class FurnitureStore = new Class(new Uri("http://schema.org/FurnitureStore"));    

    ///<summary>
    ///The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
    ///<see cref="http://schema.org/Game"/>
    ///</summary>
    public static readonly Class Game = new Class(new Uri("http://schema.org/Game"));    

    ///<summary>
    ///Indicates whether this game is multi-player, co-op or single-player.
    ///<see cref="http://schema.org/GamePlayMode"/>
    ///</summary>
    public static readonly Class GamePlayMode = new Class(new Uri("http://schema.org/GamePlayMode"));    

    ///<summary>
    ///Server that provides game interaction in a multiplayer game.
    ///<see cref="http://schema.org/GameServer"/>
    ///</summary>
    public static readonly Class GameServer = new Class(new Uri("http://schema.org/GameServer"));    

    ///<summary>
    ///Status of a game server.
    ///<see cref="http://schema.org/GameServerStatus"/>
    ///</summary>
    public static readonly Class GameServerStatus = new Class(new Uri("http://schema.org/GameServerStatus"));    

    ///<summary>
    ///A garden store.
    ///<see cref="http://schema.org/GardenStore"/>
    ///</summary>
    public static readonly Class GardenStore = new Class(new Uri("http://schema.org/GardenStore"));    

    ///<summary>
    ///A gas station.
    ///<see cref="http://schema.org/GasStation"/>
    ///</summary>
    public static readonly Class GasStation = new Class(new Uri("http://schema.org/GasStation"));    

    ///<summary>
    ///Residence type: Gated community.
    ///<see cref="http://schema.org/GatedResidenceCommunity"/>
    ///</summary>
    public static readonly Class GatedResidenceCommunity = new Class(new Uri("http://schema.org/GatedResidenceCommunity"));    

    ///<summary>
    ///An enumeration of genders.
    ///<see cref="http://schema.org/GenderType"/>
    ///</summary>
    public static readonly Class GenderType = new Class(new Uri("http://schema.org/GenderType"));    

    ///<summary>
    ///A general contractor.
    ///<see cref="http://schema.org/GeneralContractor"/>
    ///</summary>
    public static readonly Class GeneralContractor = new Class(new Uri("http://schema.org/GeneralContractor"));    

    ///<summary>
    ///A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
    ///          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
    ///          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
    ///<see cref="http://schema.org/GeoCircle"/>
    ///</summary>
    public static readonly Class GeoCircle = new Class(new Uri("http://schema.org/GeoCircle"));    

    ///<summary>
    ///The geographic coordinates of a place or event.
    ///<see cref="http://schema.org/GeoCoordinates"/>
    ///</summary>
    public static readonly Class GeoCoordinates = new Class(new Uri("http://schema.org/GeoCoordinates"));    

    ///<summary>
    ///The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.
    ///<see cref="http://schema.org/GeoShape"/>
    ///</summary>
    public static readonly Class GeoShape = new Class(new Uri("http://schema.org/GeoShape"));    

    ///<summary>
    ///(Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.
    ///<see cref="http://schema.org/GeospatialGeometry"/>
    ///</summary>
    public static readonly Class GeospatialGeometry = new Class(new Uri("http://schema.org/GeospatialGeometry"));    

    ///<summary>
    ///The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/GiveAction"/>
    ///</summary>
    public static readonly Class GiveAction = new Class(new Uri("http://schema.org/GiveAction"));    

    ///<summary>
    ///A golf course.
    ///<see cref="http://schema.org/GolfCourse"/>
    ///</summary>
    public static readonly Class GolfCourse = new Class(new Uri("http://schema.org/GolfCourse"));    

    ///<summary>
    ///A government building.
    ///<see cref="http://schema.org/GovernmentBuilding"/>
    ///</summary>
    public static readonly Class GovernmentBuilding = new Class(new Uri("http://schema.org/GovernmentBuilding"));    

    ///<summary>
    ///A government office&#x2014;for example, an IRS or DMV office.
    ///<see cref="http://schema.org/GovernmentOffice"/>
    ///</summary>
    public static readonly Class GovernmentOffice = new Class(new Uri("http://schema.org/GovernmentOffice"));    

    ///<summary>
    ///A governmental organization or agency.
    ///<see cref="http://schema.org/GovernmentOrganization"/>
    ///</summary>
    public static readonly Class GovernmentOrganization = new Class(new Uri("http://schema.org/GovernmentOrganization"));    

    ///<summary>
    ///A permit issued by a government agency.
    ///<see cref="http://schema.org/GovernmentPermit"/>
    ///</summary>
    public static readonly Class GovernmentPermit = new Class(new Uri("http://schema.org/GovernmentPermit"));    

    ///<summary>
    ///A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
    ///<see cref="http://schema.org/GovernmentService"/>
    ///</summary>
    public static readonly Class GovernmentService = new Class(new Uri("http://schema.org/GovernmentService"));    

    ///<summary>
    ///A grant, typically financial or otherwise quantifiable, of resources. Typically a <a class="localLink" href="http://schema.org/funder">funder</a> sponsors some <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to an <a class="localLink" href="http://schema.org/Organization">Organization</a> or <a class="localLink" href="http://schema.org/Person">Person</a>,
    ///    sometimes not necessarily via a dedicated or long-lived <a class="localLink" href="http://schema.org/Project">Project</a>, resulting in one or more outputs, or <a class="localLink" href="http://schema.org/fundedItem">fundedItem</a>s. For financial sponsorship, indicate the <a class="localLink" href="http://schema.org/funder">funder</a> of a <a class="localLink" href="http://schema.org/MonetaryGrant">MonetaryGrant</a>. For non-financial support, indicate <a class="localLink" href="http://schema.org/sponsor">sponsor</a> of <a class="localLink" href="http://schema.org/Grant">Grant</a>s of resources (e.g. office space).<br/><br/>
    ///
    ///Grants support  activities directed towards some agreed collective goals, often but not always organized as <a class="localLink" href="http://schema.org/Project">Project</a>s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.<br/><br/>
    ///
    ///The amount of a <a class="localLink" href="http://schema.org/Grant">Grant</a> is represented using <a class="localLink" href="http://schema.org/amount">amount</a> as a <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>.
    ///<see cref="http://schema.org/Grant"/>
    ///</summary>
    public static readonly Class Grant = new Class(new Uri("http://schema.org/Grant"));    

    ///<summary>
    ///A grocery store.
    ///<see cref="http://schema.org/GroceryStore"/>
    ///</summary>
    public static readonly Class GroceryStore = new Class(new Uri("http://schema.org/GroceryStore"));    

    ///<summary>
    ///A business that provide Heating, Ventilation and Air Conditioning services.
    ///<see cref="http://schema.org/HVACBusiness"/>
    ///</summary>
    public static readonly Class HVACBusiness = new Class(new Uri("http://schema.org/HVACBusiness"));    

    ///<summary>
    ///A hair salon.
    ///<see cref="http://schema.org/HairSalon"/>
    ///</summary>
    public static readonly Class HairSalon = new Class(new Uri("http://schema.org/HairSalon"));    

    ///<summary>
    ///A hardware store.
    ///<see cref="http://schema.org/HardwareStore"/>
    ///</summary>
    public static readonly Class HardwareStore = new Class(new Uri("http://schema.org/HardwareStore"));    

    ///<summary>
    ///Health and beauty.
    ///<see cref="http://schema.org/HealthAndBeautyBusiness"/>
    ///</summary>
    public static readonly Class HealthAndBeautyBusiness = new Class(new Uri("http://schema.org/HealthAndBeautyBusiness"));    

    ///<summary>
    ///A health club.
    ///<see cref="http://schema.org/HealthClub"/>
    ///</summary>
    public static readonly Class HealthClub = new Class(new Uri("http://schema.org/HealthClub"));    

    ///<summary>
    ///A US-style health insurance plan, including PPOs, EPOs, and HMOs.
    ///<see cref="http://schema.org/HealthInsurancePlan"/>
    ///</summary>
    public static readonly Class HealthInsurancePlan = new Class(new Uri("http://schema.org/HealthInsurancePlan"));    

    ///<summary>
    ///A description of costs to the patient under a given network or formulary.
    ///<see cref="http://schema.org/HealthPlanCostSharingSpecification"/>
    ///</summary>
    public static readonly Class HealthPlanCostSharingSpecification = new Class(new Uri("http://schema.org/HealthPlanCostSharingSpecification"));    

    ///<summary>
    ///For a given health insurance plan, the specification for costs and coverage of prescription drugs.
    ///<see cref="http://schema.org/HealthPlanFormulary"/>
    ///</summary>
    public static readonly Class HealthPlanFormulary = new Class(new Uri("http://schema.org/HealthPlanFormulary"));    

    ///<summary>
    ///A US-style health insurance plan network.
    ///<see cref="http://schema.org/HealthPlanNetwork"/>
    ///</summary>
    public static readonly Class HealthPlanNetwork = new Class(new Uri("http://schema.org/HealthPlanNetwork"));    

    ///<summary>
    ///A high school.
    ///<see cref="http://schema.org/HighSchool"/>
    ///</summary>
    public static readonly Class HighSchool = new Class(new Uri("http://schema.org/HighSchool"));    

    ///<summary>
    ///A Hindu temple.
    ///<see cref="http://schema.org/HinduTemple"/>
    ///</summary>
    public static readonly Class HinduTemple = new Class(new Uri("http://schema.org/HinduTemple"));    

    ///<summary>
    ///A store that sells materials useful or necessary for various hobbies.
    ///<see cref="http://schema.org/HobbyShop"/>
    ///</summary>
    public static readonly Class HobbyShop = new Class(new Uri("http://schema.org/HobbyShop"));    

    ///<summary>
    ///A construction business.<br/><br/>
    ///
    ///A HomeAndConstructionBusiness is a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides services around homes and buildings.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/HomeAndConstructionBusiness"/>
    ///</summary>
    public static readonly Class HomeAndConstructionBusiness = new Class(new Uri("http://schema.org/HomeAndConstructionBusiness"));    

    ///<summary>
    ///A home goods store.
    ///<see cref="http://schema.org/HomeGoodsStore"/>
    ///</summary>
    public static readonly Class HomeGoodsStore = new Class(new Uri("http://schema.org/HomeGoodsStore"));    

    ///<summary>
    ///A hospital.
    ///<see cref="http://schema.org/Hospital"/>
    ///</summary>
    public static readonly Class Hospital = new Class(new Uri("http://schema.org/Hospital"));    

    ///<summary>
    ///A hostel - cheap accommodation, often in shared dormitories.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Hostel"/>
    ///</summary>
    public static readonly Class Hostel = new Class(new Uri("http://schema.org/Hostel"));    

    ///<summary>
    ///A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Hotel"/>
    ///</summary>
    public static readonly Class Hotel = new Class(new Uri("http://schema.org/Hotel"));    

    ///<summary>
    ///A hotel room is a single room in a hotel.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/HotelRoom"/>
    ///</summary>
    public static readonly Class HotelRoom = new Class(new Uri("http://schema.org/HotelRoom"));    

    ///<summary>
    ///A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
    ///<see cref="http://schema.org/House"/>
    ///</summary>
    public static readonly Class House = new Class(new Uri("http://schema.org/House"));    

    ///<summary>
    ///A house painting service.
    ///<see cref="http://schema.org/HousePainter"/>
    ///</summary>
    public static readonly Class HousePainter = new Class(new Uri("http://schema.org/HousePainter"));    

    ///<summary>
    ///Instructions that explain how to achieve a result by performing a sequence of steps.
    ///<see cref="http://schema.org/HowTo"/>
    ///</summary>
    public static readonly Class HowTo = new Class(new Uri("http://schema.org/HowTo"));    

    ///<summary>
    ///A direction indicating a single action to do in the instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToDirection"/>
    ///</summary>
    public static readonly Class HowToDirection = new Class(new Uri("http://schema.org/HowToDirection"));    

    ///<summary>
    ///An item used as either a tool or supply when performing the instructions for how to to achieve a result.
    ///<see cref="http://schema.org/HowToItem"/>
    ///</summary>
    public static readonly Class HowToItem = new Class(new Uri("http://schema.org/HowToItem"));    

    ///<summary>
    ///A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).
    ///<see cref="http://schema.org/HowToSection"/>
    ///</summary>
    public static readonly Class HowToSection = new Class(new Uri("http://schema.org/HowToSection"));    

    ///<summary>
    ///A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.
    ///<see cref="http://schema.org/HowToStep"/>
    ///</summary>
    public static readonly Class HowToStep = new Class(new Uri("http://schema.org/HowToStep"));    

    ///<summary>
    ///A supply consumed when performing the instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToSupply"/>
    ///</summary>
    public static readonly Class HowToSupply = new Class(new Uri("http://schema.org/HowToSupply"));    

    ///<summary>
    ///An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).
    ///<see cref="http://schema.org/HowToTip"/>
    ///</summary>
    public static readonly Class HowToTip = new Class(new Uri("http://schema.org/HowToTip"));    

    ///<summary>
    ///A tool used (but not consumed) when performing instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToTool"/>
    ///</summary>
    public static readonly Class HowToTool = new Class(new Uri("http://schema.org/HowToTool"));    

    ///<summary>
    ///An ice cream shop.
    ///<see cref="http://schema.org/IceCreamShop"/>
    ///</summary>
    public static readonly Class IceCreamShop = new Class(new Uri("http://schema.org/IceCreamShop"));    

    ///<summary>
    ///The act of intentionally disregarding the object. An agent ignores an object.
    ///<see cref="http://schema.org/IgnoreAction"/>
    ///</summary>
    public static readonly Class IgnoreAction = new Class(new Uri("http://schema.org/IgnoreAction"));    

    ///<summary>
    ///Web page type: Image gallery page.
    ///<see cref="http://schema.org/ImageGallery"/>
    ///</summary>
    public static readonly Class ImageGallery = new Class(new Uri("http://schema.org/ImageGallery"));    

    ///<summary>
    ///An image file.
    ///<see cref="http://schema.org/ImageObject"/>
    ///</summary>
    public static readonly Class ImageObject = new Class(new Uri("http://schema.org/ImageObject"));    

    ///<summary>
    ///Any medical imaging modality typically used for diagnostic purposes.
    ///<see cref="http://schema.org/ImagingTest"/>
    ///</summary>
    public static readonly Class ImagingTest = new Class(new Uri("http://schema.org/ImagingTest"));    

    ///<summary>
    ///A single, identifiable product instance (e.g. a laptop with a particular serial number).
    ///<see cref="http://schema.org/IndividualProduct"/>
    ///</summary>
    public static readonly Class IndividualProduct = new Class(new Uri("http://schema.org/IndividualProduct"));    

    ///<summary>
    ///Classes of agents or pathogens that transmit infectious diseases. Enumerated type.
    ///<see cref="http://schema.org/InfectiousAgentClass"/>
    ///</summary>
    public static readonly Class InfectiousAgentClass = new Class(new Uri("http://schema.org/InfectiousAgentClass"));    

    ///<summary>
    ///An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.
    ///<see cref="http://schema.org/InfectiousDisease"/>
    ///</summary>
    public static readonly Class InfectiousDisease = new Class(new Uri("http://schema.org/InfectiousDisease"));    

    ///<summary>
    ///The act of notifying someone of information pertinent to them, with no expectation of a response.
    ///<see cref="http://schema.org/InformAction"/>
    ///</summary>
    public static readonly Class InformAction = new Class(new Uri("http://schema.org/InformAction"));    

    ///<summary>
    ///The act of adding at a specific location in an ordered collection.
    ///<see cref="http://schema.org/InsertAction"/>
    ///</summary>
    public static readonly Class InsertAction = new Class(new Uri("http://schema.org/InsertAction"));    

    ///<summary>
    ///The act of installing an application.
    ///<see cref="http://schema.org/InstallAction"/>
    ///</summary>
    public static readonly Class InstallAction = new Class(new Uri("http://schema.org/InstallAction"));    

    ///<summary>
    ///An Insurance agency.
    ///<see cref="http://schema.org/InsuranceAgency"/>
    ///</summary>
    public static readonly Class InsuranceAgency = new Class(new Uri("http://schema.org/InsuranceAgency"));    

    ///<summary>
    ///A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
    ///<see cref="http://schema.org/Intangible"/>
    ///</summary>
    public static readonly Class Intangible = new Class(new Uri("http://schema.org/Intangible"));    

    ///<summary>
    ///Data type: Integer.
    ///<see cref="http://schema.org/Integer"/>
    ///</summary>
    public static readonly Class Integer = new Class(new Uri("http://schema.org/Integer"));    

    ///<summary>
    ///The act of interacting with another person or organization.
    ///<see cref="http://schema.org/InteractAction"/>
    ///</summary>
    public static readonly Class InteractAction = new Class(new Uri("http://schema.org/InteractAction"));    

    ///<summary>
    ///A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.
    ///<see cref="http://schema.org/InteractionCounter"/>
    ///</summary>
    public static readonly Class InteractionCounter = new Class(new Uri("http://schema.org/InteractionCounter"));    

    ///<summary>
    ///An internet cafe.
    ///<see cref="http://schema.org/InternetCafe"/>
    ///</summary>
    public static readonly Class InternetCafe = new Class(new Uri("http://schema.org/InternetCafe"));    

    ///<summary>
    ///A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.
    ///<see cref="http://schema.org/InvestmentFund"/>
    ///</summary>
    public static readonly Class InvestmentFund = new Class(new Uri("http://schema.org/InvestmentFund"));    

    ///<summary>
    ///A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.
    ///<see cref="http://schema.org/InvestmentOrDeposit"/>
    ///</summary>
    public static readonly Class InvestmentOrDeposit = new Class(new Uri("http://schema.org/InvestmentOrDeposit"));    

    ///<summary>
    ///The act of asking someone to attend an event. Reciprocal of RsvpAction.
    ///<see cref="http://schema.org/InviteAction"/>
    ///</summary>
    public static readonly Class InviteAction = new Class(new Uri("http://schema.org/InviteAction"));    

    ///<summary>
    ///A statement of the money due for goods or services; a bill.
    ///<see cref="http://schema.org/Invoice"/>
    ///</summary>
    public static readonly Class Invoice = new Class(new Uri("http://schema.org/Invoice"));    

    ///<summary>
    ///A list of possible product availability options.
    ///<see cref="http://schema.org/ItemAvailability"/>
    ///</summary>
    public static readonly Class ItemAvailability = new Class(new Uri("http://schema.org/ItemAvailability"));    

    ///<summary>
    ///A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
    ///<see cref="http://schema.org/ItemList"/>
    ///</summary>
    public static readonly Class ItemList = new Class(new Uri("http://schema.org/ItemList"));    

    ///<summary>
    ///Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.
    ///<see cref="http://schema.org/ItemListOrderType"/>
    ///</summary>
    public static readonly Class ItemListOrderType = new Class(new Uri("http://schema.org/ItemListOrderType"));    

    ///<summary>
    ///A page devoted to a single item, such as a particular product or hotel.
    ///<see cref="http://schema.org/ItemPage"/>
    ///</summary>
    public static readonly Class ItemPage = new Class(new Uri("http://schema.org/ItemPage"));    

    ///<summary>
    ///A jewelry store.
    ///<see cref="http://schema.org/JewelryStore"/>
    ///</summary>
    public static readonly Class JewelryStore = new Class(new Uri("http://schema.org/JewelryStore"));    

    ///<summary>
    ///A listing that describes a job opening in a certain organization.
    ///<see cref="http://schema.org/JobPosting"/>
    ///</summary>
    public static readonly Class JobPosting = new Class(new Uri("http://schema.org/JobPosting"));    

    ///<summary>
    ///An agent joins an event/group with participants/friends at a location.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/JoinAction"/>
    ///</summary>
    public static readonly Class JoinAction = new Class(new Uri("http://schema.org/JoinAction"));    

    ///<summary>
    ///The anatomical location at which two or more bones make contact.
    ///<see cref="http://schema.org/Joint"/>
    ///</summary>
    public static readonly Class Joint = new Class(new Uri("http://schema.org/Joint"));    

    ///<summary>
    ///A lake (for example, Lake Pontrachain).
    ///<see cref="http://schema.org/LakeBodyOfWater"/>
    ///</summary>
    public static readonly Class LakeBodyOfWater = new Class(new Uri("http://schema.org/LakeBodyOfWater"));    

    ///<summary>
    ///A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
    ///<see cref="http://schema.org/Landform"/>
    ///</summary>
    public static readonly Class Landform = new Class(new Uri("http://schema.org/Landform"));    

    ///<summary>
    ///An historical landmark or building.
    ///<see cref="http://schema.org/LandmarksOrHistoricalBuildings"/>
    ///</summary>
    public static readonly Class LandmarksOrHistoricalBuildings = new Class(new Uri("http://schema.org/LandmarksOrHistoricalBuildings"));    

    ///<summary>
    ///Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be used via the <a class="localLink" href="http://schema.org/alternateName">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class="localLink" href="http://schema.org/ComputerLanguage">ComputerLanguage</a>.
    ///<see cref="http://schema.org/Language"/>
    ///</summary>
    public static readonly Class Language = new Class(new Uri("http://schema.org/Language"));    

    ///<summary>
    ///An agent leaves an event / group with participants/friends at a location.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: The antonym of LeaveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/LeaveAction"/>
    ///</summary>
    public static readonly Class LeaveAction = new Class(new Uri("http://schema.org/LeaveAction"));    

    ///<summary>
    ///A list of possible statuses for the legal force of a legislation.
    ///<see cref="http://schema.org/LegalForceStatus"/>
    ///</summary>
    public static readonly Class LegalForceStatus = new Class(new Uri("http://schema.org/LegalForceStatus"));    

    ///<summary>
    ///A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/LegalService"/>
    ///</summary>
    public static readonly Class LegalService = new Class(new Uri("http://schema.org/LegalService"));    

    ///<summary>
    ///A list of possible levels for the legal validity of a legislation.
    ///<see cref="http://schema.org/LegalValueLevel"/>
    ///</summary>
    public static readonly Class LegalValueLevel = new Class(new Uri("http://schema.org/LegalValueLevel"));    

    ///<summary>
    ///A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).
    ///<see cref="http://schema.org/Legislation"/>
    ///</summary>
    public static readonly Class Legislation = new Class(new Uri("http://schema.org/Legislation"));    

    ///<summary>
    ///A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.
    ///<see cref="http://schema.org/LegislationObject"/>
    ///</summary>
    public static readonly Class LegislationObject = new Class(new Uri("http://schema.org/LegislationObject"));    

    ///<summary>
    ///A legislative building&#x2014;for example, the state capitol.
    ///<see cref="http://schema.org/LegislativeBuilding"/>
    ///</summary>
    public static readonly Class LegislativeBuilding = new Class(new Uri("http://schema.org/LegislativeBuilding"));    

    ///<summary>
    ///The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/LendAction"/>
    ///</summary>
    public static readonly Class LendAction = new Class(new Uri("http://schema.org/LendAction"));    

    ///<summary>
    ///A library.
    ///<see cref="http://schema.org/Library"/>
    ///</summary>
    public static readonly Class Library = new Class(new Uri("http://schema.org/Library"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/LibrarySystem">LibrarySystem</a> is a collaborative system amongst several libraries.
    ///<see cref="http://schema.org/LibrarySystem"/>
    ///</summary>
    public static readonly Class LibrarySystem = new Class(new Uri("http://schema.org/LibrarySystem"));    

    ///<summary>
    ///A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.
    ///<see cref="http://schema.org/LifestyleModification"/>
    ///</summary>
    public static readonly Class LifestyleModification = new Class(new Uri("http://schema.org/LifestyleModification"));    

    ///<summary>
    ///A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.
    ///<see cref="http://schema.org/Ligament"/>
    ///</summary>
    public static readonly Class Ligament = new Class(new Uri("http://schema.org/Ligament"));    

    ///<summary>
    ///The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/LikeAction"/>
    ///</summary>
    public static readonly Class LikeAction = new Class(new Uri("http://schema.org/LikeAction"));    

    ///<summary>
    ///A Role that represents a Web link e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.
    ///<see cref="http://schema.org/LinkRole"/>
    ///</summary>
    public static readonly Class LinkRole = new Class(new Uri("http://schema.org/LinkRole"));    

    ///<summary>
    ///A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
    ///<see cref="http://schema.org/LiquorStore"/>
    ///</summary>
    public static readonly Class LiquorStore = new Class(new Uri("http://schema.org/LiquorStore"));    

    ///<summary>
    ///An list item, e.g. a step in a checklist or how-to description.
    ///<see cref="http://schema.org/ListItem"/>
    ///</summary>
    public static readonly Class ListItem = new Class(new Uri("http://schema.org/ListItem"));    

    ///<summary>
    ///The act of consuming audio content.
    ///<see cref="http://schema.org/ListenAction"/>
    ///</summary>
    public static readonly Class ListenAction = new Class(new Uri("http://schema.org/ListenAction"));    

    ///<summary>
    ///Event type: Literary event.
    ///<see cref="http://schema.org/LiteraryEvent"/>
    ///</summary>
    public static readonly Class LiteraryEvent = new Class(new Uri("http://schema.org/LiteraryEvent"));    

    ///<summary>
    ///A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.
    ///<see cref="http://schema.org/LiveBlogPosting"/>
    ///</summary>
    public static readonly Class LiveBlogPosting = new Class(new Uri("http://schema.org/LiveBlogPosting"));    

    ///<summary>
    ///A financial product for the loaning of an amount of money under agreed terms and charges.
    ///<see cref="http://schema.org/LoanOrCredit"/>
    ///</summary>
    public static readonly Class LoanOrCredit = new Class(new Uri("http://schema.org/LoanOrCredit"));    

    ///<summary>
    ///A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
    ///<see cref="http://schema.org/LocalBusiness"/>
    ///</summary>
    public static readonly Class LocalBusiness = new Class(new Uri("http://schema.org/LocalBusiness"));    

    ///<summary>
    ///Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.
    ///<see cref="http://schema.org/LocationFeatureSpecification"/>
    ///</summary>
    public static readonly Class LocationFeatureSpecification = new Class(new Uri("http://schema.org/LocationFeatureSpecification"));    

    ///<summary>
    ///A DeliveryMethod in which an item is made available via locker.
    ///<see cref="http://schema.org/LockerDelivery"/>
    ///</summary>
    public static readonly Class LockerDelivery = new Class(new Uri("http://schema.org/LockerDelivery"));    

    ///<summary>
    ///A locksmith.
    ///<see cref="http://schema.org/Locksmith"/>
    ///</summary>
    public static readonly Class Locksmith = new Class(new Uri("http://schema.org/Locksmith"));    

    ///<summary>
    ///A lodging business, such as a motel, hotel, or inn.
    ///<see cref="http://schema.org/LodgingBusiness"/>
    ///</summary>
    public static readonly Class LodgingBusiness = new Class(new Uri("http://schema.org/LodgingBusiness"));    

    ///<summary>
    ///A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/LodgingReservation"/>
    ///</summary>
    public static readonly Class LodgingReservation = new Class(new Uri("http://schema.org/LodgingReservation"));    

    ///<summary>
    ///The act of being defeated in a competitive activity.
    ///<see cref="http://schema.org/LoseAction"/>
    ///</summary>
    public static readonly Class LoseAction = new Class(new Uri("http://schema.org/LoseAction"));    

    ///<summary>
    ///A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.
    ///<see cref="http://schema.org/LymphaticVessel"/>
    ///</summary>
    public static readonly Class LymphaticVessel = new Class(new Uri("http://schema.org/LymphaticVessel"));    

    ///<summary>
    ///A book, document, or piece of music written by hand rather than typed or printed.
    ///<see cref="http://schema.org/Manuscript"/>
    ///</summary>
    public static readonly Class Manuscript = new Class(new Uri("http://schema.org/Manuscript"));    

    ///<summary>
    ///A map.
    ///<see cref="http://schema.org/Map"/>
    ///</summary>
    public static readonly Class Map = new Class(new Uri("http://schema.org/Map"));    

    ///<summary>
    ///An enumeration of several kinds of Map.
    ///<see cref="http://schema.org/MapCategoryType"/>
    ///</summary>
    public static readonly Class MapCategoryType = new Class(new Uri("http://schema.org/MapCategoryType"));    

    ///<summary>
    ///The act of marrying a person.
    ///<see cref="http://schema.org/MarryAction"/>
    ///</summary>
    public static readonly Class MarryAction = new Class(new Uri("http://schema.org/MarryAction"));    

    ///<summary>
    ///Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.
    ///<see cref="http://schema.org/Mass"/>
    ///</summary>
    public static readonly Class Mass = new Class(new Uri("http://schema.org/Mass"));    

    ///<summary>
    ///The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
    ///<see cref="http://schema.org/MaximumDoseSchedule"/>
    ///</summary>
    public static readonly Class MaximumDoseSchedule = new Class(new Uri("http://schema.org/MaximumDoseSchedule"));    

    ///<summary>
    ///A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
    ///<see cref="http://schema.org/MediaObject"/>
    ///</summary>
    public static readonly Class MediaObject = new Class(new Uri("http://schema.org/MediaObject"));    

    ///<summary>
    ///A subscription which allows a user to access media including audio, video, books, etc.
    ///<see cref="http://schema.org/MediaSubscription"/>
    ///</summary>
    public static readonly Class MediaSubscription = new Class(new Uri("http://schema.org/MediaSubscription"));    

    ///<summary>
    ///Target audiences for medical web pages. Enumerated type.
    ///<see cref="http://schema.org/MedicalAudience"/>
    ///</summary>
    public static readonly Class MedicalAudience = new Class(new Uri("http://schema.org/MedicalAudience"));    

    ///<summary>
    ///A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include differents business run by health professionals.
    ///<see cref="http://schema.org/MedicalBusiness"/>
    ///</summary>
    public static readonly Class MedicalBusiness = new Class(new Uri("http://schema.org/MedicalBusiness"));    

    ///<summary>
    ///The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.
    ///<see cref="http://schema.org/MedicalCause"/>
    ///</summary>
    public static readonly Class MedicalCause = new Class(new Uri("http://schema.org/MedicalCause"));    

    ///<summary>
    ///A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.
    ///<see cref="http://schema.org/MedicalClinic"/>
    ///</summary>
    public static readonly Class MedicalClinic = new Class(new Uri("http://schema.org/MedicalClinic"));    

    ///<summary>
    ///A code for a medical entity.
    ///<see cref="http://schema.org/MedicalCode"/>
    ///</summary>
    public static readonly Class MedicalCode = new Class(new Uri("http://schema.org/MedicalCode"));    

    ///<summary>
    ///Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
    ///<see cref="http://schema.org/MedicalCondition"/>
    ///</summary>
    public static readonly Class MedicalCondition = new Class(new Uri("http://schema.org/MedicalCondition"));    

    ///<summary>
    ///A stage of a medical condition, such as 'Stage IIIa'.
    ///<see cref="http://schema.org/MedicalConditionStage"/>
    ///</summary>
    public static readonly Class MedicalConditionStage = new Class(new Uri("http://schema.org/MedicalConditionStage"));    

    ///<summary>
    ///A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but that these risks may be outweighed by other considerations or mitigated by other measures).
    ///<see cref="http://schema.org/MedicalContraindication"/>
    ///</summary>
    public static readonly Class MedicalContraindication = new Class(new Uri("http://schema.org/MedicalContraindication"));    

    ///<summary>
    ///Any object used in a medical capacity, such as to diagnose or treat a patient.
    ///<see cref="http://schema.org/MedicalDevice"/>
    ///</summary>
    public static readonly Class MedicalDevice = new Class(new Uri("http://schema.org/MedicalDevice"));    

    ///<summary>
    ///Categories of medical devices, organized by the purpose or intended use of the device.
    ///<see cref="http://schema.org/MedicalDevicePurpose"/>
    ///</summary>
    public static readonly Class MedicalDevicePurpose = new Class(new Uri("http://schema.org/MedicalDevicePurpose"));    

    ///<summary>
    ///The most generic type of entity related to health and the practice of medicine.
    ///<see cref="http://schema.org/MedicalEntity"/>
    ///</summary>
    public static readonly Class MedicalEntity = new Class(new Uri("http://schema.org/MedicalEntity"));    

    ///<summary>
    ///Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.
    ///<see cref="http://schema.org/MedicalEnumeration"/>
    ///</summary>
    public static readonly Class MedicalEnumeration = new Class(new Uri("http://schema.org/MedicalEnumeration"));    

    ///<summary>
    ///Level of evidence for a medical guideline. Enumerated type.
    ///<see cref="http://schema.org/MedicalEvidenceLevel"/>
    ///</summary>
    public static readonly Class MedicalEvidenceLevel = new Class(new Uri("http://schema.org/MedicalEvidenceLevel"));    

    ///<summary>
    ///Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.
    ///<see cref="http://schema.org/MedicalGuideline"/>
    ///</summary>
    public static readonly Class MedicalGuideline = new Class(new Uri("http://schema.org/MedicalGuideline"));    

    ///<summary>
    ///A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.
    ///<see cref="http://schema.org/MedicalGuidelineContraindication"/>
    ///</summary>
    public static readonly Class MedicalGuidelineContraindication = new Class(new Uri("http://schema.org/MedicalGuidelineContraindication"));    

    ///<summary>
    ///A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.
    ///<see cref="http://schema.org/MedicalGuidelineRecommendation"/>
    ///</summary>
    public static readonly Class MedicalGuidelineRecommendation = new Class(new Uri("http://schema.org/MedicalGuidelineRecommendation"));    

    ///<summary>
    ///Any medical imaging modality typically used for diagnostic purposes. Enumerated type.
    ///<see cref="http://schema.org/MedicalImagingTechnique"/>
    ///</summary>
    public static readonly Class MedicalImagingTechnique = new Class(new Uri("http://schema.org/MedicalImagingTechnique"));    

    ///<summary>
    ///A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.
    ///<see cref="http://schema.org/MedicalIndication"/>
    ///</summary>
    public static readonly Class MedicalIndication = new Class(new Uri("http://schema.org/MedicalIndication"));    

    ///<summary>
    ///A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.
    ///<see cref="http://schema.org/MedicalIntangible"/>
    ///</summary>
    public static readonly Class MedicalIntangible = new Class(new Uri("http://schema.org/MedicalIntangible"));    

    ///<summary>
    ///An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.
    ///<see cref="http://schema.org/MedicalObservationalStudy"/>
    ///</summary>
    public static readonly Class MedicalObservationalStudy = new Class(new Uri("http://schema.org/MedicalObservationalStudy"));    

    ///<summary>
    ///Design models for observational medical studies. Enumerated type.
    ///<see cref="http://schema.org/MedicalObservationalStudyDesign"/>
    ///</summary>
    public static readonly Class MedicalObservationalStudyDesign = new Class(new Uri("http://schema.org/MedicalObservationalStudyDesign"));    

    ///<summary>
    ///A medical organization (physical or not), such as hospital, institution or clinic.
    ///<see cref="http://schema.org/MedicalOrganization"/>
    ///</summary>
    public static readonly Class MedicalOrganization = new Class(new Uri("http://schema.org/MedicalOrganization"));    

    ///<summary>
    ///A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.
    ///<see cref="http://schema.org/MedicalProcedure"/>
    ///</summary>
    public static readonly Class MedicalProcedure = new Class(new Uri("http://schema.org/MedicalProcedure"));    

    ///<summary>
    ///An enumeration that describes different types of medical procedures.
    ///<see cref="http://schema.org/MedicalProcedureType"/>
    ///</summary>
    public static readonly Class MedicalProcedureType = new Class(new Uri("http://schema.org/MedicalProcedureType"));    

    ///<summary>
    ///A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.
    ///<see cref="http://schema.org/MedicalRiskCalculator"/>
    ///</summary>
    public static readonly Class MedicalRiskCalculator = new Class(new Uri("http://schema.org/MedicalRiskCalculator"));    

    ///<summary>
    ///Any rule set or interactive tool for estimating the risk of developing a complication or condition.
    ///<see cref="http://schema.org/MedicalRiskEstimator"/>
    ///</summary>
    public static readonly Class MedicalRiskEstimator = new Class(new Uri("http://schema.org/MedicalRiskEstimator"));    

    ///<summary>
    ///A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.
    ///<see cref="http://schema.org/MedicalRiskFactor"/>
    ///</summary>
    public static readonly Class MedicalRiskFactor = new Class(new Uri("http://schema.org/MedicalRiskFactor"));    

    ///<summary>
    ///A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.
    ///<see cref="http://schema.org/MedicalRiskScore"/>
    ///</summary>
    public static readonly Class MedicalRiskScore = new Class(new Uri("http://schema.org/MedicalRiskScore"));    

    ///<summary>
    ///A scholarly article in the medical domain.
    ///<see cref="http://schema.org/MedicalScholarlyArticle"/>
    ///</summary>
    public static readonly Class MedicalScholarlyArticle = new Class(new Uri("http://schema.org/MedicalScholarlyArticle"));    

    ///<summary>
    ///Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.
    ///<see cref="http://schema.org/MedicalSign"/>
    ///</summary>
    public static readonly Class MedicalSign = new Class(new Uri("http://schema.org/MedicalSign"));    

    ///<summary>
    ///Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.
    ///<see cref="http://schema.org/MedicalSignOrSymptom"/>
    ///</summary>
    public static readonly Class MedicalSignOrSymptom = new Class(new Uri("http://schema.org/MedicalSignOrSymptom"));    

    ///<summary>
    ///Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.
    ///<see cref="http://schema.org/MedicalSpecialty"/>
    ///</summary>
    public static readonly Class MedicalSpecialty = new Class(new Uri("http://schema.org/MedicalSpecialty"));    

    ///<summary>
    ///A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.
    ///<see cref="http://schema.org/MedicalStudy"/>
    ///</summary>
    public static readonly Class MedicalStudy = new Class(new Uri("http://schema.org/MedicalStudy"));    

    ///<summary>
    ///The status of a medical study. Enumerated type.
    ///<see cref="http://schema.org/MedicalStudyStatus"/>
    ///</summary>
    public static readonly Class MedicalStudyStatus = new Class(new Uri("http://schema.org/MedicalStudyStatus"));    

    ///<summary>
    ///Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.
    ///<see cref="http://schema.org/MedicalSymptom"/>
    ///</summary>
    public static readonly Class MedicalSymptom = new Class(new Uri("http://schema.org/MedicalSymptom"));    

    ///<summary>
    ///Any medical test, typically performed for diagnostic purposes.
    ///<see cref="http://schema.org/MedicalTest"/>
    ///</summary>
    public static readonly Class MedicalTest = new Class(new Uri("http://schema.org/MedicalTest"));    

    ///<summary>
    ///Any collection of tests commonly ordered together.
    ///<see cref="http://schema.org/MedicalTestPanel"/>
    ///</summary>
    public static readonly Class MedicalTestPanel = new Class(new Uri("http://schema.org/MedicalTestPanel"));    

    ///<summary>
    ///Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.
    ///<see cref="http://schema.org/MedicalTherapy"/>
    ///</summary>
    public static readonly Class MedicalTherapy = new Class(new Uri("http://schema.org/MedicalTherapy"));    

    ///<summary>
    ///A medical trial is a type of medical study that uses scientific process used to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.
    ///<see cref="http://schema.org/MedicalTrial"/>
    ///</summary>
    public static readonly Class MedicalTrial = new Class(new Uri("http://schema.org/MedicalTrial"));    

    ///<summary>
    ///Design models for medical trials. Enumerated type.
    ///<see cref="http://schema.org/MedicalTrialDesign"/>
    ///</summary>
    public static readonly Class MedicalTrialDesign = new Class(new Uri("http://schema.org/MedicalTrialDesign"));    

    ///<summary>
    ///A web page that provides medical information.
    ///<see cref="http://schema.org/MedicalWebPage"/>
    ///</summary>
    public static readonly Class MedicalWebPage = new Class(new Uri("http://schema.org/MedicalWebPage"));    

    ///<summary>
    ///Systems of medical practice.
    ///<see cref="http://schema.org/MedicineSystem"/>
    ///</summary>
    public static readonly Class MedicineSystem = new Class(new Uri("http://schema.org/MedicineSystem"));    

    ///<summary>
    ///A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/MeetingRoom"/>
    ///</summary>
    public static readonly Class MeetingRoom = new Class(new Uri("http://schema.org/MeetingRoom"));    

    ///<summary>
    ///A men's clothing store.
    ///<see cref="http://schema.org/MensClothingStore"/>
    ///</summary>
    public static readonly Class MensClothingStore = new Class(new Uri("http://schema.org/MensClothingStore"));    

    ///<summary>
    ///A structured representation of food or drink items available from a FoodEstablishment.
    ///<see cref="http://schema.org/Menu"/>
    ///</summary>
    public static readonly Class Menu = new Class(new Uri("http://schema.org/Menu"));    

    ///<summary>
    ///A food or drink item listed in a menu or menu section.
    ///<see cref="http://schema.org/MenuItem"/>
    ///</summary>
    public static readonly Class MenuItem = new Class(new Uri("http://schema.org/MenuItem"));    

    ///<summary>
    ///A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.
    ///<see cref="http://schema.org/MenuSection"/>
    ///</summary>
    public static readonly Class MenuSection = new Class(new Uri("http://schema.org/MenuSection"));    

    ///<summary>
    ///A single message from a sender to one or more organizations or people.
    ///<see cref="http://schema.org/Message"/>
    ///</summary>
    public static readonly Class Message = new Class(new Uri("http://schema.org/Message"));    

    ///<summary>
    ///A middle school (typically for children aged around 11-14, although this varies somewhat).
    ///<see cref="http://schema.org/MiddleSchool"/>
    ///</summary>
    public static readonly Class MiddleSchool = new Class(new Uri("http://schema.org/MiddleSchool"));    

    ///<summary>
    ///A software application designed specifically to work well on a mobile device such as a telephone.
    ///<see cref="http://schema.org/MobileApplication"/>
    ///</summary>
    public static readonly Class MobileApplication = new Class(new Uri("http://schema.org/MobileApplication"));    

    ///<summary>
    ///A store that sells mobile phones and related accessories.
    ///<see cref="http://schema.org/MobilePhoneStore"/>
    ///</summary>
    public static readonly Class MobilePhoneStore = new Class(new Uri("http://schema.org/MobilePhoneStore"));    

    ///<summary>
    ///A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.
    ///<see cref="http://schema.org/MonetaryAmount"/>
    ///</summary>
    public static readonly Class MonetaryAmount = new Class(new Uri("http://schema.org/MonetaryAmount"));    

    ///<summary>
    ///A statistical distribution of monetary amounts.
    ///<see cref="http://schema.org/MonetaryAmountDistribution"/>
    ///</summary>
    public static readonly Class MonetaryAmountDistribution = new Class(new Uri("http://schema.org/MonetaryAmountDistribution"));    

    ///<summary>
    ///A monetary grant.
    ///<see cref="http://schema.org/MonetaryGrant"/>
    ///</summary>
    public static readonly Class MonetaryGrant = new Class(new Uri("http://schema.org/MonetaryGrant"));    

    ///<summary>
    ///The act of transferring money from one place to another place. This may occur electronically or physically.
    ///<see cref="http://schema.org/MoneyTransfer"/>
    ///</summary>
    public static readonly Class MoneyTransfer = new Class(new Uri("http://schema.org/MoneyTransfer"));    

    ///<summary>
    ///A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)
    ///<see cref="http://schema.org/MortgageLoan"/>
    ///</summary>
    public static readonly Class MortgageLoan = new Class(new Uri("http://schema.org/MortgageLoan"));    

    ///<summary>
    ///A mosque.
    ///<see cref="http://schema.org/Mosque"/>
    ///</summary>
    public static readonly Class Mosque = new Class(new Uri("http://schema.org/Mosque"));    

    ///<summary>
    ///A motel.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Motel"/>
    ///</summary>
    public static readonly Class Motel = new Class(new Uri("http://schema.org/Motel"));    

    ///<summary>
    ///A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
    ///<see cref="http://schema.org/Motorcycle"/>
    ///</summary>
    public static readonly Class Motorcycle = new Class(new Uri("http://schema.org/Motorcycle"));    

    ///<summary>
    ///A motorcycle dealer.
    ///<see cref="http://schema.org/MotorcycleDealer"/>
    ///</summary>
    public static readonly Class MotorcycleDealer = new Class(new Uri("http://schema.org/MotorcycleDealer"));    

    ///<summary>
    ///A motorcycle repair shop.
    ///<see cref="http://schema.org/MotorcycleRepair"/>
    ///</summary>
    public static readonly Class MotorcycleRepair = new Class(new Uri("http://schema.org/MotorcycleRepair"));    

    ///<summary>
    ///A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.
    ///<see cref="http://schema.org/MotorizedBicycle"/>
    ///</summary>
    public static readonly Class MotorizedBicycle = new Class(new Uri("http://schema.org/MotorizedBicycle"));    

    ///<summary>
    ///A mountain, like Mount Whitney or Mount Everest.
    ///<see cref="http://schema.org/Mountain"/>
    ///</summary>
    public static readonly Class Mountain = new Class(new Uri("http://schema.org/Mountain"));    

    ///<summary>
    ///The act of an agent relocating to a place.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/MoveAction"/>
    ///</summary>
    public static readonly Class MoveAction = new Class(new Uri("http://schema.org/MoveAction"));    

    ///<summary>
    ///A movie.
    ///<see cref="http://schema.org/Movie"/>
    ///</summary>
    public static readonly Class Movie = new Class(new Uri("http://schema.org/Movie"));    

    ///<summary>
    ///A short segment/part of a movie.
    ///<see cref="http://schema.org/MovieClip"/>
    ///</summary>
    public static readonly Class MovieClip = new Class(new Uri("http://schema.org/MovieClip"));    

    ///<summary>
    ///A movie rental store.
    ///<see cref="http://schema.org/MovieRentalStore"/>
    ///</summary>
    public static readonly Class MovieRentalStore = new Class(new Uri("http://schema.org/MovieRentalStore"));    

    ///<summary>
    ///A series of movies. Included movies can be indicated with the hasPart property.
    ///<see cref="http://schema.org/MovieSeries"/>
    ///</summary>
    public static readonly Class MovieSeries = new Class(new Uri("http://schema.org/MovieSeries"));    

    ///<summary>
    ///A movie theater.
    ///<see cref="http://schema.org/MovieTheater"/>
    ///</summary>
    public static readonly Class MovieTheater = new Class(new Uri("http://schema.org/MovieTheater"));    

    ///<summary>
    ///A moving company.
    ///<see cref="http://schema.org/MovingCompany"/>
    ///</summary>
    public static readonly Class MovingCompany = new Class(new Uri("http://schema.org/MovingCompany"));    

    ///<summary>
    ///A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.
    ///<see cref="http://schema.org/Muscle"/>
    ///</summary>
    public static readonly Class Muscle = new Class(new Uri("http://schema.org/Muscle"));    

    ///<summary>
    ///A museum.
    ///<see cref="http://schema.org/Museum"/>
    ///</summary>
    public static readonly Class Museum = new Class(new Uri("http://schema.org/Museum"));    

    ///<summary>
    ///A collection of music tracks.
    ///<see cref="http://schema.org/MusicAlbum"/>
    ///</summary>
    public static readonly Class MusicAlbum = new Class(new Uri("http://schema.org/MusicAlbum"));    

    ///<summary>
    ///Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
    ///<see cref="http://schema.org/MusicAlbumProductionType"/>
    ///</summary>
    public static readonly Class MusicAlbumProductionType = new Class(new Uri("http://schema.org/MusicAlbumProductionType"));    

    ///<summary>
    ///The kind of release which this album is: single, EP or album.
    ///<see cref="http://schema.org/MusicAlbumReleaseType"/>
    ///</summary>
    public static readonly Class MusicAlbumReleaseType = new Class(new Uri("http://schema.org/MusicAlbumReleaseType"));    

    ///<summary>
    ///A musical composition.
    ///<see cref="http://schema.org/MusicComposition"/>
    ///</summary>
    public static readonly Class MusicComposition = new Class(new Uri("http://schema.org/MusicComposition"));    

    ///<summary>
    ///Event type: Music event.
    ///<see cref="http://schema.org/MusicEvent"/>
    ///</summary>
    public static readonly Class MusicEvent = new Class(new Uri("http://schema.org/MusicEvent"));    

    ///<summary>
    ///A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
    ///<see cref="http://schema.org/MusicGroup"/>
    ///</summary>
    public static readonly Class MusicGroup = new Class(new Uri("http://schema.org/MusicGroup"));    

    ///<summary>
    ///A collection of music tracks in playlist form.
    ///<see cref="http://schema.org/MusicPlaylist"/>
    ///</summary>
    public static readonly Class MusicPlaylist = new Class(new Uri("http://schema.org/MusicPlaylist"));    

    ///<summary>
    ///A music recording (track), usually a single song.
    ///<see cref="http://schema.org/MusicRecording"/>
    ///</summary>
    public static readonly Class MusicRecording = new Class(new Uri("http://schema.org/MusicRecording"));    

    ///<summary>
    ///A MusicRelease is a specific release of a music album.
    ///<see cref="http://schema.org/MusicRelease"/>
    ///</summary>
    public static readonly Class MusicRelease = new Class(new Uri("http://schema.org/MusicRelease"));    

    ///<summary>
    ///Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
    ///<see cref="http://schema.org/MusicReleaseFormatType"/>
    ///</summary>
    public static readonly Class MusicReleaseFormatType = new Class(new Uri("http://schema.org/MusicReleaseFormatType"));    

    ///<summary>
    ///A music store.
    ///<see cref="http://schema.org/MusicStore"/>
    ///</summary>
    public static readonly Class MusicStore = new Class(new Uri("http://schema.org/MusicStore"));    

    ///<summary>
    ///A music venue.
    ///<see cref="http://schema.org/MusicVenue"/>
    ///</summary>
    public static readonly Class MusicVenue = new Class(new Uri("http://schema.org/MusicVenue"));    

    ///<summary>
    ///A music video file.
    ///<see cref="http://schema.org/MusicVideoObject"/>
    ///</summary>
    public static readonly Class MusicVideoObject = new Class(new Uri("http://schema.org/MusicVideoObject"));    

    ///<summary>
    ///Organization: Non-governmental Organization.
    ///<see cref="http://schema.org/NGO"/>
    ///</summary>
    public static readonly Class NGO = new Class(new Uri("http://schema.org/NGO"));    

    ///<summary>
    ///A nail salon.
    ///<see cref="http://schema.org/NailSalon"/>
    ///</summary>
    public static readonly Class NailSalon = new Class(new Uri("http://schema.org/NailSalon"));    

    ///<summary>
    ///A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.
    ///<see cref="http://schema.org/Nerve"/>
    ///</summary>
    public static readonly Class Nerve = new Class(new Uri("http://schema.org/Nerve"));    

    ///<summary>
    ///A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>
    ///
    ///A more detailed overview of <a href="/docs/news.html">schema.org News markup</a> is also available.
    ///<see cref="http://schema.org/NewsArticle"/>
    ///</summary>
    public static readonly Class NewsArticle = new Class(new Uri("http://schema.org/NewsArticle"));    

    ///<summary>
    ///A News/Media organization such as a newspaper or TV station.
    ///<see cref="http://schema.org/NewsMediaOrganization"/>
    ///</summary>
    public static readonly Class NewsMediaOrganization = new Class(new Uri("http://schema.org/NewsMediaOrganization"));    

    ///<summary>
    ///A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.
    ///<see cref="http://schema.org/Newspaper"/>
    ///</summary>
    public static readonly Class Newspaper = new Class(new Uri("http://schema.org/Newspaper"));    

    ///<summary>
    ///A nightclub or discotheque.
    ///<see cref="http://schema.org/NightClub"/>
    ///</summary>
    public static readonly Class NightClub = new Class(new Uri("http://schema.org/NightClub"));    

    ///<summary>
    ///A notary.
    ///<see cref="http://schema.org/Notary"/>
    ///</summary>
    public static readonly Class Notary = new Class(new Uri("http://schema.org/Notary"));    

    ///<summary>
    ///A file containing a note, primarily for the author.
    ///<see cref="http://schema.org/NoteDigitalDocument"/>
    ///</summary>
    public static readonly Class NoteDigitalDocument = new Class(new Uri("http://schema.org/NoteDigitalDocument"));    

    ///<summary>
    ///Data type: Number.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/Number"/>
    ///</summary>
    public static readonly Class Number = new Class(new Uri("http://schema.org/Number"));    

    ///<summary>
    ///Nutritional information about the recipe.
    ///<see cref="http://schema.org/NutritionInformation"/>
    ///</summary>
    public static readonly Class NutritionInformation = new Class(new Uri("http://schema.org/NutritionInformation"));    

    ///<summary>
    ///Instances of the class <a class="localLink" href="http://schema.org/Observation">Observation</a> are used to specify observations about an entity (which may or may not be an instance of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>), at a particular time. The principal properties of an <a class="localLink" href="http://schema.org/Observation">Observation</a> are <a class="localLink" href="http://schema.org/observedNode">observedNode</a>, <a class="localLink" href="http://schema.org/measuredProperty">measuredProperty</a>, <a class="localLink" href="http://schema.org/measuredValue">measuredValue</a> (or <a class="localLink" href="http://schema.org/median">median</a>, etc.) and <a class="localLink" href="http://schema.org/observationDate">observationDate</a> (<a class="localLink" href="http://schema.org/measuredProperty">measuredProperty</a> properties can, but need not always, be W3C RDF Data Cube "measure properties", as in the <a href="https://www.w3.org/TR/vocab-data-cube/#dsd-example">lifeExpectancy example</a>).
    ///See also <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>, and the <a href="/docs/data-and-datasets.html">data and datasets</a> overview for more details.
    ///<see cref="http://schema.org/Observation"/>
    ///</summary>
    public static readonly Class Observation = new Class(new Uri("http://schema.org/Observation"));    

    ///<summary>
    ///A profession, may involve prolonged training and/or a formal qualification.
    ///<see cref="http://schema.org/Occupation"/>
    ///</summary>
    public static readonly Class Occupation = new Class(new Uri("http://schema.org/Occupation"));    

    ///<summary>
    ///A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.
    ///<see cref="http://schema.org/OccupationalTherapy"/>
    ///</summary>
    public static readonly Class OccupationalTherapy = new Class(new Uri("http://schema.org/OccupationalTherapy"));    

    ///<summary>
    ///An ocean (for example, the Pacific).
    ///<see cref="http://schema.org/OceanBodyOfWater"/>
    ///</summary>
    public static readonly Class OceanBodyOfWater = new Class(new Uri("http://schema.org/OceanBodyOfWater"));    

    ///<summary>
    ///An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>
    ///
    ///For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a> and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a> from <a href="http://www.gs1.org/">GS1</a>.
    ///<see cref="http://schema.org/Offer"/>
    ///</summary>
    public static readonly Class Offer = new Class(new Uri("http://schema.org/Offer"));    

    ///<summary>
    ///An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.
    ///<see cref="http://schema.org/OfferCatalog"/>
    ///</summary>
    public static readonly Class OfferCatalog = new Class(new Uri("http://schema.org/OfferCatalog"));    

    ///<summary>
    ///A list of possible conditions for the item.
    ///<see cref="http://schema.org/OfferItemCondition"/>
    ///</summary>
    public static readonly Class OfferItemCondition = new Class(new Uri("http://schema.org/OfferItemCondition"));    

    ///<summary>
    ///An office equipment store.
    ///<see cref="http://schema.org/OfficeEquipmentStore"/>
    ///</summary>
    public static readonly Class OfficeEquipmentStore = new Class(new Uri("http://schema.org/OfficeEquipmentStore"));    

    ///<summary>
    ///A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.
    ///<see cref="http://schema.org/OnDemandEvent"/>
    ///</summary>
    public static readonly Class OnDemandEvent = new Class(new Uri("http://schema.org/OnDemandEvent"));    

    ///<summary>
    ///A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>
    ///
    ///The place is <strong>open</strong> if the <a class="localLink" href="http://schema.org/opens">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>
    ///
    ///If the value for the <a class="localLink" href="http://schema.org/closes">closes</a> property is less than the value for the <a class="localLink" href="http://schema.org/opens">opens</a> property then the hour range is assumed to span over the next day.
    ///<see cref="http://schema.org/OpeningHoursSpecification"/>
    ///</summary>
    public static readonly Class OpeningHoursSpecification = new Class(new Uri("http://schema.org/OpeningHoursSpecification"));    

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/OpinionNewsArticle">OpinionNewsArticle</a> is a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> that primarily expresses opinions rather than journalistic reporting of news and events. For example, a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> consisting of a column or <a class="localLink" href="http://schema.org/Blog">Blog</a>/<a class="localLink" href="http://schema.org/BlogPosting">BlogPosting</a> entry in the Opinions section of a news publication.
    ///<see cref="http://schema.org/OpinionNewsArticle"/>
    ///</summary>
    public static readonly Class OpinionNewsArticle = new Class(new Uri("http://schema.org/OpinionNewsArticle"));    

    ///<summary>
    ///A store that sells reading glasses and similar devices for improving vision.
    ///<see cref="http://schema.org/Optician"/>
    ///</summary>
    public static readonly Class Optician = new Class(new Uri("http://schema.org/Optician"));    

    ///<summary>
    ///An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
    ///<see cref="http://schema.org/Order"/>
    ///</summary>
    public static readonly Class Order = new Class(new Uri("http://schema.org/Order"));    

    ///<summary>
    ///An agent orders an object/product/service to be delivered/sent.
    ///<see cref="http://schema.org/OrderAction"/>
    ///</summary>
    public static readonly Class OrderAction = new Class(new Uri("http://schema.org/OrderAction"));    

    ///<summary>
    ///An order item is a line of an order. It includes the quantity and shipping details of a bought offer.
    ///<see cref="http://schema.org/OrderItem"/>
    ///</summary>
    public static readonly Class OrderItem = new Class(new Uri("http://schema.org/OrderItem"));    

    ///<summary>
    ///Enumerated status values for Order.
    ///<see cref="http://schema.org/OrderStatus"/>
    ///</summary>
    public static readonly Class OrderStatus = new Class(new Uri("http://schema.org/OrderStatus"));    

    ///<summary>
    ///An organization such as a school, NGO, corporation, club, etc.
    ///<see cref="http://schema.org/Organization"/>
    ///</summary>
    public static readonly Class Organization = new Class(new Uri("http://schema.org/Organization"));    

    ///<summary>
    ///A subclass of Role used to describe roles within organizations.
    ///<see cref="http://schema.org/OrganizationRole"/>
    ///</summary>
    public static readonly Class OrganizationRole = new Class(new Uri("http://schema.org/OrganizationRole"));    

    ///<summary>
    ///The act of manipulating/administering/supervising/controlling one or more objects.
    ///<see cref="http://schema.org/OrganizeAction"/>
    ///</summary>
    public static readonly Class OrganizeAction = new Class(new Uri("http://schema.org/OrganizeAction"));    

    ///<summary>
    ///An outlet store.
    ///<see cref="http://schema.org/OutletStore"/>
    ///</summary>
    public static readonly Class OutletStore = new Class(new Uri("http://schema.org/OutletStore"));    

    ///<summary>
    ///A structured value providing information about when a certain organization or person owned a certain product.
    ///<see cref="http://schema.org/OwnershipInfo"/>
    ///</summary>
    public static readonly Class OwnershipInfo = new Class(new Uri("http://schema.org/OwnershipInfo"));    

    ///<summary>
    ///The act of producing a painting, typically with paint and canvas as instruments.
    ///<see cref="http://schema.org/PaintAction"/>
    ///</summary>
    public static readonly Class PaintAction = new Class(new Uri("http://schema.org/PaintAction"));    

    ///<summary>
    ///A painting.
    ///<see cref="http://schema.org/Painting"/>
    ///</summary>
    public static readonly Class Painting = new Class(new Uri("http://schema.org/Painting"));    

    ///<summary>
    ///A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.
    ///<see cref="http://schema.org/PalliativeProcedure"/>
    ///</summary>
    public static readonly Class PalliativeProcedure = new Class(new Uri("http://schema.org/PalliativeProcedure"));    

    ///<summary>
    ///The delivery of a parcel either via the postal service or a commercial service.
    ///<see cref="http://schema.org/ParcelDelivery"/>
    ///</summary>
    public static readonly Class ParcelDelivery = new Class(new Uri("http://schema.org/ParcelDelivery"));    

    ///<summary>
    ///A private parcel service as the delivery mode available for a certain offer.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#DHL</li>
    ///<li>http://purl.org/goodrelations/v1#FederalExpress</li>
    ///<li>http://purl.org/goodrelations/v1#UPS</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ParcelService"/>
    ///</summary>
    public static readonly Class ParcelService = new Class(new Uri("http://schema.org/ParcelService"));    

    ///<summary>
    ///A set of characteristics describing parents, who can be interested in viewing some content.
    ///<see cref="http://schema.org/ParentAudience"/>
    ///</summary>
    public static readonly Class ParentAudience = new Class(new Uri("http://schema.org/ParentAudience"));    

    ///<summary>
    ///A park.
    ///<see cref="http://schema.org/Park"/>
    ///</summary>
    public static readonly Class Park = new Class(new Uri("http://schema.org/Park"));    

    ///<summary>
    ///A parking lot or other parking facility.
    ///<see cref="http://schema.org/ParkingFacility"/>
    ///</summary>
    public static readonly Class ParkingFacility = new Class(new Uri("http://schema.org/ParkingFacility"));    

    ///<summary>
    ///A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.
    ///<see cref="http://schema.org/PathologyTest"/>
    ///</summary>
    public static readonly Class PathologyTest = new Class(new Uri("http://schema.org/PathologyTest"));    

    ///<summary>
    ///A patient is any person recipient of health care services.
    ///<see cref="http://schema.org/Patient"/>
    ///</summary>
    public static readonly Class Patient = new Class(new Uri("http://schema.org/Patient"));    

    ///<summary>
    ///A shop that will buy, or lend money against the security of, personal possessions.
    ///<see cref="http://schema.org/PawnShop"/>
    ///</summary>
    public static readonly Class PawnShop = new Class(new Uri("http://schema.org/PawnShop"));    

    ///<summary>
    ///An agent pays a price to a participant.
    ///<see cref="http://schema.org/PayAction"/>
    ///</summary>
    public static readonly Class PayAction = new Class(new Uri("http://schema.org/PayAction"));    

    ///<summary>
    ///A payment method using a credit, debit, store or other card to associate the payment with an account.
    ///<see cref="http://schema.org/PaymentCard"/>
    ///</summary>
    public static readonly Class PaymentCard = new Class(new Uri("http://schema.org/PaymentCard"));    

    ///<summary>
    ///The costs of settling the payment using a particular payment method.
    ///<see cref="http://schema.org/PaymentChargeSpecification"/>
    ///</summary>
    public static readonly Class PaymentChargeSpecification = new Class(new Uri("http://schema.org/PaymentChargeSpecification"));    

    ///<summary>
    ///A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
    ///<li>http://purl.org/goodrelations/v1#ByInvoice</li>
    ///<li>http://purl.org/goodrelations/v1#Cash</li>
    ///<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
    ///<li>http://purl.org/goodrelations/v1#COD</li>
    ///<li>http://purl.org/goodrelations/v1#DirectDebit</li>
    ///<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
    ///<li>http://purl.org/goodrelations/v1#PayPal</li>
    ///<li>http://purl.org/goodrelations/v1#PaySwarm</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/PaymentMethod"/>
    ///</summary>
    public static readonly Class PaymentMethod = new Class(new Uri("http://schema.org/PaymentMethod"));    

    ///<summary>
    ///A Service to transfer funds from a person or organization to a beneficiary person or organization.
    ///<see cref="http://schema.org/PaymentService"/>
    ///</summary>
    public static readonly Class PaymentService = new Class(new Uri("http://schema.org/PaymentService"));    

    ///<summary>
    ///A specific payment status. For example, PaymentDue, PaymentComplete, etc.
    ///<see cref="http://schema.org/PaymentStatusType"/>
    ///</summary>
    public static readonly Class PaymentStatusType = new Class(new Uri("http://schema.org/PaymentStatusType"));    

    ///<summary>
    ///A set of characteristics belonging to people, e.g. who compose an item's target audience.
    ///<see cref="http://schema.org/PeopleAudience"/>
    ///</summary>
    public static readonly Class PeopleAudience = new Class(new Uri("http://schema.org/PeopleAudience"));    

    ///<summary>
    ///The act of participating in performance arts.
    ///<see cref="http://schema.org/PerformAction"/>
    ///</summary>
    public static readonly Class PerformAction = new Class(new Uri("http://schema.org/PerformAction"));    

    ///<summary>
    ///A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
    ///<see cref="http://schema.org/PerformanceRole"/>
    ///</summary>
    public static readonly Class PerformanceRole = new Class(new Uri("http://schema.org/PerformanceRole"));    

    ///<summary>
    ///A theater or other performing art center.
    ///<see cref="http://schema.org/PerformingArtsTheater"/>
    ///</summary>
    public static readonly Class PerformingArtsTheater = new Class(new Uri("http://schema.org/PerformingArtsTheater"));    

    ///<summary>
    ///A performance group, such as a band, an orchestra, or a circus.
    ///<see cref="http://schema.org/PerformingGroup"/>
    ///</summary>
    public static readonly Class PerformingGroup = new Class(new Uri("http://schema.org/PerformingGroup"));    

    ///<summary>
    ///A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/Periodical"/>
    ///</summary>
    public static readonly Class Periodical = new Class(new Uri("http://schema.org/Periodical"));    

    ///<summary>
    ///A permit issued by an organization, e.g. a parking pass.
    ///<see cref="http://schema.org/Permit"/>
    ///</summary>
    public static readonly Class Permit = new Class(new Uri("http://schema.org/Permit"));    

    ///<summary>
    ///A person (alive, dead, undead, or fictional).
    ///<see cref="http://schema.org/Person"/>
    ///</summary>
    public static readonly Class Person = new Class(new Uri("http://schema.org/Person"));    

    ///<summary>
    ///A pet store.
    ///<see cref="http://schema.org/PetStore"/>
    ///</summary>
    public static readonly Class PetStore = new Class(new Uri("http://schema.org/PetStore"));    

    ///<summary>
    ///A pharmacy or drugstore.
    ///<see cref="http://schema.org/Pharmacy"/>
    ///</summary>
    public static readonly Class Pharmacy = new Class(new Uri("http://schema.org/Pharmacy"));    

    ///<summary>
    ///A photograph.
    ///<see cref="http://schema.org/Photograph"/>
    ///</summary>
    public static readonly Class Photograph = new Class(new Uri("http://schema.org/Photograph"));    

    ///<summary>
    ///The act of capturing still images of objects using a camera.
    ///<see cref="http://schema.org/PhotographAction"/>
    ///</summary>
    public static readonly Class PhotographAction = new Class(new Uri("http://schema.org/PhotographAction"));    

    ///<summary>
    ///Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.
    ///<see cref="http://schema.org/PhysicalActivity"/>
    ///</summary>
    public static readonly Class PhysicalActivity = new Class(new Uri("http://schema.org/PhysicalActivity"));    

    ///<summary>
    ///Categories of physical activity, organized by physiologic classification.
    ///<see cref="http://schema.org/PhysicalActivityCategory"/>
    ///</summary>
    public static readonly Class PhysicalActivityCategory = new Class(new Uri("http://schema.org/PhysicalActivityCategory"));    

    ///<summary>
    ///A type of physical examination of a patient performed by a physician.
    ///<see cref="http://schema.org/PhysicalExam"/>
    ///</summary>
    public static readonly Class PhysicalExam = new Class(new Uri("http://schema.org/PhysicalExam"));    

    ///<summary>
    ///A process of progressive physical care and rehabilitation aimed at improving a health condition.
    ///<see cref="http://schema.org/PhysicalTherapy"/>
    ///</summary>
    public static readonly Class PhysicalTherapy = new Class(new Uri("http://schema.org/PhysicalTherapy"));    

    ///<summary>
    ///A doctor's office.
    ///<see cref="http://schema.org/Physician"/>
    ///</summary>
    public static readonly Class Physician = new Class(new Uri("http://schema.org/Physician"));    

    ///<summary>
    ///Entities that have a somewhat fixed, physical extension.
    ///<see cref="http://schema.org/Place"/>
    ///</summary>
    public static readonly Class Place = new Class(new Uri("http://schema.org/Place"));    

    ///<summary>
    ///Place of worship, such as a church, synagogue, or mosque.
    ///<see cref="http://schema.org/PlaceOfWorship"/>
    ///</summary>
    public static readonly Class PlaceOfWorship = new Class(new Uri("http://schema.org/PlaceOfWorship"));    

    ///<summary>
    ///The act of planning the execution of an event/task/action/reservation/plan to a future date.
    ///<see cref="http://schema.org/PlanAction"/>
    ///</summary>
    public static readonly Class PlanAction = new Class(new Uri("http://schema.org/PlanAction"));    

    ///<summary>
    ///A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note the peformance of a Play would be a <a class="localLink" href="http://schema.org/TheaterEvent">TheaterEvent</a> - the <em>Play</em> being the <a class="localLink" href="http://schema.org/workPerformed">workPerformed</a>.
    ///<see cref="http://schema.org/Play"/>
    ///</summary>
    public static readonly Class Play = new Class(new Uri("http://schema.org/Play"));    

    ///<summary>
    ///The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>
    ///<li><a class="localLink" href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/PlayAction"/>
    ///</summary>
    public static readonly Class PlayAction = new Class(new Uri("http://schema.org/PlayAction"));    

    ///<summary>
    ///A playground.
    ///<see cref="http://schema.org/Playground"/>
    ///</summary>
    public static readonly Class Playground = new Class(new Uri("http://schema.org/Playground"));    

    ///<summary>
    ///A plumbing service.
    ///<see cref="http://schema.org/Plumber"/>
    ///</summary>
    public static readonly Class Plumber = new Class(new Uri("http://schema.org/Plumber"));    

    ///<summary>
    ///A police station.
    ///<see cref="http://schema.org/PoliceStation"/>
    ///</summary>
    public static readonly Class PoliceStation = new Class(new Uri("http://schema.org/PoliceStation"));    

    ///<summary>
    ///A pond.
    ///<see cref="http://schema.org/Pond"/>
    ///</summary>
    public static readonly Class Pond = new Class(new Uri("http://schema.org/Pond"));    

    ///<summary>
    ///A post office.
    ///<see cref="http://schema.org/PostOffice"/>
    ///</summary>
    public static readonly Class PostOffice = new Class(new Uri("http://schema.org/PostOffice"));    

    ///<summary>
    ///The mailing address.
    ///<see cref="http://schema.org/PostalAddress"/>
    ///</summary>
    public static readonly Class PostalAddress = new Class(new Uri("http://schema.org/PostalAddress"));    

    ///<summary>
    ///A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.
    ///<see cref="http://schema.org/Poster"/>
    ///</summary>
    public static readonly Class Poster = new Class(new Uri("http://schema.org/Poster"));    

    ///<summary>
    ///An agent orders a (not yet released) object/product/service to be delivered/sent.
    ///<see cref="http://schema.org/PreOrderAction"/>
    ///</summary>
    public static readonly Class PreOrderAction = new Class(new Uri("http://schema.org/PreOrderAction"));    

    ///<summary>
    ///The act of inserting at the beginning if an ordered collection.
    ///<see cref="http://schema.org/PrependAction"/>
    ///</summary>
    public static readonly Class PrependAction = new Class(new Uri("http://schema.org/PrependAction"));    

    ///<summary>
    ///A preschool.
    ///<see cref="http://schema.org/Preschool"/>
    ///</summary>
    public static readonly Class Preschool = new Class(new Uri("http://schema.org/Preschool"));    

    ///<summary>
    ///A file containing slides or used for a presentation.
    ///<see cref="http://schema.org/PresentationDigitalDocument"/>
    ///</summary>
    public static readonly Class PresentationDigitalDocument = new Class(new Uri("http://schema.org/PresentationDigitalDocument"));    

    ///<summary>
    ///An indication for preventing an underlying condition, symptom, etc.
    ///<see cref="http://schema.org/PreventionIndication"/>
    ///</summary>
    public static readonly Class PreventionIndication = new Class(new Uri("http://schema.org/PreventionIndication"));    

    ///<summary>
    ///A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.
    ///<see cref="http://schema.org/PriceSpecification"/>
    ///</summary>
    public static readonly Class PriceSpecification = new Class(new Uri("http://schema.org/PriceSpecification"));    

    ///<summary>
    ///Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
    ///<see cref="http://schema.org/Product"/>
    ///</summary>
    public static readonly Class Product = new Class(new Uri("http://schema.org/Product"));    

    ///<summary>
    ///A datasheet or vendor specification of a product (in the sense of a prototypical description).
    ///<see cref="http://schema.org/ProductModel"/>
    ///</summary>
    public static readonly Class ProductModel = new Class(new Uri("http://schema.org/ProductModel"));    

    ///<summary>
    ///ProductReturnEnumeration enumerates several kinds of product return policy. Note that this structure may not capture all aspects of the policy.
    ///<see cref="http://schema.org/ProductReturnEnumeration"/>
    ///</summary>
    public static readonly Class ProductReturnEnumeration = new Class(new Uri("http://schema.org/ProductReturnEnumeration"));    

    ///<summary>
    ///A ProductReturnPolicy provides information about product return policies associated with an <a class="localLink" href="http://schema.org/Organization">Organization</a> or <a class="localLink" href="http://schema.org/Product">Product</a>.
    ///<see cref="http://schema.org/ProductReturnPolicy"/>
    ///</summary>
    public static readonly Class ProductReturnPolicy = new Class(new Uri("http://schema.org/ProductReturnPolicy"));    

    ///<summary>
    ///Original definition: "provider of professional services."<br/><br/>
    ///
    ///The general <a class="localLink" href="http://schema.org/ProfessionalService">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class="localLink" href="http://schema.org/Service">Service</a>. For reference, the types that it included were: <a class="localLink" href="http://schema.org/Dentist">Dentist</a>,
    ///        <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
    ///        <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>.
    ///<see cref="http://schema.org/ProfessionalService"/>
    ///</summary>
    public static readonly Class ProfessionalService = new Class(new Uri("http://schema.org/ProfessionalService"));    

    ///<summary>
    ///Web page type: Profile page.
    ///<see cref="http://schema.org/ProfilePage"/>
    ///</summary>
    public static readonly Class ProfilePage = new Class(new Uri("http://schema.org/ProfilePage"));    

    ///<summary>
    ///Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
    ///<see cref="http://schema.org/ProgramMembership"/>
    ///</summary>
    public static readonly Class ProgramMembership = new Class(new Uri("http://schema.org/ProgramMembership"));    

    ///<summary>
    ///An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.
    ///Use properties from <a class="localLink" href="http://schema.org/Organization">Organization</a>, <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a>/<a class="localLink" href="http://schema.org/parentOrganization">parentOrganization</a> to indicate project sub-structures.
    ///<see cref="http://schema.org/Project"/>
    ///</summary>
    public static readonly Class Project = new Class(new Uri("http://schema.org/Project"));    

    ///<summary>
    ///A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.
    ///<see cref="http://schema.org/Property"/>
    ///</summary>
    public static readonly Class Property = new Class(new Uri("http://schema.org/Property"));    

    ///<summary>
    ///A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>
    ///
    ///Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
    ///<see cref="http://schema.org/PropertyValue"/>
    ///</summary>
    public static readonly Class PropertyValue = new Class(new Uri("http://schema.org/PropertyValue"));    

    ///<summary>
    ///A Property value specification.
    ///<see cref="http://schema.org/PropertyValueSpecification"/>
    ///</summary>
    public static readonly Class PropertyValueSpecification = new Class(new Uri("http://schema.org/PropertyValueSpecification"));    

    ///<summary>
    ///A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.
    ///<see cref="http://schema.org/PsychologicalTreatment"/>
    ///</summary>
    public static readonly Class PsychologicalTreatment = new Class(new Uri("http://schema.org/PsychologicalTreatment"));    

    ///<summary>
    ///A public swimming pool.
    ///<see cref="http://schema.org/PublicSwimmingPool"/>
    ///</summary>
    public static readonly Class PublicSwimmingPool = new Class(new Uri("http://schema.org/PublicSwimmingPool"));    

    ///<summary>
    ///A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.
    ///<see cref="http://schema.org/PublicToilet"/>
    ///</summary>
    public static readonly Class PublicToilet = new Class(new Uri("http://schema.org/PublicToilet"));    

    ///<summary>
    ///A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
    ///<see cref="http://schema.org/PublicationEvent"/>
    ///</summary>
    public static readonly Class PublicationEvent = new Class(new Uri("http://schema.org/PublicationEvent"));    

    ///<summary>
    ///A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/PublicationIssue"/>
    ///</summary>
    public static readonly Class PublicationIssue = new Class(new Uri("http://schema.org/PublicationIssue"));    

    ///<summary>
    ///A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/PublicationVolume"/>
    ///</summary>
    public static readonly Class PublicationVolume = new Class(new Uri("http://schema.org/PublicationVolume"));    

    ///<summary>
    ///A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
    ///<see cref="http://schema.org/QAPage"/>
    ///</summary>
    public static readonly Class QAPage = new Class(new Uri("http://schema.org/QAPage"));    

    ///<summary>
    ///A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
    ///<see cref="http://schema.org/QualitativeValue"/>
    ///</summary>
    public static readonly Class QualitativeValue = new Class(new Uri("http://schema.org/QualitativeValue"));    

    ///<summary>
    ///A point value or interval for product characteristics and other purposes.
    ///<see cref="http://schema.org/QuantitativeValue"/>
    ///</summary>
    public static readonly Class QuantitativeValue = new Class(new Uri("http://schema.org/QuantitativeValue"));    

    ///<summary>
    ///A statistical distribution of values.
    ///<see cref="http://schema.org/QuantitativeValueDistribution"/>
    ///</summary>
    public static readonly Class QuantitativeValueDistribution = new Class(new Uri("http://schema.org/QuantitativeValueDistribution"));    

    ///<summary>
    ///Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.
    ///<see cref="http://schema.org/Quantity"/>
    ///</summary>
    public static readonly Class Quantity = new Class(new Uri("http://schema.org/Quantity"));    

    ///<summary>
    ///A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
    ///<see cref="http://schema.org/Question"/>
    ///</summary>
    public static readonly Class Question = new Class(new Uri("http://schema.org/Question"));    

    ///<summary>
    ///A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use <a class="localLink" href="http://schema.org/isBasedOn">isBasedOn</a> to link to source/origin. The <a class="localLink" href="http://schema.org/recordedIn">recordedIn</a> property can be used to reference a Quotation from an <a class="localLink" href="http://schema.org/Event">Event</a>.
    ///<see cref="http://schema.org/Quotation"/>
    ///</summary>
    public static readonly Class Quotation = new Class(new Uri("http://schema.org/Quotation"));    

    ///<summary>
    ///An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
    ///<see cref="http://schema.org/QuoteAction"/>
    ///</summary>
    public static readonly Class QuoteAction = new Class(new Uri("http://schema.org/QuoteAction"));    

    ///<summary>
    ///A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
    ///<see cref="http://schema.org/RVPark"/>
    ///</summary>
    public static readonly Class RVPark = new Class(new Uri("http://schema.org/RVPark"));    

    ///<summary>
    ///A process of care using radiation aimed at improving a health condition.
    ///<see cref="http://schema.org/RadiationTherapy"/>
    ///</summary>
    public static readonly Class RadiationTherapy = new Class(new Uri("http://schema.org/RadiationTherapy"));    

    ///<summary>
    ///A delivery service through which radio content is provided via broadcast over the air or online.
    ///<see cref="http://schema.org/RadioBroadcastService"/>
    ///</summary>
    public static readonly Class RadioBroadcastService = new Class(new Uri("http://schema.org/RadioBroadcastService"));    

    ///<summary>
    ///A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/RadioChannel"/>
    ///</summary>
    public static readonly Class RadioChannel = new Class(new Uri("http://schema.org/RadioChannel"));    

    ///<summary>
    ///A short radio program or a segment/part of a radio program.
    ///<see cref="http://schema.org/RadioClip"/>
    ///</summary>
    public static readonly Class RadioClip = new Class(new Uri("http://schema.org/RadioClip"));    

    ///<summary>
    ///A radio episode which can be part of a series or season.
    ///<see cref="http://schema.org/RadioEpisode"/>
    ///</summary>
    public static readonly Class RadioEpisode = new Class(new Uri("http://schema.org/RadioEpisode"));    

    ///<summary>
    ///Season dedicated to radio broadcast and associated online delivery.
    ///<see cref="http://schema.org/RadioSeason"/>
    ///</summary>
    public static readonly Class RadioSeason = new Class(new Uri("http://schema.org/RadioSeason"));    

    ///<summary>
    ///CreativeWorkSeries dedicated to radio broadcast and associated online delivery.
    ///<see cref="http://schema.org/RadioSeries"/>
    ///</summary>
    public static readonly Class RadioSeries = new Class(new Uri("http://schema.org/RadioSeries"));    

    ///<summary>
    ///A radio station.
    ///<see cref="http://schema.org/RadioStation"/>
    ///</summary>
    public static readonly Class RadioStation = new Class(new Uri("http://schema.org/RadioStation"));    

    ///<summary>
    ///A rating is an evaluation on a numeric scale, such as 1 to 5 stars.
    ///<see cref="http://schema.org/Rating"/>
    ///</summary>
    public static readonly Class Rating = new Class(new Uri("http://schema.org/Rating"));    

    ///<summary>
    ///The act of responding instinctively and emotionally to an object, expressing a sentiment.
    ///<see cref="http://schema.org/ReactAction"/>
    ///</summary>
    public static readonly Class ReactAction = new Class(new Uri("http://schema.org/ReactAction"));    

    ///<summary>
    ///The act of consuming written content.
    ///<see cref="http://schema.org/ReadAction"/>
    ///</summary>
    public static readonly Class ReadAction = new Class(new Uri("http://schema.org/ReadAction"));    

    ///<summary>
    ///A real-estate agent.
    ///<see cref="http://schema.org/RealEstateAgent"/>
    ///</summary>
    public static readonly Class RealEstateAgent = new Class(new Uri("http://schema.org/RealEstateAgent"));    

    ///<summary>
    ///The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReceiveAction"/>
    ///</summary>
    public static readonly Class ReceiveAction = new Class(new Uri("http://schema.org/ReceiveAction"));    

    ///<summary>
    ///A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class="localLink" href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a class="localLink" href="http://schema.org/keywords">keywords</a> property can also be used to add more detail.
    ///<see cref="http://schema.org/Recipe"/>
    ///</summary>
    public static readonly Class Recipe = new Class(new Uri("http://schema.org/Recipe"));    

    ///<summary>
    ///A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
    ///<see cref="http://schema.org/RecommendedDoseSchedule"/>
    ///</summary>
    public static readonly Class RecommendedDoseSchedule = new Class(new Uri("http://schema.org/RecommendedDoseSchedule"));    

    ///<summary>
    ///A recycling center.
    ///<see cref="http://schema.org/RecyclingCenter"/>
    ///</summary>
    public static readonly Class RecyclingCenter = new Class(new Uri("http://schema.org/RecyclingCenter"));    

    ///<summary>
    ///RefundTypeEnumeration enumerates several kinds of product return refund types.
    ///<see cref="http://schema.org/RefundTypeEnumeration"/>
    ///</summary>
    public static readonly Class RefundTypeEnumeration = new Class(new Uri("http://schema.org/RefundTypeEnumeration"));    

    ///<summary>
    ///The act of registering to be a user of a service, product or web page.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>
    ///<li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/RegisterAction"/>
    ///</summary>
    public static readonly Class RegisterAction = new Class(new Uri("http://schema.org/RegisterAction"));    

    ///<summary>
    ///The act of rejecting to/adopting an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of RejectAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/RejectAction"/>
    ///</summary>
    public static readonly Class RejectAction = new Class(new Uri("http://schema.org/RejectAction"));    

    ///<summary>
    ///The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
    ///<see cref="http://schema.org/RentAction"/>
    ///</summary>
    public static readonly Class RentAction = new Class(new Uri("http://schema.org/RentAction"));    

    ///<summary>
    ///A reservation for a rental car.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/RentalCarReservation"/>
    ///</summary>
    public static readonly Class RentalCarReservation = new Class(new Uri("http://schema.org/RentalCarReservation"));    

    ///<summary>
    ///A structured value representing repayment.
    ///<see cref="http://schema.org/RepaymentSpecification"/>
    ///</summary>
    public static readonly Class RepaymentSpecification = new Class(new Uri("http://schema.org/RepaymentSpecification"));    

    ///<summary>
    ///The act of editing a recipient by replacing an old object with a new object.
    ///<see cref="http://schema.org/ReplaceAction"/>
    ///</summary>
    public static readonly Class ReplaceAction = new Class(new Uri("http://schema.org/ReplaceAction"));    

    ///<summary>
    ///The act of responding to a question/message asked/sent by the object. Related to <a class="localLink" href="http://schema.org/AskAction">AskAction</a><br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReplyAction"/>
    ///</summary>
    public static readonly Class ReplyAction = new Class(new Uri("http://schema.org/ReplyAction"));    

    ///<summary>
    ///A Report generated by governmental or non-governmental organization.
    ///<see cref="http://schema.org/Report"/>
    ///</summary>
    public static readonly Class Report = new Class(new Uri("http://schema.org/Report"));    

    ///<summary>
    ///The <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> type is a subtype of <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> representing
    /// news articles which are the result of journalistic news reporting conventions.<br/><br/>
    ///
    ///In practice many news publishers produce a wide variety of article types, many of which might be considered a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> but not a <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a>. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.<br/><br/>
    ///
    ///The <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> type is based on a stricter ideal for "news" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.<br/><br/>
    ///
    ///A <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> which goes deeper into analysis can also be marked with an additional type of <a class="localLink" href="http://schema.org/AnalysisNewsArticle">AnalysisNewsArticle</a>.
    ///<see cref="http://schema.org/ReportageNewsArticle"/>
    ///</summary>
    public static readonly Class ReportageNewsArticle = new Class(new Uri("http://schema.org/ReportageNewsArticle"));    

    ///<summary>
    ///A patient-reported or observed dosing schedule for a drug or supplement.
    ///<see cref="http://schema.org/ReportedDoseSchedule"/>
    ///</summary>
    public static readonly Class ReportedDoseSchedule = new Class(new Uri("http://schema.org/ReportedDoseSchedule"));    

    ///<summary>
    ///A Research project.
    ///<see cref="http://schema.org/ResearchProject"/>
    ///</summary>
    public static readonly Class ResearchProject = new Class(new Uri("http://schema.org/ResearchProject"));    

    ///<summary>
    ///Describes a reservation for travel, dining or an event. Some reservations require tickets. <br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/Reservation"/>
    ///</summary>
    public static readonly Class Reservation = new Class(new Uri("http://schema.org/Reservation"));    

    ///<summary>
    ///A group of multiple reservations with common values for all sub-reservations.
    ///<see cref="http://schema.org/ReservationPackage"/>
    ///</summary>
    public static readonly Class ReservationPackage = new Class(new Uri("http://schema.org/ReservationPackage"));    

    ///<summary>
    ///Enumerated status values for Reservation.
    ///<see cref="http://schema.org/ReservationStatusType"/>
    ///</summary>
    public static readonly Class ReservationStatusType = new Class(new Uri("http://schema.org/ReservationStatusType"));    

    ///<summary>
    ///Reserving a concrete object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReserveAction"/>
    ///</summary>
    public static readonly Class ReserveAction = new Class(new Uri("http://schema.org/ReserveAction"));    

    ///<summary>
    ///A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
    ///<see cref="http://schema.org/Reservoir"/>
    ///</summary>
    public static readonly Class Reservoir = new Class(new Uri("http://schema.org/Reservoir"));    

    ///<summary>
    ///The place where a person lives.
    ///<see cref="http://schema.org/Residence"/>
    ///</summary>
    public static readonly Class Residence = new Class(new Uri("http://schema.org/Residence"));    

    ///<summary>
    ///A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Resort"/>
    ///</summary>
    public static readonly Class Resort = new Class(new Uri("http://schema.org/Resort"));    

    ///<summary>
    ///A restaurant.
    ///<see cref="http://schema.org/Restaurant"/>
    ///</summary>
    public static readonly Class Restaurant = new Class(new Uri("http://schema.org/Restaurant"));    

    ///<summary>
    ///A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.
    ///<see cref="http://schema.org/RestrictedDiet"/>
    ///</summary>
    public static readonly Class RestrictedDiet = new Class(new Uri("http://schema.org/RestrictedDiet"));    

    ///<summary>
    ///The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).
    ///<see cref="http://schema.org/ResumeAction"/>
    ///</summary>
    public static readonly Class ResumeAction = new Class(new Uri("http://schema.org/ResumeAction"));    

    ///<summary>
    ///The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
    ///<see cref="http://schema.org/ReturnAction"/>
    ///</summary>
    public static readonly Class ReturnAction = new Class(new Uri("http://schema.org/ReturnAction"));    

    ///<summary>
    ///ReturnFeesEnumeration expresses policies for return fees.
    ///<see cref="http://schema.org/ReturnFeesEnumeration"/>
    ///</summary>
    public static readonly Class ReturnFeesEnumeration = new Class(new Uri("http://schema.org/ReturnFeesEnumeration"));    

    ///<summary>
    ///A review of an item - for example, of a restaurant, movie, or store.
    ///<see cref="http://schema.org/Review"/>
    ///</summary>
    public static readonly Class Review = new Class(new Uri("http://schema.org/Review"));    

    ///<summary>
    ///The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
    ///<see cref="http://schema.org/ReviewAction"/>
    ///</summary>
    public static readonly Class ReviewAction = new Class(new Uri("http://schema.org/ReviewAction"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> and <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a> providing a professional critic's assessment of a service, product, performance, or artistic or literary work.
    ///<see cref="http://schema.org/ReviewNewsArticle"/>
    ///</summary>
    public static readonly Class ReviewNewsArticle = new Class(new Uri("http://schema.org/ReviewNewsArticle"));    

    ///<summary>
    ///A river (for example, the broad majestic Shannon).
    ///<see cref="http://schema.org/RiverBodyOfWater"/>
    ///</summary>
    public static readonly Class RiverBodyOfWater = new Class(new Uri("http://schema.org/RiverBodyOfWater"));    

    ///<summary>
    ///Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog post</a>.
    ///<see cref="http://schema.org/Role"/>
    ///</summary>
    public static readonly Class Role = new Class(new Uri("http://schema.org/Role"));    

    ///<summary>
    ///A roofing contractor.
    ///<see cref="http://schema.org/RoofingContractor"/>
    ///</summary>
    public static readonly Class RoofingContractor = new Class(new Uri("http://schema.org/RoofingContractor"));    

    ///<summary>
    ///A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Room"/>
    ///</summary>
    public static readonly Class Room = new Class(new Uri("http://schema.org/Room"));    

    ///<summary>
    ///The act of notifying an event organizer as to whether you expect to attend the event.
    ///<see cref="http://schema.org/RsvpAction"/>
    ///</summary>
    public static readonly Class RsvpAction = new Class(new Uri("http://schema.org/RsvpAction"));    

    ///<summary>
    ///RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.
    ///<see cref="http://schema.org/RsvpResponseType"/>
    ///</summary>
    public static readonly Class RsvpResponseType = new Class(new Uri("http://schema.org/RsvpResponseType"));    

    ///<summary>
    ///Event type: Sales event.
    ///<see cref="http://schema.org/SaleEvent"/>
    ///</summary>
    public static readonly Class SaleEvent = new Class(new Uri("http://schema.org/SaleEvent"));    

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/Article">Article</a> whose content is primarily <a href="https://en.wikipedia.org/wiki/Satire">[satirical]</a> in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>. <a class="localLink" href="http://schema.org/ScholarlyArticle">ScholarlyArticle</a>s are also sometimes satirized.
    ///<see cref="http://schema.org/SatiricalArticle"/>
    ///</summary>
    public static readonly Class SatiricalArticle = new Class(new Uri("http://schema.org/SatiricalArticle"));    

    ///<summary>
    ///A schedule defines a repeating time period used to describe a regularly occurring <a class="localLink" href="http://schema.org/Event">Event</a>. At a minimum a schedule will specify <a class="localLink" href="http://schema.org/repeatFrequency">repeatFrequency</a> which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. 
    ///      This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also
    ///      have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
    ///<see cref="http://schema.org/Schedule"/>
    ///</summary>
    public static readonly Class Schedule = new Class(new Uri("http://schema.org/Schedule"));    

    ///<summary>
    ///Scheduling future actions, events, or tasks.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ScheduleAction"/>
    ///</summary>
    public static readonly Class ScheduleAction = new Class(new Uri("http://schema.org/ScheduleAction"));    

    ///<summary>
    ///A scholarly article.
    ///<see cref="http://schema.org/ScholarlyArticle"/>
    ///</summary>
    public static readonly Class ScholarlyArticle = new Class(new Uri("http://schema.org/ScholarlyArticle"));    

    ///<summary>
    ///A school.
    ///<see cref="http://schema.org/School"/>
    ///</summary>
    public static readonly Class School = new Class(new Uri("http://schema.org/School"));    

    ///<summary>
    ///A screening of a movie or other video.
    ///<see cref="http://schema.org/ScreeningEvent"/>
    ///</summary>
    public static readonly Class ScreeningEvent = new Class(new Uri("http://schema.org/ScreeningEvent"));    

    ///<summary>
    ///A piece of sculpture.
    ///<see cref="http://schema.org/Sculpture"/>
    ///</summary>
    public static readonly Class Sculpture = new Class(new Uri("http://schema.org/Sculpture"));    

    ///<summary>
    ///A sea (for example, the Caspian sea).
    ///<see cref="http://schema.org/SeaBodyOfWater"/>
    ///</summary>
    public static readonly Class SeaBodyOfWater = new Class(new Uri("http://schema.org/SeaBodyOfWater"));    

    ///<summary>
    ///The act of searching for an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SearchAction"/>
    ///</summary>
    public static readonly Class SearchAction = new Class(new Uri("http://schema.org/SearchAction"));    

    ///<summary>
    ///Web page type: Search results page.
    ///<see cref="http://schema.org/SearchResultsPage"/>
    ///</summary>
    public static readonly Class SearchResultsPage = new Class(new Uri("http://schema.org/SearchResultsPage"));    

    ///<summary>
    ///A media season e.g. tv, radio, video game etc.
    ///<see cref="http://schema.org/Season"/>
    ///</summary>
    public static readonly Class Season = new Class(new Uri("http://schema.org/Season"));    

    ///<summary>
    ///Used to describe a seat, such as a reserved seat in an event reservation.
    ///<see cref="http://schema.org/Seat"/>
    ///</summary>
    public static readonly Class Seat = new Class(new Uri("http://schema.org/Seat"));    

    ///<summary>
    ///A self-storage facility.
    ///<see cref="http://schema.org/SelfStorage"/>
    ///</summary>
    public static readonly Class SelfStorage = new Class(new Uri("http://schema.org/SelfStorage"));    

    ///<summary>
    ///The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
    ///<see cref="http://schema.org/SellAction"/>
    ///</summary>
    public static readonly Class SellAction = new Class(new Uri("http://schema.org/SellAction"));    

    ///<summary>
    ///The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li>
    ///<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SendAction"/>
    ///</summary>
    public static readonly Class SendAction = new Class(new Uri("http://schema.org/SendAction"));    

    ///<summary>
    ///A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also <a class="localLink" href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a>.
    ///<see cref="http://schema.org/Series"/>
    ///</summary>
    public static readonly Class Series = new Class(new Uri("http://schema.org/Series"));    

    ///<summary>
    ///A service provided by an organization, e.g. delivery service, print services, etc.
    ///<see cref="http://schema.org/Service"/>
    ///</summary>
    public static readonly Class Service = new Class(new Uri("http://schema.org/Service"));    

    ///<summary>
    ///A means for accessing a service, e.g. a government office location, web site, or phone number.
    ///<see cref="http://schema.org/ServiceChannel"/>
    ///</summary>
    public static readonly Class ServiceChannel = new Class(new Uri("http://schema.org/ServiceChannel"));    

    ///<summary>
    ///The act of distributing content to people for their amusement or edification.
    ///<see cref="http://schema.org/ShareAction"/>
    ///</summary>
    public static readonly Class ShareAction = new Class(new Uri("http://schema.org/ShareAction"));    

    ///<summary>
    ///Printed music, as opposed to performed or recorded music.
    ///<see cref="http://schema.org/SheetMusic"/>
    ///</summary>
    public static readonly Class SheetMusic = new Class(new Uri("http://schema.org/SheetMusic"));    

    ///<summary>
    ///A shoe store.
    ///<see cref="http://schema.org/ShoeStore"/>
    ///</summary>
    public static readonly Class ShoeStore = new Class(new Uri("http://schema.org/ShoeStore"));    

    ///<summary>
    ///A shopping center or mall.
    ///<see cref="http://schema.org/ShoppingCenter"/>
    ///</summary>
    public static readonly Class ShoppingCenter = new Class(new Uri("http://schema.org/ShoppingCenter"));    

    ///<summary>
    ///Short story or tale. A brief work of literature, usually written in narrative prose.
    ///<see cref="http://schema.org/ShortStory"/>
    ///</summary>
    public static readonly Class ShortStory = new Class(new Uri("http://schema.org/ShortStory"));    

    ///<summary>
    ///Residence type: Single-family home.
    ///<see cref="http://schema.org/SingleFamilyResidence"/>
    ///</summary>
    public static readonly Class SingleFamilyResidence = new Class(new Uri("http://schema.org/SingleFamilyResidence"));    

    ///<summary>
    ///A navigation element of the page.
    ///<see cref="http://schema.org/SiteNavigationElement"/>
    ///</summary>
    public static readonly Class SiteNavigationElement = new Class(new Uri("http://schema.org/SiteNavigationElement"));    

    ///<summary>
    ///A ski resort.
    ///<see cref="http://schema.org/SkiResort"/>
    ///</summary>
    public static readonly Class SkiResort = new Class(new Uri("http://schema.org/SkiResort"));    

    ///<summary>
    ///Event type: Social event.
    ///<see cref="http://schema.org/SocialEvent"/>
    ///</summary>
    public static readonly Class SocialEvent = new Class(new Uri("http://schema.org/SocialEvent"));    

    ///<summary>
    ///A post to a social media platform, including blog posts, tweets, Facebook posts, etc.
    ///<see cref="http://schema.org/SocialMediaPosting"/>
    ///</summary>
    public static readonly Class SocialMediaPosting = new Class(new Uri("http://schema.org/SocialMediaPosting"));    

    ///<summary>
    ///A software application.
    ///<see cref="http://schema.org/SoftwareApplication"/>
    ///</summary>
    public static readonly Class SoftwareApplication = new Class(new Uri("http://schema.org/SoftwareApplication"));    

    ///<summary>
    ///Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
    ///<see cref="http://schema.org/SoftwareSourceCode"/>
    ///</summary>
    public static readonly Class SoftwareSourceCode = new Class(new Uri("http://schema.org/SoftwareSourceCode"));    

    ///<summary>
    ///A placeholder for multiple similar products of the same kind.
    ///<see cref="http://schema.org/SomeProducts"/>
    ///</summary>
    public static readonly Class SomeProducts = new Class(new Uri("http://schema.org/SomeProducts"));    

    ///<summary>
    ///A SpeakableSpecification indicates (typically via <a class="localLink" href="http://schema.org/xpath">xpath</a> or <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a>) sections of a document that are highlighted as particularly <a class="localLink" href="http://schema.org/speakable">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class="localLink" href="http://schema.org/speakable">speakable</a> property.
    ///<see cref="http://schema.org/SpeakableSpecification"/>
    ///</summary>
    public static readonly Class SpeakableSpecification = new Class(new Uri("http://schema.org/SpeakableSpecification"));    

    ///<summary>
    ///Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
    ///<see cref="http://schema.org/Specialty"/>
    ///</summary>
    public static readonly Class Specialty = new Class(new Uri("http://schema.org/Specialty"));    

    ///<summary>
    ///A sporting goods store.
    ///<see cref="http://schema.org/SportingGoodsStore"/>
    ///</summary>
    public static readonly Class SportingGoodsStore = new Class(new Uri("http://schema.org/SportingGoodsStore"));    

    ///<summary>
    ///A sports location, such as a playing field.
    ///<see cref="http://schema.org/SportsActivityLocation"/>
    ///</summary>
    public static readonly Class SportsActivityLocation = new Class(new Uri("http://schema.org/SportsActivityLocation"));    

    ///<summary>
    ///A sports club.
    ///<see cref="http://schema.org/SportsClub"/>
    ///</summary>
    public static readonly Class SportsClub = new Class(new Uri("http://schema.org/SportsClub"));    

    ///<summary>
    ///Event type: Sports event.
    ///<see cref="http://schema.org/SportsEvent"/>
    ///</summary>
    public static readonly Class SportsEvent = new Class(new Uri("http://schema.org/SportsEvent"));    

    ///<summary>
    ///Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.
    ///<see cref="http://schema.org/SportsOrganization"/>
    ///</summary>
    public static readonly Class SportsOrganization = new Class(new Uri("http://schema.org/SportsOrganization"));    

    ///<summary>
    ///Organization: Sports team.
    ///<see cref="http://schema.org/SportsTeam"/>
    ///</summary>
    public static readonly Class SportsTeam = new Class(new Uri("http://schema.org/SportsTeam"));    

    ///<summary>
    ///A spreadsheet file.
    ///<see cref="http://schema.org/SpreadsheetDigitalDocument"/>
    ///</summary>
    public static readonly Class SpreadsheetDigitalDocument = new Class(new Uri("http://schema.org/SpreadsheetDigitalDocument"));    

    ///<summary>
    ///A stadium.
    ///<see cref="http://schema.org/StadiumOrArena"/>
    ///</summary>
    public static readonly Class StadiumOrArena = new Class(new Uri("http://schema.org/StadiumOrArena"));    

    ///<summary>
    ///A state or province of a country.
    ///<see cref="http://schema.org/State"/>
    ///</summary>
    public static readonly Class State = new Class(new Uri("http://schema.org/State"));    

    ///<summary>
    ///A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property <a class="localLink" href="http://schema.org/populationType">populationType</a> is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> representing all <a class="localLink" href="http://schema.org/Person">Person</a>s with a <a class="localLink" href="http://schema.org/homeLocation">homeLocation</a> of East Podunk California, would be described by applying the appropriate <a class="localLink" href="http://schema.org/homeLocation">homeLocation</a> and <a class="localLink" href="http://schema.org/populationType">populationType</a> properties to a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> item that stands for that set of people.
    ///The properties <a class="localLink" href="http://schema.org/numConstraints">numConstraints</a> and <a class="localLink" href="http://schema.org/constrainingProperties">constrainingProperties</a> are used to specify which of the populations properties are used to specify the population. Note that the sense of "population" used here is the general sense of a statistical
    ///population, and does not imply that the population consists of people. For example, a <a class="localLink" href="http://schema.org/populationType">populationType</a> of <a class="localLink" href="http://schema.org/Event">Event</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> could be used. See also <a class="localLink" href="http://schema.org/Observation">Observation</a>, and the <a href="/docs/data-and-datasets.html">data and datasets</a> overview for more details.
    ///<see cref="http://schema.org/StatisticalPopulation"/>
    ///</summary>
    public static readonly Class StatisticalPopulation = new Class(new Uri("http://schema.org/StatisticalPopulation"));    

    ///<summary>
    ///A value indicating a steering position.
    ///<see cref="http://schema.org/SteeringPositionValue"/>
    ///</summary>
    public static readonly Class SteeringPositionValue = new Class(new Uri("http://schema.org/SteeringPositionValue"));    

    ///<summary>
    ///A retail good store.
    ///<see cref="http://schema.org/Store"/>
    ///</summary>
    public static readonly Class Store = new Class(new Uri("http://schema.org/Store"));    

    ///<summary>
    ///Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
    ///<see cref="http://schema.org/StructuredValue"/>
    ///</summary>
    public static readonly Class StructuredValue = new Class(new Uri("http://schema.org/StructuredValue"));    

    ///<summary>
    ///A StupidType for testing.
    ///<see cref="http://schema.org/StupidType"/>
    ///</summary>
    public static readonly Class StupidType = new Class(new Uri("http://schema.org/StupidType"));    

    ///<summary>
    ///The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SubscribeAction"/>
    ///</summary>
    public static readonly Class SubscribeAction = new Class(new Uri("http://schema.org/SubscribeAction"));    

    ///<summary>
    ///Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.
    ///<see cref="http://schema.org/Substance"/>
    ///</summary>
    public static readonly Class Substance = new Class(new Uri("http://schema.org/Substance"));    

    ///<summary>
    ///A subway station.
    ///<see cref="http://schema.org/SubwayStation"/>
    ///</summary>
    public static readonly Class SubwayStation = new Class(new Uri("http://schema.org/SubwayStation"));    

    ///<summary>
    ///A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Suite"/>
    ///</summary>
    public static readonly Class Suite = new Class(new Uri("http://schema.org/Suite"));    

    ///<summary>
    ///Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).
    ///<see cref="http://schema.org/SuperficialAnatomy"/>
    ///</summary>
    public static readonly Class SuperficialAnatomy = new Class(new Uri("http://schema.org/SuperficialAnatomy"));    

    ///<summary>
    ///A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.
    ///<see cref="http://schema.org/SurgicalProcedure"/>
    ///</summary>
    public static readonly Class SurgicalProcedure = new Class(new Uri("http://schema.org/SurgicalProcedure"));    

    ///<summary>
    ///The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).
    ///<see cref="http://schema.org/SuspendAction"/>
    ///</summary>
    public static readonly Class SuspendAction = new Class(new Uri("http://schema.org/SuspendAction"));    

    ///<summary>
    ///A synagogue.
    ///<see cref="http://schema.org/Synagogue"/>
    ///</summary>
    public static readonly Class Synagogue = new Class(new Uri("http://schema.org/Synagogue"));    

    ///<summary>
    ///A short TV program or a segment/part of a TV program.
    ///<see cref="http://schema.org/TVClip"/>
    ///</summary>
    public static readonly Class TVClip = new Class(new Uri("http://schema.org/TVClip"));    

    ///<summary>
    ///A TV episode which can be part of a series or season.
    ///<see cref="http://schema.org/TVEpisode"/>
    ///</summary>
    public static readonly Class TVEpisode = new Class(new Uri("http://schema.org/TVEpisode"));    

    ///<summary>
    ///Season dedicated to TV broadcast and associated online delivery.
    ///<see cref="http://schema.org/TVSeason"/>
    ///</summary>
    public static readonly Class TVSeason = new Class(new Uri("http://schema.org/TVSeason"));    

    ///<summary>
    ///CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
    ///<see cref="http://schema.org/TVSeries"/>
    ///</summary>
    public static readonly Class TVSeries = new Class(new Uri("http://schema.org/TVSeries"));    

    ///<summary>
    ///A table on a Web page.
    ///<see cref="http://schema.org/Table"/>
    ///</summary>
    public static readonly Class Table = new Class(new Uri("http://schema.org/Table"));    

    ///<summary>
    ///The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li>
    ///<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/TakeAction"/>
    ///</summary>
    public static readonly Class TakeAction = new Class(new Uri("http://schema.org/TakeAction"));    

    ///<summary>
    ///A tattoo parlor.
    ///<see cref="http://schema.org/TattooParlor"/>
    ///</summary>
    public static readonly Class TattooParlor = new Class(new Uri("http://schema.org/TattooParlor"));    

    ///<summary>
    ///A taxi.
    ///<see cref="http://schema.org/Taxi"/>
    ///</summary>
    public static readonly Class Taxi = new Class(new Uri("http://schema.org/Taxi"));    

    ///<summary>
    ///A reservation for a taxi.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/TaxiReservation"/>
    ///</summary>
    public static readonly Class TaxiReservation = new Class(new Uri("http://schema.org/TaxiReservation"));    

    ///<summary>
    ///A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.
    ///<see cref="http://schema.org/TaxiService"/>
    ///</summary>
    public static readonly Class TaxiService = new Class(new Uri("http://schema.org/TaxiService"));    

    ///<summary>
    ///A taxi stand.
    ///<see cref="http://schema.org/TaxiStand"/>
    ///</summary>
    public static readonly Class TaxiStand = new Class(new Uri("http://schema.org/TaxiStand"));    

    ///<summary>
    ///A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
    ///<see cref="http://schema.org/TechArticle"/>
    ///</summary>
    public static readonly Class TechArticle = new Class(new Uri("http://schema.org/TechArticle"));    

    ///<summary>
    ///A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/TelevisionChannel"/>
    ///</summary>
    public static readonly Class TelevisionChannel = new Class(new Uri("http://schema.org/TelevisionChannel"));    

    ///<summary>
    ///A television station.
    ///<see cref="http://schema.org/TelevisionStation"/>
    ///</summary>
    public static readonly Class TelevisionStation = new Class(new Uri("http://schema.org/TelevisionStation"));    

    ///<summary>
    ///A tennis complex.
    ///<see cref="http://schema.org/TennisComplex"/>
    ///</summary>
    public static readonly Class TennisComplex = new Class(new Uri("http://schema.org/TennisComplex"));    

    ///<summary>
    ///Data type: Text.
    ///<see cref="http://schema.org/Text"/>
    ///</summary>
    public static readonly Class Text = new Class(new Uri("http://schema.org/Text"));    

    ///<summary>
    ///A file composed primarily of text.
    ///<see cref="http://schema.org/TextDigitalDocument"/>
    ///</summary>
    public static readonly Class TextDigitalDocument = new Class(new Uri("http://schema.org/TextDigitalDocument"));    

    ///<summary>
    ///Event type: Theater performance.
    ///<see cref="http://schema.org/TheaterEvent"/>
    ///</summary>
    public static readonly Class TheaterEvent = new Class(new Uri("http://schema.org/TheaterEvent"));    

    ///<summary>
    ///A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
    ///<see cref="http://schema.org/TheaterGroup"/>
    ///</summary>
    public static readonly Class TheaterGroup = new Class(new Uri("http://schema.org/TheaterGroup"));    

    ///<summary>
    ///A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.
    ///<see cref="http://schema.org/TherapeuticProcedure"/>
    ///</summary>
    public static readonly Class TherapeuticProcedure = new Class(new Uri("http://schema.org/TherapeuticProcedure"));    

    ///<summary>
    ///A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.
    ///<see cref="http://schema.org/Thesis"/>
    ///</summary>
    public static readonly Class Thesis = new Class(new Uri("http://schema.org/Thesis"));    

    ///<summary>
    ///The most generic type of item.
    ///<see cref="http://schema.org/Thing"/>
    ///</summary>
    public static readonly Class Thing = new Class(new Uri("http://schema.org/Thing"));    

    ///<summary>
    ///Used to describe a ticket to an event, a flight, a bus ride, etc.
    ///<see cref="http://schema.org/Ticket"/>
    ///</summary>
    public static readonly Class Ticket = new Class(new Uri("http://schema.org/Ticket"));    

    ///<summary>
    ///The act of reaching a draw in a competitive activity.
    ///<see cref="http://schema.org/TieAction"/>
    ///</summary>
    public static readonly Class TieAction = new Class(new Uri("http://schema.org/TieAction"));    

    ///<summary>
    ///A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href="http://www.w3.org/TR/xmlschema-2/#time">XML schema for details</a>).
    ///<see cref="http://schema.org/Time"/>
    ///</summary>
    public static readonly Class Time = new Class(new Uri("http://schema.org/Time"));    

    ///<summary>
    ///The act of giving money voluntarily to a beneficiary in recognition of services rendered.
    ///<see cref="http://schema.org/TipAction"/>
    ///</summary>
    public static readonly Class TipAction = new Class(new Uri("http://schema.org/TipAction"));    

    ///<summary>
    ///A tire shop.
    ///<see cref="http://schema.org/TireShop"/>
    ///</summary>
    public static readonly Class TireShop = new Class(new Uri("http://schema.org/TireShop"));    

    ///<summary>
    ///A tourist attraction.  In principle any Thing can be a <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a class="localLink" href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a> to a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)
    ///<see cref="http://schema.org/TouristAttraction"/>
    ///</summary>
    public static readonly Class TouristAttraction = new Class(new Uri("http://schema.org/TouristAttraction"));    

    ///<summary>
    ///A tourist destination. In principle any <a class="localLink" href="http://schema.org/Place">Place</a> can be a <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a> from a <a class="localLink" href="http://schema.org/City">City</a>, <a class="localLink" href="http://schema.org/Region">Region</a> or <a class="localLink" href="http://schema.org/Country">Country</a> to an <a class="localLink" href="http://schema.org/AmusementPark">AmusementPark</a> or <a class="localLink" href="http://schema.org/Hotel">Hotel</a>. This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist relevant properties to any other <a class="localLink" href="http://schema.org/Place">Place</a>.  A <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a> is defined as a <a class="localLink" href="http://schema.org/Place">Place</a> that contains, or is colocated with, one or more <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>s, often linked by a similar theme or interest to a particular <a class="localLink" href="http://schema.org/touristType">touristType</a>. The <a href="http://www2.unwto.org/">UNWTO</a> defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.
    ///  (See examples below).
    ///<see cref="http://schema.org/TouristDestination"/>
    ///</summary>
    public static readonly Class TouristDestination = new Class(new Uri("http://schema.org/TouristDestination"));    

    ///<summary>
    ///A tourist information center.
    ///<see cref="http://schema.org/TouristInformationCenter"/>
    ///</summary>
    public static readonly Class TouristInformationCenter = new Class(new Uri("http://schema.org/TouristInformationCenter"));    

    ///<summary>
    ///A tourist trip. A created itinerary of visits to one or more places of interest (<a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>/<a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a>) often linked by a similar theme, geographic area, or interest to a particular <a class="localLink" href="http://schema.org/touristType">touristType</a>. The <a href="http://www2.unwto.org/">UNWTO</a> defines tourism trip as the Trip taken by visitors.
    ///  (See examples below).
    ///<see cref="http://schema.org/TouristTrip"/>
    ///</summary>
    public static readonly Class TouristTrip = new Class(new Uri("http://schema.org/TouristTrip"));    

    ///<summary>
    ///A toy store.
    ///<see cref="http://schema.org/ToyStore"/>
    ///</summary>
    public static readonly Class ToyStore = new Class(new Uri("http://schema.org/ToyStore"));    

    ///<summary>
    ///An agent tracks an object for updates.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/TrackAction"/>
    ///</summary>
    public static readonly Class TrackAction = new Class(new Uri("http://schema.org/TrackAction"));    

    ///<summary>
    ///The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
    ///<see cref="http://schema.org/TradeAction"/>
    ///</summary>
    public static readonly Class TradeAction = new Class(new Uri("http://schema.org/TradeAction"));    

    ///<summary>
    ///A reservation for train travel.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/TrainReservation"/>
    ///</summary>
    public static readonly Class TrainReservation = new Class(new Uri("http://schema.org/TrainReservation"));    

    ///<summary>
    ///A train station.
    ///<see cref="http://schema.org/TrainStation"/>
    ///</summary>
    public static readonly Class TrainStation = new Class(new Uri("http://schema.org/TrainStation"));    

    ///<summary>
    ///A trip on a commercial train line.
    ///<see cref="http://schema.org/TrainTrip"/>
    ///</summary>
    public static readonly Class TrainTrip = new Class(new Uri("http://schema.org/TrainTrip"));    

    ///<summary>
    ///The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
    ///<see cref="http://schema.org/TransferAction"/>
    ///</summary>
    public static readonly Class TransferAction = new Class(new Uri("http://schema.org/TransferAction"));    

    ///<summary>
    ///The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.
    ///<see cref="http://schema.org/TravelAction"/>
    ///</summary>
    public static readonly Class TravelAction = new Class(new Uri("http://schema.org/TravelAction"));    

    ///<summary>
    ///A travel agency.
    ///<see cref="http://schema.org/TravelAgency"/>
    ///</summary>
    public static readonly Class TravelAgency = new Class(new Uri("http://schema.org/TravelAgency"));    

    ///<summary>
    ///An indication for treating an underlying condition, symptom, etc.
    ///<see cref="http://schema.org/TreatmentIndication"/>
    ///</summary>
    public static readonly Class TreatmentIndication = new Class(new Uri("http://schema.org/TreatmentIndication"));    

    ///<summary>
    ///A trip or journey. An itinerary of visits to one or more places.
    ///<see cref="http://schema.org/Trip"/>
    ///</summary>
    public static readonly Class Trip = new Class(new Uri("http://schema.org/Trip"));    

    ///<summary>
    ///A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
    ///<see cref="http://schema.org/TypeAndQuantityNode"/>
    ///</summary>
    public static readonly Class TypeAndQuantityNode = new Class(new Uri("http://schema.org/TypeAndQuantityNode"));    

    ///<summary>
    ///Data type: URL.
    ///<see cref="http://schema.org/URL"/>
    ///</summary>
    public static readonly Class URL = new Class(new Uri("http://schema.org/URL"));    

    ///<summary>
    ///The act of un-registering from a service.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of UnRegisterAction.</li>
    ///<li><a class="localLink" href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/UnRegisterAction"/>
    ///</summary>
    public static readonly Class UnRegisterAction = new Class(new Uri("http://schema.org/UnRegisterAction"));    

    ///<summary>
    ///The price asked for a given offer by the respective organization or person.
    ///<see cref="http://schema.org/UnitPriceSpecification"/>
    ///</summary>
    public static readonly Class UnitPriceSpecification = new Class(new Uri("http://schema.org/UnitPriceSpecification"));    

    ///<summary>
    ///The act of managing by changing/editing the state of the object.
    ///<see cref="http://schema.org/UpdateAction"/>
    ///</summary>
    public static readonly Class UpdateAction = new Class(new Uri("http://schema.org/UpdateAction"));    

    ///<summary>
    ///The act of applying an object to its intended purpose.
    ///<see cref="http://schema.org/UseAction"/>
    ///</summary>
    public static readonly Class UseAction = new Class(new Uri("http://schema.org/UseAction"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserBlocks"/>
    ///</summary>
    public static readonly Class UserBlocks = new Class(new Uri("http://schema.org/UserBlocks"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserCheckins"/>
    ///</summary>
    public static readonly Class UserCheckins = new Class(new Uri("http://schema.org/UserCheckins"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserComments"/>
    ///</summary>
    public static readonly Class UserComments = new Class(new Uri("http://schema.org/UserComments"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserDownloads"/>
    ///</summary>
    public static readonly Class UserDownloads = new Class(new Uri("http://schema.org/UserDownloads"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserInteraction"/>
    ///</summary>
    public static readonly Class UserInteraction = new Class(new Uri("http://schema.org/UserInteraction"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserLikes"/>
    ///</summary>
    public static readonly Class UserLikes = new Class(new Uri("http://schema.org/UserLikes"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPageVisits"/>
    ///</summary>
    public static readonly Class UserPageVisits = new Class(new Uri("http://schema.org/UserPageVisits"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPlays"/>
    ///</summary>
    public static readonly Class UserPlays = new Class(new Uri("http://schema.org/UserPlays"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPlusOnes"/>
    ///</summary>
    public static readonly Class UserPlusOnes = new Class(new Uri("http://schema.org/UserPlusOnes"));    

    ///<summary>
    ///A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a>.
    ///<see cref="http://schema.org/UserReview"/>
    ///</summary>
    public static readonly Class UserReview = new Class(new Uri("http://schema.org/UserReview"));    

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserTweets"/>
    ///</summary>
    public static readonly Class UserTweets = new Class(new Uri("http://schema.org/UserTweets"));    

    ///<summary>
    ///A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
    ///<see cref="http://schema.org/Vehicle"/>
    ///</summary>
    public static readonly Class Vehicle = new Class(new Uri("http://schema.org/Vehicle"));    

    ///<summary>
    ///A type of blood vessel that specifically carries blood to the heart.
    ///<see cref="http://schema.org/Vein"/>
    ///</summary>
    public static readonly Class Vein = new Class(new Uri("http://schema.org/Vein"));    

    ///<summary>
    ///A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.
    ///<see cref="http://schema.org/Vessel"/>
    ///</summary>
    public static readonly Class Vessel = new Class(new Uri("http://schema.org/Vessel"));    

    ///<summary>
    ///A vet's office.
    ///<see cref="http://schema.org/VeterinaryCare"/>
    ///</summary>
    public static readonly Class VeterinaryCare = new Class(new Uri("http://schema.org/VeterinaryCare"));    

    ///<summary>
    ///Web page type: Video gallery page.
    ///<see cref="http://schema.org/VideoGallery"/>
    ///</summary>
    public static readonly Class VideoGallery = new Class(new Uri("http://schema.org/VideoGallery"));    

    ///<summary>
    ///A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.
    ///<see cref="http://schema.org/VideoGame"/>
    ///</summary>
    public static readonly Class VideoGame = new Class(new Uri("http://schema.org/VideoGame"));    

    ///<summary>
    ///A short segment/part of a video game.
    ///<see cref="http://schema.org/VideoGameClip"/>
    ///</summary>
    public static readonly Class VideoGameClip = new Class(new Uri("http://schema.org/VideoGameClip"));    

    ///<summary>
    ///A video game series.
    ///<see cref="http://schema.org/VideoGameSeries"/>
    ///</summary>
    public static readonly Class VideoGameSeries = new Class(new Uri("http://schema.org/VideoGameSeries"));    

    ///<summary>
    ///A video file.
    ///<see cref="http://schema.org/VideoObject"/>
    ///</summary>
    public static readonly Class VideoObject = new Class(new Uri("http://schema.org/VideoObject"));    

    ///<summary>
    ///The act of consuming static visual content.
    ///<see cref="http://schema.org/ViewAction"/>
    ///</summary>
    public static readonly Class ViewAction = new Class(new Uri("http://schema.org/ViewAction"));    

    ///<summary>
    ///Event type: Visual arts event.
    ///<see cref="http://schema.org/VisualArtsEvent"/>
    ///</summary>
    public static readonly Class VisualArtsEvent = new Class(new Uri("http://schema.org/VisualArtsEvent"));    

    ///<summary>
    ///A work of art that is primarily visual in character.
    ///<see cref="http://schema.org/VisualArtwork"/>
    ///</summary>
    public static readonly Class VisualArtwork = new Class(new Uri("http://schema.org/VisualArtwork"));    

    ///<summary>
    ///Vital signs are measures of various physiological functions in order to assess the most basic body functions.
    ///<see cref="http://schema.org/VitalSign"/>
    ///</summary>
    public static readonly Class VitalSign = new Class(new Uri("http://schema.org/VitalSign"));    

    ///<summary>
    ///A volcano, like Fuji san.
    ///<see cref="http://schema.org/Volcano"/>
    ///</summary>
    public static readonly Class Volcano = new Class(new Uri("http://schema.org/Volcano"));    

    ///<summary>
    ///The act of expressing a preference from a fixed/finite/structured set of choices/options.
    ///<see cref="http://schema.org/VoteAction"/>
    ///</summary>
    public static readonly Class VoteAction = new Class(new Uri("http://schema.org/VoteAction"));    

    ///<summary>
    ///An advertising section of the page.
    ///<see cref="http://schema.org/WPAdBlock"/>
    ///</summary>
    public static readonly Class WPAdBlock = new Class(new Uri("http://schema.org/WPAdBlock"));    

    ///<summary>
    ///The footer section of the page.
    ///<see cref="http://schema.org/WPFooter"/>
    ///</summary>
    public static readonly Class WPFooter = new Class(new Uri("http://schema.org/WPFooter"));    

    ///<summary>
    ///The header section of the page.
    ///<see cref="http://schema.org/WPHeader"/>
    ///</summary>
    public static readonly Class WPHeader = new Class(new Uri("http://schema.org/WPHeader"));    

    ///<summary>
    ///A sidebar section of the page.
    ///<see cref="http://schema.org/WPSideBar"/>
    ///</summary>
    public static readonly Class WPSideBar = new Class(new Uri("http://schema.org/WPSideBar"));    

    ///<summary>
    ///The act of expressing a desire about the object. An agent wants an object.
    ///<see cref="http://schema.org/WantAction"/>
    ///</summary>
    public static readonly Class WantAction = new Class(new Uri("http://schema.org/WantAction"));    

    ///<summary>
    ///A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
    ///<see cref="http://schema.org/WarrantyPromise"/>
    ///</summary>
    public static readonly Class WarrantyPromise = new Class(new Uri("http://schema.org/WarrantyPromise"));    

    ///<summary>
    ///A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
    ///<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
    ///<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/WarrantyScope"/>
    ///</summary>
    public static readonly Class WarrantyScope = new Class(new Uri("http://schema.org/WarrantyScope"));    

    ///<summary>
    ///The act of consuming dynamic/moving visual content.
    ///<see cref="http://schema.org/WatchAction"/>
    ///</summary>
    public static readonly Class WatchAction = new Class(new Uri("http://schema.org/WatchAction"));    

    ///<summary>
    ///A waterfall, like Niagara.
    ///<see cref="http://schema.org/Waterfall"/>
    ///</summary>
    public static readonly Class Waterfall = new Class(new Uri("http://schema.org/Waterfall"));    

    ///<summary>
    ///The act of dressing oneself in clothing.
    ///<see cref="http://schema.org/WearAction"/>
    ///</summary>
    public static readonly Class WearAction = new Class(new Uri("http://schema.org/WearAction"));    

    ///<summary>
    ///An application programming interface accessible over Web/Internet technologies.
    ///<see cref="http://schema.org/WebAPI"/>
    ///</summary>
    public static readonly Class WebAPI = new Class(new Uri("http://schema.org/WebAPI"));    

    ///<summary>
    ///Web applications.
    ///<see cref="http://schema.org/WebApplication"/>
    ///</summary>
    public static readonly Class WebApplication = new Class(new Uri("http://schema.org/WebApplication"));    

    ///<summary>
    ///A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.
    ///<see cref="http://schema.org/WebPage"/>
    ///</summary>
    public static readonly Class WebPage = new Class(new Uri("http://schema.org/WebPage"));    

    ///<summary>
    ///A web page element, like a table or an image.
    ///<see cref="http://schema.org/WebPageElement"/>
    ///</summary>
    public static readonly Class WebPageElement = new Class(new Uri("http://schema.org/WebPageElement"));    

    ///<summary>
    ///A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
    ///<see cref="http://schema.org/WebSite"/>
    ///</summary>
    public static readonly Class WebSite = new Class(new Uri("http://schema.org/WebSite"));    

    ///<summary>
    ///A wholesale store.
    ///<see cref="http://schema.org/WholesaleStore"/>
    ///</summary>
    public static readonly Class WholesaleStore = new Class(new Uri("http://schema.org/WholesaleStore"));    

    ///<summary>
    ///The act of achieving victory in a competitive activity.
    ///<see cref="http://schema.org/WinAction"/>
    ///</summary>
    public static readonly Class WinAction = new Class(new Uri("http://schema.org/WinAction"));    

    ///<summary>
    ///A winery.
    ///<see cref="http://schema.org/Winery"/>
    ///</summary>
    public static readonly Class Winery = new Class(new Uri("http://schema.org/Winery"));    

    ///<summary>
    ///A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.
    ///<see cref="http://schema.org/WorkBasedProgram"/>
    ///</summary>
    public static readonly Class WorkBasedProgram = new Class(new Uri("http://schema.org/WorkBasedProgram"));    

    ///<summary>
    ///A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.
    ///<see cref="http://schema.org/WorkersUnion"/>
    ///</summary>
    public static readonly Class WorkersUnion = new Class(new Uri("http://schema.org/WorkersUnion"));    

    ///<summary>
    ///The act of authoring written creative content.
    ///<see cref="http://schema.org/WriteAction"/>
    ///</summary>
    public static readonly Class WriteAction = new Class(new Uri("http://schema.org/WriteAction"));    

    ///<summary>
    ///Text representing an XPath (typically but not necessarily version 1.0).
    ///<see cref="http://schema.org/XPathType"/>
    ///</summary>
    public static readonly Class XPathType = new Class(new Uri("http://schema.org/XPathType"));    

    ///<summary>
    ///A zoo.
    ///<see cref="http://schema.org/Zoo"/>
    ///</summary>
    public static readonly Class Zoo = new Class(new Uri("http://schema.org/Zoo"));    

    ///<summary>
    ///Abdomen clinical examination.
    ///<see cref="http://schema.org/Abdomen"/>
    ///</summary>
    public static readonly Resource Abdomen = new Resource(new Uri("http://schema.org/Abdomen"));    

    ///<summary>
    ///An in-progress action (e.g, while watching the movie, or driving to a location).
    ///<see cref="http://schema.org/ActiveActionStatus"/>
    ///</summary>
    public static readonly Resource ActiveActionStatus = new Resource(new Uri("http://schema.org/ActiveActionStatus"));    

    ///<summary>
    ///Active, but not recruiting new participants.
    ///<see cref="http://schema.org/ActiveNotRecruiting"/>
    ///</summary>
    public static readonly Resource ActiveNotRecruiting = new Resource(new Uri("http://schema.org/ActiveNotRecruiting"));    

    ///<summary>
    ///Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.
    ///<see cref="http://schema.org/AerobicActivity"/>
    ///</summary>
    public static readonly Resource AerobicActivity = new Resource(new Uri("http://schema.org/AerobicActivity"));    

    ///<summary>
    ///AlbumRelease.
    ///<see cref="http://schema.org/AlbumRelease"/>
    ///</summary>
    public static readonly Resource AlbumRelease = new Resource(new Uri("http://schema.org/AlbumRelease"));    

    ///<summary>
    ///All-wheel Drive is a transmission layout where the engine drives all four wheels.
    ///<see cref="http://schema.org/AllWheelDriveConfiguration"/>
    ///</summary>
    public static readonly Resource AllWheelDriveConfiguration = new Resource(new Uri("http://schema.org/AllWheelDriveConfiguration"));    

    ///<summary>
    ///Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.
    ///<see cref="http://schema.org/AnaerobicActivity"/>
    ///</summary>
    public static readonly Resource AnaerobicActivity = new Resource(new Uri("http://schema.org/AnaerobicActivity"));    

    ///<summary>
    ///A specific branch of medical science that pertains to study of anesthetics and their application.
    ///<see cref="http://schema.org/Anesthesia"/>
    ///</summary>
    public static readonly Resource Anesthesia = new Resource(new Uri("http://schema.org/Anesthesia"));    

    ///<summary>
    ///Appearance assessment with clinical examination.
    ///<see cref="http://schema.org/Appearance"/>
    ///</summary>
    public static readonly Resource Appearance = new Resource(new Uri("http://schema.org/Appearance"));    

    ///<summary>
    ///Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.
    ///<see cref="http://schema.org/AudiobookFormat"/>
    ///</summary>
    public static readonly Resource AudiobookFormat = new Resource(new Uri("http://schema.org/AudiobookFormat"));    

    ///<summary>
    ///Indicates that the publisher gives some special status to the publication of the document. ("The Queens Printer" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications). Something "Authoritative" is considered to be also <a class="localLink" href="http://schema.org/OfficialLegalValue">OfficialLegalValue</a>".
    ///<see cref="http://schema.org/AuthoritativeLegalValue"/>
    ///</summary>
    public static readonly Resource AuthoritativeLegalValue = new Resource(new Uri("http://schema.org/AuthoritativeLegalValue"));    

    ///<summary>
    ///A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.
    ///<see cref="http://schema.org/Ayurvedic"/>
    ///</summary>
    public static readonly Resource Ayurvedic = new Resource(new Uri("http://schema.org/Ayurvedic"));    

    ///<summary>
    ///Pathogenic bacteria that cause bacterial infection.
    ///<see cref="http://schema.org/Bacteria"/>
    ///</summary>
    public static readonly Resource Bacteria = new Resource(new Uri("http://schema.org/Bacteria"));    

    ///<summary>
    ///Physical activity that is engaged to help maintain posture and balance.
    ///<see cref="http://schema.org/Balance"/>
    ///</summary>
    public static readonly Resource Balance = new Resource(new Uri("http://schema.org/Balance"));    

    ///<summary>
    ///BroadcastRelease.
    ///<see cref="http://schema.org/BroadcastRelease"/>
    ///</summary>
    public static readonly Resource BroadcastRelease = new Resource(new Uri("http://schema.org/BroadcastRelease"));    

    ///<summary>
    ///CDFormat.
    ///<see cref="http://schema.org/CDFormat"/>
    ///</summary>
    public static readonly Resource CDFormat = new Resource(new Uri("http://schema.org/CDFormat"));    

    ///<summary>
    ///X-ray computed tomography imaging.
    ///<see cref="http://schema.org/CT"/>
    ///</summary>
    public static readonly Resource CT = new Resource(new Uri("http://schema.org/CT"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.
    ///<see cref="http://schema.org/Cardiovascular"/>
    ///</summary>
    public static readonly Resource Cardiovascular = new Resource(new Uri("http://schema.org/Cardiovascular"));    

    ///<summary>
    ///Cardiovascular system assessment withclinical examination.
    ///<see cref="http://schema.org/CardiovascularExam"/>
    ///</summary>
    public static readonly Resource CardiovascularExam = new Resource(new Uri("http://schema.org/CardiovascularExam"));    

    ///<summary>
    ///A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.
    ///<see cref="http://schema.org/CaseSeries"/>
    ///</summary>
    public static readonly Resource CaseSeries = new Resource(new Uri("http://schema.org/CaseSeries"));    

    ///<summary>
    ///CassetteFormat.
    ///<see cref="http://schema.org/CassetteFormat"/>
    ///</summary>
    public static readonly Resource CassetteFormat = new Resource(new Uri("http://schema.org/CassetteFormat"));    

    ///<summary>
    ///A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.
    ///<see cref="http://schema.org/Chiropractic"/>
    ///</summary>
    public static readonly Resource Chiropractic = new Resource(new Uri("http://schema.org/Chiropractic"));    

    ///<summary>
    ///Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.
    ///<see cref="http://schema.org/Clinician"/>
    ///</summary>
    public static readonly Resource Clinician = new Resource(new Uri("http://schema.org/Clinician"));    

    ///<summary>
    ///Play mode: CoOp. Co-operative games, where you play on the same team with friends.
    ///<see cref="http://schema.org/CoOp"/>
    ///</summary>
    public static readonly Resource CoOp = new Resource(new Uri("http://schema.org/CoOp"));    

    ///<summary>
    ///Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.
    ///<see cref="http://schema.org/CohortStudy"/>
    ///</summary>
    public static readonly Resource CohortStudy = new Resource(new Uri("http://schema.org/CohortStudy"));    

    ///<summary>
    ///Permission to add comments to the document.
    ///<see cref="http://schema.org/CommentPermission"/>
    ///</summary>
    public static readonly Resource CommentPermission = new Resource(new Uri("http://schema.org/CommentPermission"));    

    ///<summary>
    ///A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas
    ///<see cref="http://schema.org/CommunityHealth"/>
    ///</summary>
    public static readonly Resource CommunityHealth = new Resource(new Uri("http://schema.org/CommunityHealth"));    

    ///<summary>
    ///CompilationAlbum.
    ///<see cref="http://schema.org/CompilationAlbum"/>
    ///</summary>
    public static readonly Resource CompilationAlbum = new Resource(new Uri("http://schema.org/CompilationAlbum"));    

    ///<summary>
    ///Completed.
    ///<see cref="http://schema.org/Completed"/>
    ///</summary>
    public static readonly Resource Completed = new Resource(new Uri("http://schema.org/Completed"));    

    ///<summary>
    ///An action that has already taken place.
    ///<see cref="http://schema.org/CompletedActionStatus"/>
    ///</summary>
    public static readonly Resource CompletedActionStatus = new Resource(new Uri("http://schema.org/CompletedActionStatus"));    

    ///<summary>
    ///Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.
    ///<see cref="http://schema.org/CrossSectional"/>
    ///</summary>
    public static readonly Resource CrossSectional = new Resource(new Uri("http://schema.org/CrossSectional"));    

    ///<summary>
    ///DJMixAlbum.
    ///<see cref="http://schema.org/DJMixAlbum"/>
    ///</summary>
    public static readonly Resource DJMixAlbum = new Resource(new Uri("http://schema.org/DJMixAlbum"));    

    ///<summary>
    ///DVDFormat.
    ///<see cref="http://schema.org/DVDFormat"/>
    ///</summary>
    public static readonly Resource DVDFormat = new Resource(new Uri("http://schema.org/DVDFormat"));    

    ///<summary>
    ///Indicates that the item is damaged.
    ///<see cref="http://schema.org/DamagedCondition"/>
    ///</summary>
    public static readonly Resource DamagedCondition = new Resource(new Uri("http://schema.org/DamagedCondition"));    

    ///<summary>
    ///Indicates a document for which the text is conclusively what the law says and is legally binding. (e.g. The digitally signed version of an Official Journal.)
    ///  Something "Definitive" is considered to be also <a class="localLink" href="http://schema.org/AuthoritativeLegalValue">AuthoritativeLegalValue</a>.
    ///<see cref="http://schema.org/DefinitiveLegalValue"/>
    ///</summary>
    public static readonly Resource DefinitiveLegalValue = new Resource(new Uri("http://schema.org/DefinitiveLegalValue"));    

    ///<summary>
    ///DemoAlbum.
    ///<see cref="http://schema.org/DemoAlbum"/>
    ///</summary>
    public static readonly Resource DemoAlbum = new Resource(new Uri("http://schema.org/DemoAlbum"));    

    ///<summary>
    ///A branch of medicine that is involved in the dental care.
    ///<see cref="http://schema.org/Dentistry"/>
    ///</summary>
    public static readonly Resource Dentistry = new Resource(new Uri("http://schema.org/Dentistry"));    

    ///<summary>
    ///Something relating to or practicing dermatology
    ///<see cref="http://schema.org/Dermatologic"/>
    ///</summary>
    public static readonly Resource Dermatologic = new Resource(new Uri("http://schema.org/Dermatologic"));    

    ///<summary>
    ///A diet appropriate for people with diabetes.
    ///<see cref="http://schema.org/DiabeticDiet"/>
    ///</summary>
    public static readonly Resource DiabeticDiet = new Resource(new Uri("http://schema.org/DiabeticDiet"));    

    ///<summary>
    ///A medical device used for diagnostic purposes.
    ///<see cref="http://schema.org/Diagnostic"/>
    ///</summary>
    public static readonly Resource Diagnostic = new Resource(new Uri("http://schema.org/Diagnostic"));    

    ///<summary>
    ///Dietetic and nutrition as a medical speciality.
    ///<see cref="http://schema.org/DietNutrition"/>
    ///</summary>
    public static readonly Resource DietNutrition = new Resource(new Uri("http://schema.org/DietNutrition"));    

    ///<summary>
    ///DigitalAudioTapeFormat.
    ///<see cref="http://schema.org/DigitalAudioTapeFormat"/>
    ///</summary>
    public static readonly Resource DigitalAudioTapeFormat = new Resource(new Uri("http://schema.org/DigitalAudioTapeFormat"));    

    ///<summary>
    ///DigitalFormat.
    ///<see cref="http://schema.org/DigitalFormat"/>
    ///</summary>
    public static readonly Resource DigitalFormat = new Resource(new Uri("http://schema.org/DigitalFormat"));    

    ///<summary>
    ///Indicates that the item has been discontinued.
    ///<see cref="http://schema.org/Discontinued"/>
    ///</summary>
    public static readonly Resource Discontinued = new Resource(new Uri("http://schema.org/Discontinued"));    

    ///<summary>
    ///A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.
    ///<see cref="http://schema.org/DoubleBlindedTrial"/>
    ///</summary>
    public static readonly Resource DoubleBlindedTrial = new Resource(new Uri("http://schema.org/DoubleBlindedTrial"));    

    ///<summary>
    ///Indicates the usage of the vehicle for driving school.
    ///<see cref="http://schema.org/DrivingSchoolVehicleUsage"/>
    ///</summary>
    public static readonly Resource DrivingSchoolVehicleUsage = new Resource(new Uri("http://schema.org/DrivingSchoolVehicleUsage"));    

    ///<summary>
    ///Book format: Ebook.
    ///<see cref="http://schema.org/EBook"/>
    ///</summary>
    public static readonly Resource EBook = new Resource(new Uri("http://schema.org/EBook"));    

    ///<summary>
    ///EPRelease.
    ///<see cref="http://schema.org/EPRelease"/>
    ///</summary>
    public static readonly Resource EPRelease = new Resource(new Uri("http://schema.org/EPRelease"));    

    ///<summary>
    ///Ear function assessment with clinical examination.
    ///<see cref="http://schema.org/Ear"/>
    ///</summary>
    public static readonly Resource Ear = new Resource(new Uri("http://schema.org/Ear"));    

    ///<summary>
    ///A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.
    ///<see cref="http://schema.org/Emergency"/>
    ///</summary>
    public static readonly Resource Emergency = new Resource(new Uri("http://schema.org/Emergency"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.
    ///<see cref="http://schema.org/Endocrine"/>
    ///</summary>
    public static readonly Resource Endocrine = new Resource(new Uri("http://schema.org/Endocrine"));    

    ///<summary>
    ///Enrolling participants by invitation only.
    ///<see cref="http://schema.org/EnrollingByInvitation"/>
    ///</summary>
    public static readonly Resource EnrollingByInvitation = new Resource(new Uri("http://schema.org/EnrollingByInvitation"));    

    ///<summary>
    ///The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).
    ///<see cref="http://schema.org/EventCancelled"/>
    ///</summary>
    public static readonly Resource EventCancelled = new Resource(new Uri("http://schema.org/EventCancelled"));    

    ///<summary>
    ///The event has been postponed and no new date has been set. The event's previousStartDate should be set.
    ///<see cref="http://schema.org/EventPostponed"/>
    ///</summary>
    public static readonly Resource EventPostponed = new Resource(new Uri("http://schema.org/EventPostponed"));    

    ///<summary>
    ///The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated).
    ///<see cref="http://schema.org/EventRescheduled"/>
    ///</summary>
    public static readonly Resource EventRescheduled = new Resource(new Uri("http://schema.org/EventRescheduled"));    

    ///<summary>
    ///The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.
    ///<see cref="http://schema.org/EventScheduled"/>
    ///</summary>
    public static readonly Resource EventScheduled = new Resource(new Uri("http://schema.org/EventScheduled"));    

    ///<summary>
    ///Data derived from multiple randomized clinical trials or meta-analyses.
    ///<see cref="http://schema.org/EvidenceLevelA"/>
    ///</summary>
    public static readonly Resource EvidenceLevelA = new Resource(new Uri("http://schema.org/EvidenceLevelA"));    

    ///<summary>
    ///Data derived from a single randomized trial, or nonrandomized studies.
    ///<see cref="http://schema.org/EvidenceLevelB"/>
    ///</summary>
    public static readonly Resource EvidenceLevelB = new Resource(new Uri("http://schema.org/EvidenceLevelB"));    

    ///<summary>
    ///Only consensus opinion of experts, case studies, or standard-of-care.
    ///<see cref="http://schema.org/EvidenceLevelC"/>
    ///</summary>
    public static readonly Resource EvidenceLevelC = new Resource(new Uri("http://schema.org/EvidenceLevelC"));    

    ///<summary>
    ///A ExchangeRefund ...
    ///<see cref="http://schema.org/ExchangeRefund"/>
    ///</summary>
    public static readonly Resource ExchangeRefund = new Resource(new Uri("http://schema.org/ExchangeRefund"));    

    ///<summary>
    ///Eye or ophtalmological function assessment with clinical examination.
    ///<see cref="http://schema.org/Eye"/>
    ///</summary>
    public static readonly Resource Eye = new Resource(new Uri("http://schema.org/Eye"));    

    ///<summary>
    ///A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).
    ///<see cref="http://schema.org/FDAcategoryA"/>
    ///</summary>
    public static readonly Resource FDAcategoryA = new Resource(new Uri("http://schema.org/FDAcategoryA"));    

    ///<summary>
    ///A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.
    ///<see cref="http://schema.org/FDAcategoryB"/>
    ///</summary>
    public static readonly Resource FDAcategoryB = new Resource(new Uri("http://schema.org/FDAcategoryB"));    

    ///<summary>
    ///A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
    ///<see cref="http://schema.org/FDAcategoryC"/>
    ///</summary>
    public static readonly Resource FDAcategoryC = new Resource(new Uri("http://schema.org/FDAcategoryC"));    

    ///<summary>
    ///A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
    ///<see cref="http://schema.org/FDAcategoryD"/>
    ///</summary>
    public static readonly Resource FDAcategoryD = new Resource(new Uri("http://schema.org/FDAcategoryD"));    

    ///<summary>
    ///A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.
    ///<see cref="http://schema.org/FDAcategoryX"/>
    ///</summary>
    public static readonly Resource FDAcategoryX = new Resource(new Uri("http://schema.org/FDAcategoryX"));    

    ///<summary>
    ///A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.
    ///<see cref="http://schema.org/FDAnotEvaluated"/>
    ///</summary>
    public static readonly Resource FDAnotEvaluated = new Resource(new Uri("http://schema.org/FDAnotEvaluated"));    

    ///<summary>
    ///An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.
    ///<see cref="http://schema.org/FailedActionStatus"/>
    ///</summary>
    public static readonly Resource FailedActionStatus = new Resource(new Uri("http://schema.org/FailedActionStatus"));    

    ///<summary>
    ///The boolean value false.
    ///<see cref="http://schema.org/False"/>
    ///</summary>
    public static readonly Resource False = new Resource(new Uri("http://schema.org/False"));    

    ///<summary>
    ///The female gender.
    ///<see cref="http://schema.org/Female"/>
    ///</summary>
    public static readonly Resource Female = new Resource(new Uri("http://schema.org/Female"));    

    ///<summary>
    ///Physical activity that is engaged in to improve joint and muscle flexibility.
    ///<see cref="http://schema.org/Flexibility"/>
    ///</summary>
    public static readonly Resource Flexibility = new Resource(new Uri("http://schema.org/Flexibility"));    

    ///<summary>
    ///Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.
    ///<see cref="http://schema.org/FourWheelDriveConfiguration"/>
    ///</summary>
    public static readonly Resource FourWheelDriveConfiguration = new Resource(new Uri("http://schema.org/FourWheelDriveConfiguration"));    

    ///<summary>
    ///The day of the week between Thursday and Saturday.
    ///<see cref="http://schema.org/Friday"/>
    ///</summary>
    public static readonly Resource Friday = new Resource(new Uri("http://schema.org/Friday"));    

    ///<summary>
    ///Front-wheel drive is a transmission layout where the engine drives the front wheels.
    ///<see cref="http://schema.org/FrontWheelDriveConfiguration"/>
    ///</summary>
    public static readonly Resource FrontWheelDriveConfiguration = new Resource(new Uri("http://schema.org/FrontWheelDriveConfiguration"));    

    ///<summary>
    ///A FullRefund ...
    ///<see cref="http://schema.org/FullRefund"/>
    ///</summary>
    public static readonly Resource FullRefund = new Resource(new Uri("http://schema.org/FullRefund"));    

    ///<summary>
    ///Pathogenic fungus.
    ///<see cref="http://schema.org/Fungus"/>
    ///</summary>
    public static readonly Resource Fungus = new Resource(new Uri("http://schema.org/Fungus"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.
    ///<see cref="http://schema.org/Gastroenterologic"/>
    ///</summary>
    public static readonly Resource Gastroenterologic = new Resource(new Uri("http://schema.org/Gastroenterologic"));    

    ///<summary>
    ///A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.
    ///<see cref="http://schema.org/Genetic"/>
    ///</summary>
    public static readonly Resource Genetic = new Resource(new Uri("http://schema.org/Genetic"));    

    ///<summary>
    ///Genitourinary system function assessment with clinical examination.
    ///<see cref="http://schema.org/Genitourinary"/>
    ///</summary>
    public static readonly Resource Genitourinary = new Resource(new Uri("http://schema.org/Genitourinary"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.
    ///<see cref="http://schema.org/Geriatric"/>
    ///</summary>
    public static readonly Resource Geriatric = new Resource(new Uri("http://schema.org/Geriatric"));    

    ///<summary>
    ///A diet exclusive of gluten.
    ///<see cref="http://schema.org/GlutenFreeDiet"/>
    ///</summary>
    public static readonly Resource GlutenFreeDiet = new Resource(new Uri("http://schema.org/GlutenFreeDiet"));    

    ///<summary>
    ///Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.
    ///<see cref="http://schema.org/GraphicNovel"/>
    ///</summary>
    public static readonly Resource GraphicNovel = new Resource(new Uri("http://schema.org/GraphicNovel"));    

    ///<summary>
    ///The airline boards by groups based on check-in time, priority, etc.
    ///<see cref="http://schema.org/GroupBoardingPolicy"/>
    ///</summary>
    public static readonly Resource GroupBoardingPolicy = new Resource(new Uri("http://schema.org/GroupBoardingPolicy"));    

    ///<summary>
    ///A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.
    ///<see cref="http://schema.org/Gynecologic"/>
    ///</summary>
    public static readonly Resource Gynecologic = new Resource(new Uri("http://schema.org/Gynecologic"));    

    ///<summary>
    ///A diet conforming to Islamic dietary practices.
    ///<see cref="http://schema.org/HalalDiet"/>
    ///</summary>
    public static readonly Resource HalalDiet = new Resource(new Uri("http://schema.org/HalalDiet"));    

    ///<summary>
    ///Book format: Hardcover.
    ///<see cref="http://schema.org/Hardcover"/>
    ///</summary>
    public static readonly Resource Hardcover = new Resource(new Uri("http://schema.org/Hardcover"));    

    ///<summary>
    ///Head assessment with clinical examination.
    ///<see cref="http://schema.org/Head"/>
    ///</summary>
    public static readonly Resource Head = new Resource(new Uri("http://schema.org/Head"));    

    ///<summary>
    ///Uses devices to support users with hearing impairments.
    ///<see cref="http://schema.org/HearingImpairedSupported"/>
    ///</summary>
    public static readonly Resource HearingImpairedSupported = new Resource(new Uri("http://schema.org/HearingImpairedSupported"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.
    ///<see cref="http://schema.org/Hematologic"/>
    ///</summary>
    public static readonly Resource Hematologic = new Resource(new Uri("http://schema.org/Hematologic"));    

    ///<summary>
    ///A diet conforming to Hindu dietary practices, in particular, beef-free.
    ///<see cref="http://schema.org/HinduDiet"/>
    ///</summary>
    public static readonly Resource HinduDiet = new Resource(new Uri("http://schema.org/HinduDiet"));    

    ///<summary>
    ///A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.
    ///<see cref="http://schema.org/Homeopathic"/>
    ///</summary>
    public static readonly Resource Homeopathic = new Resource(new Uri("http://schema.org/Homeopathic"));    

    ///<summary>
    ///Indicates that a legislation is in force.
    ///<see cref="http://schema.org/InForce"/>
    ///</summary>
    public static readonly Resource InForce = new Resource(new Uri("http://schema.org/InForce"));    

    ///<summary>
    ///Indicates that the item is in stock.
    ///<see cref="http://schema.org/InStock"/>
    ///</summary>
    public static readonly Resource InStock = new Resource(new Uri("http://schema.org/InStock"));    

    ///<summary>
    ///Indicates that the item is available only at physical locations.
    ///<see cref="http://schema.org/InStoreOnly"/>
    ///</summary>
    public static readonly Resource InStoreOnly = new Resource(new Uri("http://schema.org/InStoreOnly"));    

    ///<summary>
    ///Something in medical science that pertains to infectious diseases i.e caused by bacterial, viral, fungal or parasitic infections.
    ///<see cref="http://schema.org/Infectious"/>
    ///</summary>
    public static readonly Resource Infectious = new Resource(new Uri("http://schema.org/Infectious"));    

    ///<summary>
    ///An international trial.
    ///<see cref="http://schema.org/InternationalTrial"/>
    ///</summary>
    public static readonly Resource InternationalTrial = new Resource(new Uri("http://schema.org/InternationalTrial"));    

    ///<summary>
    ///An ItemList ordered with lower values listed first.
    ///<see cref="http://schema.org/ItemListOrderAscending"/>
    ///</summary>
    public static readonly Resource ItemListOrderAscending = new Resource(new Uri("http://schema.org/ItemListOrderAscending"));    

    ///<summary>
    ///An ItemList ordered with higher values listed first.
    ///<see cref="http://schema.org/ItemListOrderDescending"/>
    ///</summary>
    public static readonly Resource ItemListOrderDescending = new Resource(new Uri("http://schema.org/ItemListOrderDescending"));    

    ///<summary>
    ///An ItemList ordered with no explicit order.
    ///<see cref="http://schema.org/ItemListUnordered"/>
    ///</summary>
    public static readonly Resource ItemListUnordered = new Resource(new Uri("http://schema.org/ItemListUnordered"));    

    ///<summary>
    ///A diet conforming to Jewish dietary practices.
    ///<see cref="http://schema.org/KosherDiet"/>
    ///</summary>
    public static readonly Resource KosherDiet = new Resource(new Uri("http://schema.org/KosherDiet"));    

    ///<summary>
    ///A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research
    ///<see cref="http://schema.org/LaboratoryScience"/>
    ///</summary>
    public static readonly Resource LaboratoryScience = new Resource(new Uri("http://schema.org/LaboratoryScience"));    

    ///<summary>
    ///LaserDiscFormat.
    ///<see cref="http://schema.org/LaserDiscFormat"/>
    ///</summary>
    public static readonly Resource LaserDiscFormat = new Resource(new Uri("http://schema.org/LaserDiscFormat"));    

    ///<summary>
    ///The steering position is on the left side of the vehicle (viewed from the main direction of driving).
    ///<see cref="http://schema.org/LeftHandDriving"/>
    ///</summary>
    public static readonly Resource LeftHandDriving = new Resource(new Uri("http://schema.org/LeftHandDriving"));    

    ///<summary>
    ///Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.
    ///<see cref="http://schema.org/LeisureTimeActivity"/>
    ///</summary>
    public static readonly Resource LeisureTimeActivity = new Resource(new Uri("http://schema.org/LeisureTimeActivity"));    

    ///<summary>
    ///Indicates that the item has limited availability.
    ///<see cref="http://schema.org/LimitedAvailability"/>
    ///</summary>
    public static readonly Resource LimitedAvailability = new Resource(new Uri("http://schema.org/LimitedAvailability"));    

    ///<summary>
    ///LiveAlbum.
    ///<see cref="http://schema.org/LiveAlbum"/>
    ///</summary>
    public static readonly Resource LiveAlbum = new Resource(new Uri("http://schema.org/LiveAlbum"));    

    ///<summary>
    ///Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.
    ///<see cref="http://schema.org/Longitudinal"/>
    ///</summary>
    public static readonly Resource Longitudinal = new Resource(new Uri("http://schema.org/Longitudinal"));    

    ///<summary>
    ///A diet focused on reduced calorie intake.
    ///<see cref="http://schema.org/LowCalorieDiet"/>
    ///</summary>
    public static readonly Resource LowCalorieDiet = new Resource(new Uri("http://schema.org/LowCalorieDiet"));    

    ///<summary>
    ///A diet focused on reduced fat and cholesterol intake.
    ///<see cref="http://schema.org/LowFatDiet"/>
    ///</summary>
    public static readonly Resource LowFatDiet = new Resource(new Uri("http://schema.org/LowFatDiet"));    

    ///<summary>
    ///A diet appropriate for people with lactose intolerance.
    ///<see cref="http://schema.org/LowLactoseDiet"/>
    ///</summary>
    public static readonly Resource LowLactoseDiet = new Resource(new Uri("http://schema.org/LowLactoseDiet"));    

    ///<summary>
    ///A diet focused on reduced sodium intake.
    ///<see cref="http://schema.org/LowSaltDiet"/>
    ///</summary>
    public static readonly Resource LowSaltDiet = new Resource(new Uri("http://schema.org/LowSaltDiet"));    

    ///<summary>
    ///Lung and respiratory system clinical examination.
    ///<see cref="http://schema.org/Lung"/>
    ///</summary>
    public static readonly Resource Lung = new Resource(new Uri("http://schema.org/Lung"));    

    ///<summary>
    ///Magnetic resonance imaging.
    ///<see cref="http://schema.org/MRI"/>
    ///</summary>
    public static readonly Resource MRI = new Resource(new Uri("http://schema.org/MRI"));    

    ///<summary>
    ///The male gender.
    ///<see cref="http://schema.org/Male"/>
    ///</summary>
    public static readonly Resource Male = new Resource(new Uri("http://schema.org/Male"));    

    ///<summary>
    ///Medical researchers.
    ///<see cref="http://schema.org/MedicalResearcher"/>
    ///</summary>
    public static readonly Resource MedicalResearcher = new Resource(new Uri("http://schema.org/MedicalResearcher"));    

    ///<summary>
    ///A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.
    ///<see cref="http://schema.org/Midwifery"/>
    ///</summary>
    public static readonly Resource Midwifery = new Resource(new Uri("http://schema.org/Midwifery"));    

    ///<summary>
    ///MixtapeAlbum.
    ///<see cref="http://schema.org/MixtapeAlbum"/>
    ///</summary>
    public static readonly Resource MixtapeAlbum = new Resource(new Uri("http://schema.org/MixtapeAlbum"));    

    ///<summary>
    ///The day of the week between Sunday and Tuesday.
    ///<see cref="http://schema.org/Monday"/>
    ///</summary>
    public static readonly Resource Monday = new Resource(new Uri("http://schema.org/Monday"));    

    ///<summary>
    ///A trial that takes place at multiple centers.
    ///<see cref="http://schema.org/MultiCenterTrial"/>
    ///</summary>
    public static readonly Resource MultiCenterTrial = new Resource(new Uri("http://schema.org/MultiCenterTrial"));    

    ///<summary>
    ///Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.
    ///<see cref="http://schema.org/MultiPlayer"/>
    ///</summary>
    public static readonly Resource MultiPlayer = new Resource(new Uri("http://schema.org/MultiPlayer"));    

    ///<summary>
    ///Multicellular parasite that causes an infection.
    ///<see cref="http://schema.org/MulticellularParasite"/>
    ///</summary>
    public static readonly Resource MulticellularParasite = new Resource(new Uri("http://schema.org/MulticellularParasite"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.
    ///<see cref="http://schema.org/Musculoskeletal"/>
    ///</summary>
    public static readonly Resource Musculoskeletal = new Resource(new Uri("http://schema.org/Musculoskeletal"));    

    ///<summary>
    ///Musculoskeletal system clinical examination.
    ///<see cref="http://schema.org/MusculoskeletalExam"/>
    ///</summary>
    public static readonly Resource MusculoskeletalExam = new Resource(new Uri("http://schema.org/MusculoskeletalExam"));    

    ///<summary>
    ///Neck assessment with clinical examination.
    ///<see cref="http://schema.org/Neck"/>
    ///</summary>
    public static readonly Resource Neck = new Resource(new Uri("http://schema.org/Neck"));    

    ///<summary>
    ///Neurological system clinical examination.
    ///<see cref="http://schema.org/Neuro"/>
    ///</summary>
    public static readonly Resource Neuro = new Resource(new Uri("http://schema.org/Neuro"));    

    ///<summary>
    ///A specific branch of medical science that studies the nerves and nervous system and its respective disease states.
    ///<see cref="http://schema.org/Neurologic"/>
    ///</summary>
    public static readonly Resource Neurologic = new Resource(new Uri("http://schema.org/Neurologic"));    

    ///<summary>
    ///Indicates that the item is new.
    ///<see cref="http://schema.org/NewCondition"/>
    ///</summary>
    public static readonly Resource NewCondition = new Resource(new Uri("http://schema.org/NewCondition"));    

    ///<summary>
    ///A type of medical procedure that involves noninvasive techniques.
    ///<see cref="http://schema.org/NoninvasiveProcedure"/>
    ///</summary>
    public static readonly Resource NoninvasiveProcedure = new Resource(new Uri("http://schema.org/NoninvasiveProcedure"));    

    ///<summary>
    ///Nose function assessment with clinical examination.
    ///<see cref="http://schema.org/Nose"/>
    ///</summary>
    public static readonly Resource Nose = new Resource(new Uri("http://schema.org/Nose"));    

    ///<summary>
    ///Indicates that a legislation is currently not in force.
    ///<see cref="http://schema.org/NotInForce"/>
    ///</summary>
    public static readonly Resource NotInForce = new Resource(new Uri("http://schema.org/NotInForce"));    

    ///<summary>
    ///Not yet recruiting.
    ///<see cref="http://schema.org/NotYetRecruiting"/>
    ///</summary>
    public static readonly Resource NotYetRecruiting = new Resource(new Uri("http://schema.org/NotYetRecruiting"));    

    ///<summary>
    ///A health profession of a person formally educated and trained in the care of the sick or infirm person.
    ///<see cref="http://schema.org/Nursing"/>
    ///</summary>
    public static readonly Resource Nursing = new Resource(new Uri("http://schema.org/Nursing"));    

    ///<summary>
    ///The character of a medical substance, typically a medicine, of being available over the counter or not.
    ///<see cref="http://schema.org/OTC"/>
    ///</summary>
    public static readonly Resource OTC = new Resource(new Uri("http://schema.org/OTC"));    

    ///<summary>
    ///An observational study design.
    ///<see cref="http://schema.org/Observational"/>
    ///</summary>
    public static readonly Resource Observational = new Resource(new Uri("http://schema.org/Observational"));    

    ///<summary>
    ///A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.
    ///<see cref="http://schema.org/Obstetric"/>
    ///</summary>
    public static readonly Resource Obstetric = new Resource(new Uri("http://schema.org/Obstetric"));    

    ///<summary>
    ///Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.
    ///<see cref="http://schema.org/OccupationalActivity"/>
    ///</summary>
    public static readonly Resource OccupationalActivity = new Resource(new Uri("http://schema.org/OccupationalActivity"));    

    ///<summary>
    ///All the documents published by an official publisher should have at least the legal value level "OfficialLegalValue". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of a EU directive published by the EU Office of Publications).
    ///<see cref="http://schema.org/OfficialLegalValue"/>
    ///</summary>
    public static readonly Resource OfficialLegalValue = new Resource(new Uri("http://schema.org/OfficialLegalValue"));    

    ///<summary>
    ///Game server status: OfflinePermanently. Server is offline and not available.
    ///<see cref="http://schema.org/OfflinePermanently"/>
    ///</summary>
    public static readonly Resource OfflinePermanently = new Resource(new Uri("http://schema.org/OfflinePermanently"));    

    ///<summary>
    ///Game server status: OfflineTemporarily. Server is offline now but it can be online soon.
    ///<see cref="http://schema.org/OfflineTemporarily"/>
    ///</summary>
    public static readonly Resource OfflineTemporarily = new Resource(new Uri("http://schema.org/OfflineTemporarily"));    

    ///<summary>
    ///A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.
    ///<see cref="http://schema.org/OnSitePickup"/>
    ///</summary>
    public static readonly Resource OnSitePickup = new Resource(new Uri("http://schema.org/OnSitePickup"));    

    ///<summary>
    ///A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.
    ///<see cref="http://schema.org/Oncologic"/>
    ///</summary>
    public static readonly Resource Oncologic = new Resource(new Uri("http://schema.org/Oncologic"));    

    ///<summary>
    ///Game server status: Online. Server is available.
    ///<see cref="http://schema.org/Online"/>
    ///</summary>
    public static readonly Resource Online = new Resource(new Uri("http://schema.org/Online"));    

    ///<summary>
    ///Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.
    ///<see cref="http://schema.org/OnlineFull"/>
    ///</summary>
    public static readonly Resource OnlineFull = new Resource(new Uri("http://schema.org/OnlineFull"));    

    ///<summary>
    ///Indicates that the item is available only online.
    ///<see cref="http://schema.org/OnlineOnly"/>
    ///</summary>
    public static readonly Resource OnlineOnly = new Resource(new Uri("http://schema.org/OnlineOnly"));    

    ///<summary>
    ///A trial design in which the researcher knows the full details of the treatment, and so does the patient.
    ///<see cref="http://schema.org/OpenTrial"/>
    ///</summary>
    public static readonly Resource OpenTrial = new Resource(new Uri("http://schema.org/OpenTrial"));    

    ///<summary>
    ///The science or practice of testing visual acuity and prescribing corrective lenses.
    ///<see cref="http://schema.org/Optometric"/>
    ///</summary>
    public static readonly Resource Optometric = new Resource(new Uri("http://schema.org/Optometric"));    

    ///<summary>
    ///OrderStatus representing cancellation of an order.
    ///<see cref="http://schema.org/OrderCancelled"/>
    ///</summary>
    public static readonly Resource OrderCancelled = new Resource(new Uri("http://schema.org/OrderCancelled"));    

    ///<summary>
    ///OrderStatus representing successful delivery of an order.
    ///<see cref="http://schema.org/OrderDelivered"/>
    ///</summary>
    public static readonly Resource OrderDelivered = new Resource(new Uri("http://schema.org/OrderDelivered"));    

    ///<summary>
    ///OrderStatus representing that an order is in transit.
    ///<see cref="http://schema.org/OrderInTransit"/>
    ///</summary>
    public static readonly Resource OrderInTransit = new Resource(new Uri("http://schema.org/OrderInTransit"));    

    ///<summary>
    ///OrderStatus representing that payment is due on an order.
    ///<see cref="http://schema.org/OrderPaymentDue"/>
    ///</summary>
    public static readonly Resource OrderPaymentDue = new Resource(new Uri("http://schema.org/OrderPaymentDue"));    

    ///<summary>
    ///OrderStatus representing availability of an order for pickup.
    ///<see cref="http://schema.org/OrderPickupAvailable"/>
    ///</summary>
    public static readonly Resource OrderPickupAvailable = new Resource(new Uri("http://schema.org/OrderPickupAvailable"));    

    ///<summary>
    ///OrderStatus representing that there is a problem with the order.
    ///<see cref="http://schema.org/OrderProblem"/>
    ///</summary>
    public static readonly Resource OrderProblem = new Resource(new Uri("http://schema.org/OrderProblem"));    

    ///<summary>
    ///OrderStatus representing that an order is being processed.
    ///<see cref="http://schema.org/OrderProcessing"/>
    ///</summary>
    public static readonly Resource OrderProcessing = new Resource(new Uri("http://schema.org/OrderProcessing"));    

    ///<summary>
    ///OrderStatus representing that an order has been returned.
    ///<see cref="http://schema.org/OrderReturned"/>
    ///</summary>
    public static readonly Resource OrderReturned = new Resource(new Uri("http://schema.org/OrderReturned"));    

    ///<summary>
    ///OriginalShippingFees ...
    ///<see cref="http://schema.org/OriginalShippingFees"/>
    ///</summary>
    public static readonly Resource OriginalShippingFees = new Resource(new Uri("http://schema.org/OriginalShippingFees"));    

    ///<summary>
    ///A system of medicine focused on promoting the body's innate ability to heal itself.
    ///<see cref="http://schema.org/Osteopathic"/>
    ///</summary>
    public static readonly Resource Osteopathic = new Resource(new Uri("http://schema.org/Osteopathic"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.
    ///<see cref="http://schema.org/Otolaryngologic"/>
    ///</summary>
    public static readonly Resource Otolaryngologic = new Resource(new Uri("http://schema.org/Otolaryngologic"));    

    ///<summary>
    ///Indicates that the item is out of stock.
    ///<see cref="http://schema.org/OutOfStock"/>
    ///</summary>
    public static readonly Resource OutOfStock = new Resource(new Uri("http://schema.org/OutOfStock"));    

    ///<summary>
    ///Positron emission tomography imaging.
    ///<see cref="http://schema.org/PET"/>
    ///</summary>
    public static readonly Resource PET = new Resource(new Uri("http://schema.org/PET"));    

    ///<summary>
    ///Book format: Paperback.
    ///<see cref="http://schema.org/Paperback"/>
    ///</summary>
    public static readonly Resource Paperback = new Resource(new Uri("http://schema.org/Paperback"));    

    ///<summary>
    ///A parking map.
    ///<see cref="http://schema.org/ParkingMap"/>
    ///</summary>
    public static readonly Resource ParkingMap = new Resource(new Uri("http://schema.org/ParkingMap"));    

    ///<summary>
    ///Indicates that parts of the legislation are in force, and parts are not.
    ///<see cref="http://schema.org/PartiallyInForce"/>
    ///</summary>
    public static readonly Resource PartiallyInForce = new Resource(new Uri("http://schema.org/PartiallyInForce"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.
    ///<see cref="http://schema.org/Pathology"/>
    ///</summary>
    public static readonly Resource Pathology = new Resource(new Uri("http://schema.org/Pathology"));    

    ///<summary>
    ///An automatic payment system is in place and will be used.
    ///<see cref="http://schema.org/PaymentAutomaticallyApplied"/>
    ///</summary>
    public static readonly Resource PaymentAutomaticallyApplied = new Resource(new Uri("http://schema.org/PaymentAutomaticallyApplied"));    

    ///<summary>
    ///The payment has been received and processed.
    ///<see cref="http://schema.org/PaymentComplete"/>
    ///</summary>
    public static readonly Resource PaymentComplete = new Resource(new Uri("http://schema.org/PaymentComplete"));    

    ///<summary>
    ///The payee received the payment, but it was declined for some reason.
    ///<see cref="http://schema.org/PaymentDeclined"/>
    ///</summary>
    public static readonly Resource PaymentDeclined = new Resource(new Uri("http://schema.org/PaymentDeclined"));    

    ///<summary>
    ///The payment is due, but still within an acceptable time to be received.
    ///<see cref="http://schema.org/PaymentDue"/>
    ///</summary>
    public static readonly Resource PaymentDue = new Resource(new Uri("http://schema.org/PaymentDue"));    

    ///<summary>
    ///The payment is due and considered late.
    ///<see cref="http://schema.org/PaymentPastDue"/>
    ///</summary>
    public static readonly Resource PaymentPastDue = new Resource(new Uri("http://schema.org/PaymentPastDue"));    

    ///<summary>
    ///A specific branch of medical science that specializes in the care of infants, children and adolescents.
    ///<see cref="http://schema.org/Pediatric"/>
    ///</summary>
    public static readonly Resource Pediatric = new Resource(new Uri("http://schema.org/Pediatric"));    

    ///<summary>
    ///A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.
    ///<see cref="http://schema.org/PercutaneousProcedure"/>
    ///</summary>
    public static readonly Resource PercutaneousProcedure = new Resource(new Uri("http://schema.org/PercutaneousProcedure"));    

    ///<summary>
    ///The practice or art and science of preparing and dispensing drugs and medicines.
    ///<see cref="http://schema.org/PharmacySpecialty"/>
    ///</summary>
    public static readonly Resource PharmacySpecialty = new Resource(new Uri("http://schema.org/PharmacySpecialty"));    

    ///<summary>
    ///The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery..
    ///<see cref="http://schema.org/Physiotherapy"/>
    ///</summary>
    public static readonly Resource Physiotherapy = new Resource(new Uri("http://schema.org/Physiotherapy"));    

    ///<summary>
    ///A placebo-controlled trial design.
    ///<see cref="http://schema.org/PlaceboControlledTrial"/>
    ///</summary>
    public static readonly Resource PlaceboControlledTrial = new Resource(new Uri("http://schema.org/PlaceboControlledTrial"));    

    ///<summary>
    ///A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.
    ///<see cref="http://schema.org/PlasticSurgery"/>
    ///</summary>
    public static readonly Resource PlasticSurgery = new Resource(new Uri("http://schema.org/PlasticSurgery"));    

    ///<summary>
    ///Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.
    ///<see cref="http://schema.org/Podiatric"/>
    ///</summary>
    public static readonly Resource Podiatric = new Resource(new Uri("http://schema.org/Podiatric"));    

    ///<summary>
    ///A description of an action that is supported.
    ///<see cref="http://schema.org/PotentialActionStatus"/>
    ///</summary>
    public static readonly Resource PotentialActionStatus = new Resource(new Uri("http://schema.org/PotentialActionStatus"));    

    ///<summary>
    ///Indicates that the item is available for pre-order, but will be delivered when generally available.
    ///<see cref="http://schema.org/PreOrder"/>
    ///</summary>
    public static readonly Resource PreOrder = new Resource(new Uri("http://schema.org/PreOrder"));    

    ///<summary>
    ///Indicates that the item is available for ordering and delivery before general availability.
    ///<see cref="http://schema.org/PreSale"/>
    ///</summary>
    public static readonly Resource PreSale = new Resource(new Uri("http://schema.org/PreSale"));    

    ///<summary>
    ///Available by prescription only.
    ///<see cref="http://schema.org/PrescriptionOnly"/>
    ///</summary>
    public static readonly Resource PrescriptionOnly = new Resource(new Uri("http://schema.org/PrescriptionOnly"));    

    ///<summary>
    ///The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.
    ///<see cref="http://schema.org/PrimaryCare"/>
    ///</summary>
    public static readonly Resource PrimaryCare = new Resource(new Uri("http://schema.org/PrimaryCare"));    

    ///<summary>
    ///A prion is an infectious agent composed of protein in a misfolded form.
    ///<see cref="http://schema.org/Prion"/>
    ///</summary>
    public static readonly Resource Prion = new Resource(new Uri("http://schema.org/Prion"));    

    ///<summary>
    ///ProductReturnFiniteReturnWindow: there is a finite window for product returns.
    ///<see cref="http://schema.org/ProductReturnFiniteReturnWindow"/>
    ///</summary>
    public static readonly Resource ProductReturnFiniteReturnWindow = new Resource(new Uri("http://schema.org/ProductReturnFiniteReturnWindow"));    

    ///<summary>
    ///ProductReturnNotPermitted: product returns are not permitted.
    ///<see cref="http://schema.org/ProductReturnNotPermitted"/>
    ///</summary>
    public static readonly Resource ProductReturnNotPermitted = new Resource(new Uri("http://schema.org/ProductReturnNotPermitted"));    

    ///<summary>
    ///ProductReturnUnlimitedWindow: there is an unlimited window for product returns.
    ///<see cref="http://schema.org/ProductReturnUnlimitedWindow"/>
    ///</summary>
    public static readonly Resource ProductReturnUnlimitedWindow = new Resource(new Uri("http://schema.org/ProductReturnUnlimitedWindow"));    

    ///<summary>
    ///ProductReturnUnspecified: a product return policy is not specified here.
    ///<see cref="http://schema.org/ProductReturnUnspecified"/>
    ///</summary>
    public static readonly Resource ProductReturnUnspecified = new Resource(new Uri("http://schema.org/ProductReturnUnspecified"));    

    ///<summary>
    ///Single-celled organism that causes an infection.
    ///<see cref="http://schema.org/Protozoa"/>
    ///</summary>
    public static readonly Resource Protozoa = new Resource(new Uri("http://schema.org/Protozoa"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.
    ///<see cref="http://schema.org/Psychiatric"/>
    ///</summary>
    public static readonly Resource Psychiatric = new Resource(new Uri("http://schema.org/Psychiatric"));    

    ///<summary>
    ///Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.
    ///<see cref="http://schema.org/PublicHealth"/>
    ///</summary>
    public static readonly Resource PublicHealth = new Resource(new Uri("http://schema.org/PublicHealth"));    

    ///<summary>
    ///This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a "day of the week", it can be used with <a class="localLink" href="http://schema.org/OpeningHoursSpecification">OpeningHoursSpecification</a>. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.
    ///<see cref="http://schema.org/PublicHolidays"/>
    ///</summary>
    public static readonly Resource PublicHolidays = new Resource(new Uri("http://schema.org/PublicHolidays"));    

    ///<summary>
    ///A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.
    ///<see cref="http://schema.org/Pulmonary"/>
    ///</summary>
    public static readonly Resource Pulmonary = new Resource(new Uri("http://schema.org/Pulmonary"));    

    ///<summary>
    ///Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.
    ///<see cref="http://schema.org/Radiography"/>
    ///</summary>
    public static readonly Resource Radiography = new Resource(new Uri("http://schema.org/Radiography"));    

    ///<summary>
    ///A randomized trial design.
    ///<see cref="http://schema.org/RandomizedTrial"/>
    ///</summary>
    public static readonly Resource RandomizedTrial = new Resource(new Uri("http://schema.org/RandomizedTrial"));    

    ///<summary>
    ///Permission to read or view the document.
    ///<see cref="http://schema.org/ReadPermission"/>
    ///</summary>
    public static readonly Resource ReadPermission = new Resource(new Uri("http://schema.org/ReadPermission"));    

    ///<summary>
    ///Real-wheel drive is a transmission layout where the engine drives the rear wheels.
    ///<see cref="http://schema.org/RearWheelDriveConfiguration"/>
    ///</summary>
    public static readonly Resource RearWheelDriveConfiguration = new Resource(new Uri("http://schema.org/RearWheelDriveConfiguration"));    

    ///<summary>
    ///Recruiting participants.
    ///<see cref="http://schema.org/Recruiting"/>
    ///</summary>
    public static readonly Resource Recruiting = new Resource(new Uri("http://schema.org/Recruiting"));    

    ///<summary>
    ///Indicates that the item is refurbished.
    ///<see cref="http://schema.org/RefurbishedCondition"/>
    ///</summary>
    public static readonly Resource RefurbishedCondition = new Resource(new Uri("http://schema.org/RefurbishedCondition"));    

    ///<summary>
    ///A registry-based study design.
    ///<see cref="http://schema.org/Registry"/>
    ///</summary>
    public static readonly Resource Registry = new Resource(new Uri("http://schema.org/Registry"));    

    ///<summary>
    ///The drug's cost represents the maximum reimbursement paid by an insurer for the drug.
    ///<see cref="http://schema.org/ReimbursementCap"/>
    ///</summary>
    public static readonly Resource ReimbursementCap = new Resource(new Uri("http://schema.org/ReimbursementCap"));    

    ///<summary>
    ///RemixAlbum.
    ///<see cref="http://schema.org/RemixAlbum"/>
    ///</summary>
    public static readonly Resource RemixAlbum = new Resource(new Uri("http://schema.org/RemixAlbum"));    

    ///<summary>
    ///A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.
    ///<see cref="http://schema.org/Renal"/>
    ///</summary>
    public static readonly Resource Renal = new Resource(new Uri("http://schema.org/Renal"));    

    ///<summary>
    ///Indicates the usage of the vehicle as a rental car.
    ///<see cref="http://schema.org/RentalVehicleUsage"/>
    ///</summary>
    public static readonly Resource RentalVehicleUsage = new Resource(new Uri("http://schema.org/RentalVehicleUsage"));    

    ///<summary>
    ///Researchers.
    ///<see cref="http://schema.org/Researcher"/>
    ///</summary>
    public static readonly Resource Researcher = new Resource(new Uri("http://schema.org/Researcher"));    

    ///<summary>
    ///The status for a previously confirmed reservation that is now cancelled.
    ///<see cref="http://schema.org/ReservationCancelled"/>
    ///</summary>
    public static readonly Resource ReservationCancelled = new Resource(new Uri("http://schema.org/ReservationCancelled"));    

    ///<summary>
    ///The status of a confirmed reservation.
    ///<see cref="http://schema.org/ReservationConfirmed"/>
    ///</summary>
    public static readonly Resource ReservationConfirmed = new Resource(new Uri("http://schema.org/ReservationConfirmed"));    

    ///<summary>
    ///The status of a reservation on hold pending an update like credit card number or flight changes.
    ///<see cref="http://schema.org/ReservationHold"/>
    ///</summary>
    public static readonly Resource ReservationHold = new Resource(new Uri("http://schema.org/ReservationHold"));    

    ///<summary>
    ///The status of a reservation when a request has been sent, but not confirmed.
    ///<see cref="http://schema.org/ReservationPending"/>
    ///</summary>
    public static readonly Resource ReservationPending = new Resource(new Uri("http://schema.org/ReservationPending"));    

    ///<summary>
    ///The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).
    ///<see cref="http://schema.org/RespiratoryTherapy"/>
    ///</summary>
    public static readonly Resource RespiratoryTherapy = new Resource(new Uri("http://schema.org/RespiratoryTherapy"));    

    ///<summary>
    ///RestockingFees ...
    ///<see cref="http://schema.org/RestockingFees"/>
    ///</summary>
    public static readonly Resource RestockingFees = new Resource(new Uri("http://schema.org/RestockingFees"));    

    ///<summary>
    ///Results are available.
    ///<see cref="http://schema.org/ResultsAvailable"/>
    ///</summary>
    public static readonly Resource ResultsAvailable = new Resource(new Uri("http://schema.org/ResultsAvailable"));    

    ///<summary>
    ///Results are not available.
    ///<see cref="http://schema.org/ResultsNotAvailable"/>
    ///</summary>
    public static readonly Resource ResultsNotAvailable = new Resource(new Uri("http://schema.org/ResultsNotAvailable"));    

    ///<summary>
    ///The drug's cost represents the retail cost of the drug.
    ///<see cref="http://schema.org/Retail"/>
    ///</summary>
    public static readonly Resource Retail = new Resource(new Uri("http://schema.org/Retail"));    

    ///<summary>
    ///ReturnShippingFees ...
    ///<see cref="http://schema.org/ReturnShippingFees"/>
    ///</summary>
    public static readonly Resource ReturnShippingFees = new Resource(new Uri("http://schema.org/ReturnShippingFees"));    

    ///<summary>
    ///A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.
    ///<see cref="http://schema.org/Rheumatologic"/>
    ///</summary>
    public static readonly Resource Rheumatologic = new Resource(new Uri("http://schema.org/Rheumatologic"));    

    ///<summary>
    ///The steering position is on the right side of the vehicle (viewed from the main direction of driving).
    ///<see cref="http://schema.org/RightHandDriving"/>
    ///</summary>
    public static readonly Resource RightHandDriving = new Resource(new Uri("http://schema.org/RightHandDriving"));    

    ///<summary>
    ///The invitee may or may not attend.
    ///<see cref="http://schema.org/RsvpResponseMaybe"/>
    ///</summary>
    public static readonly Resource RsvpResponseMaybe = new Resource(new Uri("http://schema.org/RsvpResponseMaybe"));    

    ///<summary>
    ///The invitee will not attend.
    ///<see cref="http://schema.org/RsvpResponseNo"/>
    ///</summary>
    public static readonly Resource RsvpResponseNo = new Resource(new Uri("http://schema.org/RsvpResponseNo"));    

    ///<summary>
    ///The invitee will attend.
    ///<see cref="http://schema.org/RsvpResponseYes"/>
    ///</summary>
    public static readonly Resource RsvpResponseYes = new Resource(new Uri("http://schema.org/RsvpResponseYes"));    

    ///<summary>
    ///The day of the week between Friday and Sunday.
    ///<see cref="http://schema.org/Saturday"/>
    ///</summary>
    public static readonly Resource Saturday = new Resource(new Uri("http://schema.org/Saturday"));    

    ///<summary>
    ///A seating map.
    ///<see cref="http://schema.org/SeatingMap"/>
    ///</summary>
    public static readonly Resource SeatingMap = new Resource(new Uri("http://schema.org/SeatingMap"));    

    ///<summary>
    ///A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.
    ///<see cref="http://schema.org/SingleBlindedTrial"/>
    ///</summary>
    public static readonly Resource SingleBlindedTrial = new Resource(new Uri("http://schema.org/SingleBlindedTrial"));    

    ///<summary>
    ///A trial that takes place at a single center.
    ///<see cref="http://schema.org/SingleCenterTrial"/>
    ///</summary>
    public static readonly Resource SingleCenterTrial = new Resource(new Uri("http://schema.org/SingleCenterTrial"));    

    ///<summary>
    ///Play mode: SinglePlayer. Which is played by a lone player.
    ///<see cref="http://schema.org/SinglePlayer"/>
    ///</summary>
    public static readonly Resource SinglePlayer = new Resource(new Uri("http://schema.org/SinglePlayer"));    

    ///<summary>
    ///SingleRelease.
    ///<see cref="http://schema.org/SingleRelease"/>
    ///</summary>
    public static readonly Resource SingleRelease = new Resource(new Uri("http://schema.org/SingleRelease"));    

    ///<summary>
    ///Skin assessment with clinical examination.
    ///<see cref="http://schema.org/Skin"/>
    ///</summary>
    public static readonly Resource Skin = new Resource(new Uri("http://schema.org/Skin"));    

    ///<summary>
    ///Indicates that the item has sold out.
    ///<see cref="http://schema.org/SoldOut"/>
    ///</summary>
    public static readonly Resource SoldOut = new Resource(new Uri("http://schema.org/SoldOut"));    

    ///<summary>
    ///SoundtrackAlbum.
    ///<see cref="http://schema.org/SoundtrackAlbum"/>
    ///</summary>
    public static readonly Resource SoundtrackAlbum = new Resource(new Uri("http://schema.org/SoundtrackAlbum"));    

    ///<summary>
    ///The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.
    ///<see cref="http://schema.org/SpeechPathology"/>
    ///</summary>
    public static readonly Resource SpeechPathology = new Resource(new Uri("http://schema.org/SpeechPathology"));    

    ///<summary>
    ///SpokenWordAlbum.
    ///<see cref="http://schema.org/SpokenWordAlbum"/>
    ///</summary>
    public static readonly Resource SpokenWordAlbum = new Resource(new Uri("http://schema.org/SpokenWordAlbum"));    

    ///<summary>
    ///A StoreCreditRefund ...
    ///<see cref="http://schema.org/StoreCreditRefund"/>
    ///</summary>
    public static readonly Resource StoreCreditRefund = new Resource(new Uri("http://schema.org/StoreCreditRefund"));    

    ///<summary>
    ///Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.
    ///<see cref="http://schema.org/StrengthTraining"/>
    ///</summary>
    public static readonly Resource StrengthTraining = new Resource(new Uri("http://schema.org/StrengthTraining"));    

    ///<summary>
    ///StudioAlbum.
    ///<see cref="http://schema.org/StudioAlbum"/>
    ///</summary>
    public static readonly Resource StudioAlbum = new Resource(new Uri("http://schema.org/StudioAlbum"));    

    ///<summary>
    ///The day of the week between Saturday and Monday.
    ///<see cref="http://schema.org/Sunday"/>
    ///</summary>
    public static readonly Resource Sunday = new Resource(new Uri("http://schema.org/Sunday"));    

    ///<summary>
    ///A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.
    ///<see cref="http://schema.org/Surgical"/>
    ///</summary>
    public static readonly Resource Surgical = new Resource(new Uri("http://schema.org/Surgical"));    

    ///<summary>
    ///Suspended.
    ///<see cref="http://schema.org/Suspended"/>
    ///</summary>
    public static readonly Resource Suspended = new Resource(new Uri("http://schema.org/Suspended"));    

    ///<summary>
    ///Indicates the usage of the car as a taxi.
    ///<see cref="http://schema.org/TaxiVehicleUsage"/>
    ///</summary>
    public static readonly Resource TaxiVehicleUsage = new Resource(new Uri("http://schema.org/TaxiVehicleUsage"));    

    ///<summary>
    ///Terminated.
    ///<see cref="http://schema.org/Terminated"/>
    ///</summary>
    public static readonly Resource Terminated = new Resource(new Uri("http://schema.org/Terminated"));    

    ///<summary>
    ///A medical device used for therapeutic purposes.
    ///<see cref="http://schema.org/Therapeutic"/>
    ///</summary>
    public static readonly Resource Therapeutic = new Resource(new Uri("http://schema.org/Therapeutic"));    

    ///<summary>
    ///Throat assessment with  clinical examination.
    ///<see cref="http://schema.org/Throat"/>
    ///</summary>
    public static readonly Resource Throat = new Resource(new Uri("http://schema.org/Throat"));    

    ///<summary>
    ///The day of the week between Wednesday and Friday.
    ///<see cref="http://schema.org/Thursday"/>
    ///</summary>
    public static readonly Resource Thursday = new Resource(new Uri("http://schema.org/Thursday"));    

    ///<summary>
    ///The associated telephone number is toll free.
    ///<see cref="http://schema.org/TollFree"/>
    ///</summary>
    public static readonly Resource TollFree = new Resource(new Uri("http://schema.org/TollFree"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.
    ///<see cref="http://schema.org/Toxicologic"/>
    ///</summary>
    public static readonly Resource Toxicologic = new Resource(new Uri("http://schema.org/Toxicologic"));    

    ///<summary>
    ///A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.
    ///<see cref="http://schema.org/TraditionalChinese"/>
    ///</summary>
    public static readonly Resource TraditionalChinese = new Resource(new Uri("http://schema.org/TraditionalChinese"));    

    ///<summary>
    ///A transit map.
    ///<see cref="http://schema.org/TransitMap"/>
    ///</summary>
    public static readonly Resource TransitMap = new Resource(new Uri("http://schema.org/TransitMap"));    

    ///<summary>
    ///A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.
    ///<see cref="http://schema.org/TripleBlindedTrial"/>
    ///</summary>
    public static readonly Resource TripleBlindedTrial = new Resource(new Uri("http://schema.org/TripleBlindedTrial"));    

    ///<summary>
    ///The boolean value true.
    ///<see cref="http://schema.org/True"/>
    ///</summary>
    public static readonly Resource True = new Resource(new Uri("http://schema.org/True"));    

    ///<summary>
    ///The day of the week between Monday and Wednesday.
    ///<see cref="http://schema.org/Tuesday"/>
    ///</summary>
    public static readonly Resource Tuesday = new Resource(new Uri("http://schema.org/Tuesday"));    

    ///<summary>
    ///Ultrasound imaging.
    ///<see cref="http://schema.org/Ultrasound"/>
    ///</summary>
    public static readonly Resource Ultrasound = new Resource(new Uri("http://schema.org/Ultrasound"));    

    ///<summary>
    ///Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).
    ///<see cref="http://schema.org/UnofficialLegalValue"/>
    ///</summary>
    public static readonly Resource UnofficialLegalValue = new Resource(new Uri("http://schema.org/UnofficialLegalValue"));    

    ///<summary>
    ///A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.
    ///<see cref="http://schema.org/Urologic"/>
    ///</summary>
    public static readonly Resource Urologic = new Resource(new Uri("http://schema.org/Urologic"));    

    ///<summary>
    ///Indicates that the item is used.
    ///<see cref="http://schema.org/UsedCondition"/>
    ///</summary>
    public static readonly Resource UsedCondition = new Resource(new Uri("http://schema.org/UsedCondition"));    

    ///<summary>
    ///A diet exclusive of all animal products.
    ///<see cref="http://schema.org/VeganDiet"/>
    ///</summary>
    public static readonly Resource VeganDiet = new Resource(new Uri("http://schema.org/VeganDiet"));    

    ///<summary>
    ///A diet exclusive of animal meat.
    ///<see cref="http://schema.org/VegetarianDiet"/>
    ///</summary>
    public static readonly Resource VegetarianDiet = new Resource(new Uri("http://schema.org/VegetarianDiet"));    

    ///<summary>
    ///A venue map (e.g. for malls, auditoriums, museums, etc.).
    ///<see cref="http://schema.org/VenueMap"/>
    ///</summary>
    public static readonly Resource VenueMap = new Resource(new Uri("http://schema.org/VenueMap"));    

    ///<summary>
    ///VinylFormat.
    ///<see cref="http://schema.org/VinylFormat"/>
    ///</summary>
    public static readonly Resource VinylFormat = new Resource(new Uri("http://schema.org/VinylFormat"));    

    ///<summary>
    ///Pathogenic virus that causes viral infection.
    ///<see cref="http://schema.org/Virus"/>
    ///</summary>
    public static readonly Resource Virus = new Resource(new Uri("http://schema.org/Virus"));    

    ///<summary>
    ///The day of the week between Tuesday and Thursday.
    ///<see cref="http://schema.org/Wednesday"/>
    ///</summary>
    public static readonly Resource Wednesday = new Resource(new Uri("http://schema.org/Wednesday"));    

    ///<summary>
    ///The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.
    ///<see cref="http://schema.org/WesternConventional"/>
    ///</summary>
    public static readonly Resource WesternConventional = new Resource(new Uri("http://schema.org/WesternConventional"));    

    ///<summary>
    ///The drug's cost represents the wholesale acquisition cost of the drug.
    ///<see cref="http://schema.org/Wholesale"/>
    ///</summary>
    public static readonly Resource Wholesale = new Resource(new Uri("http://schema.org/Wholesale"));    

    ///<summary>
    ///Withdrawn.
    ///<see cref="http://schema.org/Withdrawn"/>
    ///</summary>
    public static readonly Resource Withdrawn = new Resource(new Uri("http://schema.org/Withdrawn"));    

    ///<summary>
    ///Permission to write or edit the document.
    ///<see cref="http://schema.org/WritePermission"/>
    ///</summary>
    public static readonly Resource WritePermission = new Resource(new Uri("http://schema.org/WritePermission"));    

    ///<summary>
    ///X-ray imaging.
    ///<see cref="http://schema.org/XRay"/>
    ///</summary>
    public static readonly Resource XRay = new Resource(new Uri("http://schema.org/XRay"));    

    ///<summary>
    ///The airline boards by zones of the plane.
    ///<see cref="http://schema.org/ZoneBoardingPolicy"/>
    ///</summary>
    public static readonly Resource ZoneBoardingPolicy = new Resource(new Uri("http://schema.org/ZoneBoardingPolicy"));    

    ///<summary>
    ///Indicates whether the book is an abridged edition.
    ///<see cref="http://schema.org/abridged"/>
    ///</summary>
    public static readonly Property abridged = new Property(new Uri("http://schema.org/abridged"));    

    ///<summary>
    ///The time needed to accelerate the vehicle from a given start velocity to a given target velocity.<br/><br/>
    ///
    ///Typical unit code(s): SEC for seconds<br/><br/>
    ///
    ///<ul>
    ///<li>Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a>, or use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> with a <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> of 0..60 mph or 0..100 km/h to specify the reference speeds.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/accelerationTime"/>
    ///</summary>
    public static readonly Property accelerationTime = new Property(new Uri("http://schema.org/accelerationTime"));    

    ///<summary>
    ///The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
    ///<see cref="http://schema.org/acceptedAnswer"/>
    ///</summary>
    public static readonly Property acceptedAnswer = new Property(new Uri("http://schema.org/acceptedAnswer"));    

    ///<summary>
    ///The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
    ///<see cref="http://schema.org/acceptedOffer"/>
    ///</summary>
    public static readonly Property acceptedOffer = new Property(new Uri("http://schema.org/acceptedOffer"));    

    ///<summary>
    ///The payment method(s) accepted by seller for this offer.
    ///<see cref="http://schema.org/acceptedPaymentMethod"/>
    ///</summary>
    public static readonly Property acceptedPaymentMethod = new Property(new Uri("http://schema.org/acceptedPaymentMethod"));    

    ///<summary>
    ///Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.
    ///<see cref="http://schema.org/acceptsReservations"/>
    ///</summary>
    public static readonly Property acceptsReservations = new Property(new Uri("http://schema.org/acceptsReservations"));    

    ///<summary>
    ///Password, PIN, or access code needed for delivery (e.g. from a locker).
    ///<see cref="http://schema.org/accessCode"/>
    ///</summary>
    public static readonly Property accessCode = new Property(new Uri("http://schema.org/accessCode"));    

    ///<summary>
    ///The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.
    ///<see cref="http://schema.org/accessMode"/>
    ///</summary>
    public static readonly Property accessMode = new Property(new Uri("http://schema.org/accessMode"));    

    ///<summary>
    ///A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.
    ///<see cref="http://schema.org/accessModeSufficient"/>
    ///</summary>
    public static readonly Property accessModeSufficient = new Property(new Uri("http://schema.org/accessModeSufficient"));    

    ///<summary>
    ///Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityAPI"/>
    ///</summary>
    public static readonly Property accessibilityAPI = new Property(new Uri("http://schema.org/accessibilityAPI"));    

    ///<summary>
    ///Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityControl"/>
    ///</summary>
    public static readonly Property accessibilityControl = new Property(new Uri("http://schema.org/accessibilityControl"));    

    ///<summary>
    ///Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityFeature"/>
    ///</summary>
    public static readonly Property accessibilityFeature = new Property(new Uri("http://schema.org/accessibilityFeature"));    

    ///<summary>
    ///A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityHazard"/>
    ///</summary>
    public static readonly Property accessibilityHazard = new Property(new Uri("http://schema.org/accessibilityHazard"));    

    ///<summary>
    ///A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."
    ///<see cref="http://schema.org/accessibilitySummary"/>
    ///</summary>
    public static readonly Property accessibilitySummary = new Property(new Uri("http://schema.org/accessibilitySummary"));    

    ///<summary>
    ///The identifier for the account the payment will be applied to.
    ///<see cref="http://schema.org/accountId"/>
    ///</summary>
    public static readonly Property accountId = new Property(new Uri("http://schema.org/accountId"));    

    ///<summary>
    ///A minimum amount that has to be paid in every month.
    ///<see cref="http://schema.org/accountMinimumInflow"/>
    ///</summary>
    public static readonly Property accountMinimumInflow = new Property(new Uri("http://schema.org/accountMinimumInflow"));    

    ///<summary>
    ///An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.
    ///<see cref="http://schema.org/accountOverdraftLimit"/>
    ///</summary>
    public static readonly Property accountOverdraftLimit = new Property(new Uri("http://schema.org/accountOverdraftLimit"));    

    ///<summary>
    ///Specifies the Person that is legally accountable for the CreativeWork.
    ///<see cref="http://schema.org/accountablePerson"/>
    ///</summary>
    public static readonly Property accountablePerson = new Property(new Uri("http://schema.org/accountablePerson"));    

    ///<summary>
    ///The organization or person from which the product was acquired.
    ///<see cref="http://schema.org/acquiredFrom"/>
    ///</summary>
    public static readonly Property acquiredFrom = new Property(new Uri("http://schema.org/acquiredFrom"));    

    ///<summary>
    ///The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.
    ///<see cref="http://schema.org/acrissCode"/>
    ///</summary>
    public static readonly Property acrissCode = new Property(new Uri("http://schema.org/acrissCode"));    

    ///<summary>
    ///Obsolete term for <a class="localLink" href="http://schema.org/muscleAction">muscleAction</a>. Not to be confused with <a class="localLink" href="http://schema.org/potentialAction">potentialAction</a>.
    ///<see cref="http://schema.org/action"/>
    ///</summary>
    public static readonly Property action = new Property(new Uri("http://schema.org/action"));    

    ///<summary>
    ///A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed.
    ///<see cref="http://schema.org/actionAccessibilityRequirement"/>
    ///</summary>
    public static readonly Property actionAccessibilityRequirement = new Property(new Uri("http://schema.org/actionAccessibilityRequirement"));    

    ///<summary>
    ///The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
    ///<see cref="http://schema.org/actionPlatform"/>
    ///</summary>
    public static readonly Property actionPlatform = new Property(new Uri("http://schema.org/actionPlatform"));    

    ///<summary>
    ///Indicates the current disposition of the Action.
    ///<see cref="http://schema.org/actionStatus"/>
    ///</summary>
    public static readonly Property actionStatus = new Property(new Uri("http://schema.org/actionStatus"));    

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other news-related <a class="localLink" href="http://schema.org/Organization">Organization</a>, a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
    ///<see cref="http://schema.org/actionableFeedbackPolicy"/>
    ///</summary>
    public static readonly Property actionableFeedbackPolicy = new Property(new Uri("http://schema.org/actionableFeedbackPolicy"));    

    ///<summary>
    ///An active ingredient, typically chemical compounds and/or biologic substances.
    ///<see cref="http://schema.org/activeIngredient"/>
    ///</summary>
    public static readonly Property activeIngredient = new Property(new Uri("http://schema.org/activeIngredient"));    

    ///<summary>
    ///Length of time to engage in the activity.
    ///<see cref="http://schema.org/activityDuration"/>
    ///</summary>
    public static readonly Property activityDuration = new Property(new Uri("http://schema.org/activityDuration"));    

    ///<summary>
    ///How often one should engage in the activity.
    ///<see cref="http://schema.org/activityFrequency"/>
    ///</summary>
    public static readonly Property activityFrequency = new Property(new Uri("http://schema.org/activityFrequency"));    

    ///<summary>
    ///An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/actors"/>
    ///</summary>
    public static readonly Property actors = new Property(new Uri("http://schema.org/actors"));    

    ///<summary>
    ///An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
    ///<see cref="http://schema.org/addOn"/>
    ///</summary>
    public static readonly Property addOn = new Property(new Uri("http://schema.org/addOn"));    

    ///<summary>
    ///An additional name for a Person, can be used for a middle name.
    ///<see cref="http://schema.org/additionalName"/>
    ///</summary>
    public static readonly Property additionalName = new Property(new Uri("http://schema.org/additionalName"));    

    ///<summary>
    ///If responding yes, the number of guests who will attend in addition to the invitee.
    ///<see cref="http://schema.org/additionalNumberOfGuests"/>
    ///</summary>
    public static readonly Property additionalNumberOfGuests = new Property(new Uri("http://schema.org/additionalNumberOfGuests"));    

    ///<summary>
    ///A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>
    ///
    ///Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
    ///<see cref="http://schema.org/additionalProperty"/>
    ///</summary>
    public static readonly Property additionalProperty = new Property(new Uri("http://schema.org/additionalProperty"));    

    ///<summary>
    ///An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
    ///<see cref="http://schema.org/additionalType"/>
    ///</summary>
    public static readonly Property additionalType = new Property(new Uri("http://schema.org/additionalType"));    

    ///<summary>
    ///Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.
    ///<see cref="http://schema.org/additionalVariable"/>
    ///</summary>
    public static readonly Property additionalVariable = new Property(new Uri("http://schema.org/additionalVariable"));    

    ///<summary>
    ///Physical address of the item.
    ///<see cref="http://schema.org/address"/>
    ///</summary>
    public static readonly Property address = new Property(new Uri("http://schema.org/address"));    

    ///<summary>
    ///The country. For example, USA. You can also provide the two-letter <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2 country code</a>.
    ///<see cref="http://schema.org/addressCountry"/>
    ///</summary>
    public static readonly Property addressCountry = new Property(new Uri("http://schema.org/addressCountry"));    

    ///<summary>
    ///The locality in which the street address is, and which is in the region. For example, Mountain View.
    ///<see cref="http://schema.org/addressLocality"/>
    ///</summary>
    public static readonly Property addressLocality = new Property(new Uri("http://schema.org/addressLocality"));    

    ///<summary>
    ///The region in which the locality is, and which is in the country. For example, California or another appropriate first-level <a href="https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country">Administrative division</a>
    ///<see cref="http://schema.org/addressRegion"/>
    ///</summary>
    public static readonly Property addressRegion = new Property(new Uri("http://schema.org/addressRegion"));    

    ///<summary>
    ///A route by which this drug may be administered, e.g. 'oral'.
    ///<see cref="http://schema.org/administrationRoute"/>
    ///</summary>
    public static readonly Property administrationRoute = new Property(new Uri("http://schema.org/administrationRoute"));    

    ///<summary>
    ///The amount of time that is required between accepting the offer and the actual usage of the resource or service.
    ///<see cref="http://schema.org/advanceBookingRequirement"/>
    ///</summary>
    public static readonly Property advanceBookingRequirement = new Property(new Uri("http://schema.org/advanceBookingRequirement"));    

    ///<summary>
    ///A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or is otherwise life-threatening or requires immediate medical attention), tag it as a seriouseAdverseOutcome instead.
    ///<see cref="http://schema.org/adverseOutcome"/>
    ///</summary>
    public static readonly Property adverseOutcome = new Property(new Uri("http://schema.org/adverseOutcome"));    

    ///<summary>
    ///Drugs that affect the test's results.
    ///<see cref="http://schema.org/affectedBy"/>
    ///</summary>
    public static readonly Property affectedBy = new Property(new Uri("http://schema.org/affectedBy"));    

    ///<summary>
    ///An organization that this person is affiliated with. For example, a school/university, a club, or a team.
    ///<see cref="http://schema.org/affiliation"/>
    ///</summary>
    public static readonly Property affiliation = new Property(new Uri("http://schema.org/affiliation"));    

    ///<summary>
    ///A media object representing the circumstances after performing this direction.
    ///<see cref="http://schema.org/afterMedia"/>
    ///</summary>
    public static readonly Property afterMedia = new Property(new Uri("http://schema.org/afterMedia"));    

    ///<summary>
    ///The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.
    ///<see cref="http://schema.org/agent"/>
    ///</summary>
    public static readonly Property agent = new Property(new Uri("http://schema.org/agent"));    

    ///<summary>
    ///The overall rating, based on a collection of reviews or ratings, of the item.
    ///<see cref="http://schema.org/aggregateRating"/>
    ///</summary>
    public static readonly Property aggregateRating = new Property(new Uri("http://schema.org/aggregateRating"));    

    ///<summary>
    ///The kind of aircraft (e.g., "Boeing 747").
    ///<see cref="http://schema.org/aircraft"/>
    ///</summary>
    public static readonly Property aircraft = new Property(new Uri("http://schema.org/aircraft"));    

    ///<summary>
    ///Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
    ///<see cref="http://schema.org/albumProductionType"/>
    ///</summary>
    public static readonly Property albumProductionType = new Property(new Uri("http://schema.org/albumProductionType"));    

    ///<summary>
    ///The kind of release which this album is: single, EP or album.
    ///<see cref="http://schema.org/albumReleaseType"/>
    ///</summary>
    public static readonly Property albumReleaseType = new Property(new Uri("http://schema.org/albumReleaseType"));    

    ///<summary>
    ///A collection of music albums.
    ///<see cref="http://schema.org/albums"/>
    ///</summary>
    public static readonly Property albums = new Property(new Uri("http://schema.org/albums"));    

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.
    ///<see cref="http://schema.org/alcoholWarning"/>
    ///</summary>
    public static readonly Property alcoholWarning = new Property(new Uri("http://schema.org/alcoholWarning"));    

    ///<summary>
    ///The algorithm or rules to follow to compute the score.
    ///<see cref="http://schema.org/algorithm"/>
    ///</summary>
    public static readonly Property algorithm = new Property(new Uri("http://schema.org/algorithm"));    

    ///<summary>
    ///A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.
    ///<see cref="http://schema.org/alignmentType"/>
    ///</summary>
    public static readonly Property alignmentType = new Property(new Uri("http://schema.org/alignmentType"));    

    ///<summary>
    ///An alias for the item.
    ///<see cref="http://schema.org/alternateName"/>
    ///</summary>
    public static readonly Property alternateName = new Property(new Uri("http://schema.org/alternateName"));    

    ///<summary>
    ///A secondary title of the CreativeWork.
    ///<see cref="http://schema.org/alternativeHeadline"/>
    ///</summary>
    public static readonly Property alternativeHeadline = new Property(new Uri("http://schema.org/alternativeHeadline"));    

    ///<summary>
    ///An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
    ///<see cref="http://schema.org/amenityFeature"/>
    ///</summary>
    public static readonly Property amenityFeature = new Property(new Uri("http://schema.org/amenityFeature"));    

    ///<summary>
    ///The amount of money.
    ///<see cref="http://schema.org/amount"/>
    ///</summary>
    public static readonly Property amount = new Property(new Uri("http://schema.org/amount"));    

    ///<summary>
    ///The quantity of the goods included in the offer.
    ///<see cref="http://schema.org/amountOfThisGood"/>
    ///</summary>
    public static readonly Property amountOfThisGood = new Property(new Uri("http://schema.org/amountOfThisGood"));    

    ///<summary>
    ///The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.
    ///<see cref="http://schema.org/annualPercentageRate"/>
    ///</summary>
    public static readonly Property annualPercentageRate = new Property(new Uri("http://schema.org/annualPercentageRate"));    

    ///<summary>
    ///The number of answers this question has received.
    ///<see cref="http://schema.org/answerCount"/>
    ///</summary>
    public static readonly Property answerCount = new Property(new Uri("http://schema.org/answerCount"));    

    ///<summary>
    ///The muscle whose action counteracts the specified muscle.
    ///<see cref="http://schema.org/antagonist"/>
    ///</summary>
    public static readonly Property antagonist = new Property(new Uri("http://schema.org/antagonist"));    

    ///<summary>
    ///Indicates an occurence of a <a class="localLink" href="http://schema.org/Claim">Claim</a> in some <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/appearance"/>
    ///</summary>
    public static readonly Property appearance = new Property(new Uri("http://schema.org/appearance"));    

    ///<summary>
    ///The location in which the status applies.
    ///<see cref="http://schema.org/applicableLocation"/>
    ///</summary>
    public static readonly Property applicableLocation = new Property(new Uri("http://schema.org/applicableLocation"));    

    ///<summary>
    ///The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.
    ///<see cref="http://schema.org/applicantLocationRequirements"/>
    ///</summary>
    public static readonly Property applicantLocationRequirements = new Property(new Uri("http://schema.org/applicantLocationRequirements"));    

    ///<summary>
    ///An application that can complete the request.
    ///<see cref="http://schema.org/application"/>
    ///</summary>
    public static readonly Property application = new Property(new Uri("http://schema.org/application"));    

    ///<summary>
    ///Type of software application, e.g. 'Game, Multimedia'.
    ///<see cref="http://schema.org/applicationCategory"/>
    ///</summary>
    public static readonly Property applicationCategory = new Property(new Uri("http://schema.org/applicationCategory"));    

    ///<summary>
    ///Subcategory of the application, e.g. 'Arcade Game'.
    ///<see cref="http://schema.org/applicationSubCategory"/>
    ///</summary>
    public static readonly Property applicationSubCategory = new Property(new Uri("http://schema.org/applicationSubCategory"));    

    ///<summary>
    ///The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
    ///<see cref="http://schema.org/applicationSuite"/>
    ///</summary>
    public static readonly Property applicationSuite = new Property(new Uri("http://schema.org/applicationSuite"));    

    ///<summary>
    ///The delivery method(s) to which the delivery charge or payment charge specification applies.
    ///<see cref="http://schema.org/appliesToDeliveryMethod"/>
    ///</summary>
    public static readonly Property appliesToDeliveryMethod = new Property(new Uri("http://schema.org/appliesToDeliveryMethod"));    

    ///<summary>
    ///The payment method(s) to which the payment charge specification applies.
    ///<see cref="http://schema.org/appliesToPaymentMethod"/>
    ///</summary>
    public static readonly Property appliesToPaymentMethod = new Property(new Uri("http://schema.org/appliesToPaymentMethod"));    

    ///<summary>
    ///The area within which users can expect to reach the broadcast service.
    ///<see cref="http://schema.org/area"/>
    ///</summary>
    public static readonly Property area = new Property(new Uri("http://schema.org/area"));    

    ///<summary>
    ///The airport where the flight terminates.
    ///<see cref="http://schema.org/arrivalAirport"/>
    ///</summary>
    public static readonly Property arrivalAirport = new Property(new Uri("http://schema.org/arrivalAirport"));    

    ///<summary>
    ///The stop or station from which the bus arrives.
    ///<see cref="http://schema.org/arrivalBusStop"/>
    ///</summary>
    public static readonly Property arrivalBusStop = new Property(new Uri("http://schema.org/arrivalBusStop"));    

    ///<summary>
    ///Identifier of the flight's arrival gate.
    ///<see cref="http://schema.org/arrivalGate"/>
    ///</summary>
    public static readonly Property arrivalGate = new Property(new Uri("http://schema.org/arrivalGate"));    

    ///<summary>
    ///The platform where the train arrives.
    ///<see cref="http://schema.org/arrivalPlatform"/>
    ///</summary>
    public static readonly Property arrivalPlatform = new Property(new Uri("http://schema.org/arrivalPlatform"));    

    ///<summary>
    ///The station where the train trip ends.
    ///<see cref="http://schema.org/arrivalStation"/>
    ///</summary>
    public static readonly Property arrivalStation = new Property(new Uri("http://schema.org/arrivalStation"));    

    ///<summary>
    ///Identifier of the flight's arrival terminal.
    ///<see cref="http://schema.org/arrivalTerminal"/>
    ///</summary>
    public static readonly Property arrivalTerminal = new Property(new Uri("http://schema.org/arrivalTerminal"));    

    ///<summary>
    ///The expected arrival time.
    ///<see cref="http://schema.org/arrivalTime"/>
    ///</summary>
    public static readonly Property arrivalTime = new Property(new Uri("http://schema.org/arrivalTime"));    

    ///<summary>
    ///The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20").
    ///<see cref="http://schema.org/artEdition"/>
    ///</summary>
    public static readonly Property artEdition = new Property(new Uri("http://schema.org/artEdition"));    

    ///<summary>
    ///The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)
    ///<see cref="http://schema.org/artMedium"/>
    ///</summary>
    public static readonly Property artMedium = new Property(new Uri("http://schema.org/artMedium"));    

    ///<summary>
    ///e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.
    ///<see cref="http://schema.org/artform"/>
    ///</summary>
    public static readonly Property artform = new Property(new Uri("http://schema.org/artform"));    

    ///<summary>
    ///The actual body of the article.
    ///<see cref="http://schema.org/articleBody"/>
    ///</summary>
    public static readonly Property articleBody = new Property(new Uri("http://schema.org/articleBody"));    

    ///<summary>
    ///Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
    ///<see cref="http://schema.org/articleSection"/>
    ///</summary>
    public static readonly Property articleSection = new Property(new Uri("http://schema.org/articleSection"));    

    ///<summary>
    ///The primary artist for a work
    ///    in a medium other than pencils or digital line art--for example, if the
    ///    primary artwork is done in watercolors or digital paints.
    ///<see cref="http://schema.org/artist"/>
    ///</summary>
    public static readonly Property artist = new Property(new Uri("http://schema.org/artist"));    

    ///<summary>
    ///An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.
    ///<see cref="http://schema.org/aspect"/>
    ///</summary>
    public static readonly Property aspect = new Property(new Uri("http://schema.org/aspect"));    

    ///<summary>
    ///Library file name e.g., mscorlib.dll, system.web.dll.
    ///<see cref="http://schema.org/assembly"/>
    ///</summary>
    public static readonly Property assembly = new Property(new Uri("http://schema.org/assembly"));    

    ///<summary>
    ///Associated product/technology version. e.g., .NET Framework 4.5.
    ///<see cref="http://schema.org/assemblyVersion"/>
    ///</summary>
    public static readonly Property assemblyVersion = new Property(new Uri("http://schema.org/assemblyVersion"));    

    ///<summary>
    ///The anatomy of the underlying organ system or structures associated with this entity.
    ///<see cref="http://schema.org/associatedAnatomy"/>
    ///</summary>
    public static readonly Property associatedAnatomy = new Property(new Uri("http://schema.org/associatedAnatomy"));    

    ///<summary>
    ///A NewsArticle associated with the Media Object.
    ///<see cref="http://schema.org/associatedArticle"/>
    ///</summary>
    public static readonly Property associatedArticle = new Property(new Uri("http://schema.org/associatedArticle"));    

    ///<summary>
    ///A media object that encodes this CreativeWork. This property is a synonym for encoding.
    ///<see cref="http://schema.org/associatedMedia"/>
    ///</summary>
    public static readonly Property associatedMedia = new Property(new Uri("http://schema.org/associatedMedia"));    

    ///<summary>
    ///If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.
    ///<see cref="http://schema.org/associatedPathophysiology"/>
    ///</summary>
    public static readonly Property associatedPathophysiology = new Property(new Uri("http://schema.org/associatedPathophysiology"));    

    ///<summary>
    ///A person that acts as performing member of a sports team; a player as opposed to a coach.
    ///<see cref="http://schema.org/athlete"/>
    ///</summary>
    public static readonly Property athlete = new Property(new Uri("http://schema.org/athlete"));    

    ///<summary>
    ///A person attending the event.
    ///<see cref="http://schema.org/attendees"/>
    ///</summary>
    public static readonly Property attendees = new Property(new Uri("http://schema.org/attendees"));    

    ///<summary>
    ///The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
    ///<see cref="http://schema.org/audienceType"/>
    ///</summary>
    public static readonly Property audienceType = new Property(new Uri("http://schema.org/audienceType"));    

    ///<summary>
    ///An embedded audio object.
    ///<see cref="http://schema.org/audio"/>
    ///</summary>
    public static readonly Property audio = new Property(new Uri("http://schema.org/audio"));    

    ///<summary>
    ///The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.
    ///<see cref="http://schema.org/authenticator"/>
    ///</summary>
    public static readonly Property authenticator = new Property(new Uri("http://schema.org/authenticator"));    

    ///<summary>
    ///The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
    ///<see cref="http://schema.org/author"/>
    ///</summary>
    public static readonly Property author = new Property(new Uri("http://schema.org/author"));    

    ///<summary>
    ///The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
    ///<see cref="http://schema.org/availability"/>
    ///</summary>
    public static readonly Property availability = new Property(new Uri("http://schema.org/availability"));    

    ///<summary>
    ///The end of the availability of the product or service included in the offer.
    ///<see cref="http://schema.org/availabilityEnds"/>
    ///</summary>
    public static readonly Property availabilityEnds = new Property(new Uri("http://schema.org/availabilityEnds"));    

    ///<summary>
    ///The beginning of the availability of the product or service included in the offer.
    ///<see cref="http://schema.org/availabilityStarts"/>
    ///</summary>
    public static readonly Property availabilityStarts = new Property(new Uri("http://schema.org/availabilityStarts"));    

    ///<summary>
    ///The place(s) from which the offer can be obtained (e.g. store locations).
    ///<see cref="http://schema.org/availableAtOrFrom"/>
    ///</summary>
    public static readonly Property availableAtOrFrom = new Property(new Uri("http://schema.org/availableAtOrFrom"));    

    ///<summary>
    ///A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
    ///<see cref="http://schema.org/availableChannel"/>
    ///</summary>
    public static readonly Property availableChannel = new Property(new Uri("http://schema.org/availableChannel"));    

    ///<summary>
    ///The delivery method(s) available for this offer.
    ///<see cref="http://schema.org/availableDeliveryMethod"/>
    ///</summary>
    public static readonly Property availableDeliveryMethod = new Property(new Uri("http://schema.org/availableDeliveryMethod"));    

    ///<summary>
    ///When the item is available for pickup from the store, locker, etc.
    ///<see cref="http://schema.org/availableFrom"/>
    ///</summary>
    public static readonly Property availableFrom = new Property(new Uri("http://schema.org/availableFrom"));    

    ///<summary>
    ///The location in which the strength is available.
    ///<see cref="http://schema.org/availableIn"/>
    ///</summary>
    public static readonly Property availableIn = new Property(new Uri("http://schema.org/availableIn"));    

    ///<summary>
    ///A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/inLanguage">inLanguage</a>
    ///<see cref="http://schema.org/availableLanguage"/>
    ///</summary>
    public static readonly Property availableLanguage = new Property(new Uri("http://schema.org/availableLanguage"));    

    ///<summary>
    ///A medical service available from this provider.
    ///<see cref="http://schema.org/availableService"/>
    ///</summary>
    public static readonly Property availableService = new Property(new Uri("http://schema.org/availableService"));    

    ///<summary>
    ///An available dosage strength for the drug.
    ///<see cref="http://schema.org/availableStrength"/>
    ///</summary>
    public static readonly Property availableStrength = new Property(new Uri("http://schema.org/availableStrength"));    

    ///<summary>
    ///A diagnostic test or procedure offered by this lab.
    ///<see cref="http://schema.org/availableTest"/>
    ///</summary>
    public static readonly Property availableTest = new Property(new Uri("http://schema.org/availableTest"));    

    ///<summary>
    ///After this date, the item will no longer be available for pickup.
    ///<see cref="http://schema.org/availableThrough"/>
    ///</summary>
    public static readonly Property availableThrough = new Property(new Uri("http://schema.org/availableThrough"));    

    ///<summary>
    ///Awards won by or for this item.
    ///<see cref="http://schema.org/awards"/>
    ///</summary>
    public static readonly Property awards = new Property(new Uri("http://schema.org/awards"));    

    ///<summary>
    ///The away team in a sports event.
    ///<see cref="http://schema.org/awayTeam"/>
    ///</summary>
    public static readonly Property awayTeam = new Property(new Uri("http://schema.org/awayTeam"));    

    ///<summary>
    ///Descriptive information establishing a historical perspective on the supplement. May include the rationale for the name, the population where the supplement first came to prominence, etc.
    ///<see cref="http://schema.org/background"/>
    ///</summary>
    public static readonly Property background = new Property(new Uri("http://schema.org/background"));    

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Article">Article</a>, typically a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>, the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.
    ///<see cref="http://schema.org/backstory"/>
    ///</summary>
    public static readonly Property backstory = new Property(new Uri("http://schema.org/backstory"));    

    ///<summary>
    ///The type of a bank account.
    ///<see cref="http://schema.org/bankAccountType"/>
    ///</summary>
    public static readonly Property bankAccountType = new Property(new Uri("http://schema.org/bankAccountType"));    

    ///<summary>
    ///The base salary of the job or of an employee in an EmployeeRole.
    ///<see cref="http://schema.org/baseSalary"/>
    ///</summary>
    public static readonly Property baseSalary = new Property(new Uri("http://schema.org/baseSalary"));    

    ///<summary>
    ///A sub property of recipient. The recipient blind copied on a message.
    ///<see cref="http://schema.org/bccRecipient"/>
    ///</summary>
    public static readonly Property bccRecipient = new Property(new Uri("http://schema.org/bccRecipient"));    

    ///<summary>
    ///The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
    ///      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
    ///<see cref="http://schema.org/bed"/>
    ///</summary>
    public static readonly Property bed = new Property(new Uri("http://schema.org/bed"));    

    ///<summary>
    ///A media object representing the circumstances before performing this direction.
    ///<see cref="http://schema.org/beforeMedia"/>
    ///</summary>
    public static readonly Property beforeMedia = new Property(new Uri("http://schema.org/beforeMedia"));    

    ///<summary>
    ///A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary
    ///<see cref="http://schema.org/beneficiaryBank"/>
    ///</summary>
    public static readonly Property beneficiaryBank = new Property(new Uri("http://schema.org/beneficiaryBank"));    

    ///<summary>
    ///Description of benefits associated with the job.
    ///<see cref="http://schema.org/benefits"/>
    ///</summary>
    public static readonly Property benefits = new Property(new Uri("http://schema.org/benefits"));    

    ///<summary>
    ///The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.
    ///<see cref="http://schema.org/benefitsSummaryUrl"/>
    ///</summary>
    public static readonly Property benefitsSummaryUrl = new Property(new Uri("http://schema.org/benefitsSummaryUrl"));    

    ///<summary>
    ///The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.
    ///<see cref="http://schema.org/bestRating"/>
    ///</summary>
    public static readonly Property bestRating = new Property(new Uri("http://schema.org/bestRating"));    

    ///<summary>
    ///The billing address for the order.
    ///<see cref="http://schema.org/billingAddress"/>
    ///</summary>
    public static readonly Property billingAddress = new Property(new Uri("http://schema.org/billingAddress"));    

    ///<summary>
    ///This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
    ///<see cref="http://schema.org/billingIncrement"/>
    ///</summary>
    public static readonly Property billingIncrement = new Property(new Uri("http://schema.org/billingIncrement"));    

    ///<summary>
    ///The time interval used to compute the invoice.
    ///<see cref="http://schema.org/billingPeriod"/>
    ///</summary>
    public static readonly Property billingPeriod = new Property(new Uri("http://schema.org/billingPeriod"));    

    ///<summary>
    ///The biomechanical properties of the bone.
    ///<see cref="http://schema.org/biomechnicalClass"/>
    ///</summary>
    public static readonly Property biomechnicalClass = new Property(new Uri("http://schema.org/biomechnicalClass"));    

    ///<summary>
    ///Date of birth.
    ///<see cref="http://schema.org/birthDate"/>
    ///</summary>
    public static readonly Property birthDate = new Property(new Uri("http://schema.org/birthDate"));    

    ///<summary>
    ///The place where the person was born.
    ///<see cref="http://schema.org/birthPlace"/>
    ///</summary>
    public static readonly Property birthPlace = new Property(new Uri("http://schema.org/birthPlace"));    

    ///<summary>
    ///The bitrate of the media object.
    ///<see cref="http://schema.org/bitrate"/>
    ///</summary>
    public static readonly Property bitrate = new Property(new Uri("http://schema.org/bitrate"));    

    ///<summary>
    ///The postings that are part of this blog.
    ///<see cref="http://schema.org/blogPosts"/>
    ///</summary>
    public static readonly Property blogPosts = new Property(new Uri("http://schema.org/blogPosts"));    

    ///<summary>
    ///The blood vessel that carries blood from the heart to the muscle.
    ///<see cref="http://schema.org/bloodSupply"/>
    ///</summary>
    public static readonly Property bloodSupply = new Property(new Uri("http://schema.org/bloodSupply"));    

    ///<summary>
    ///The airline-specific indicator of boarding order / preference.
    ///<see cref="http://schema.org/boardingGroup"/>
    ///</summary>
    public static readonly Property boardingGroup = new Property(new Uri("http://schema.org/boardingGroup"));    

    ///<summary>
    ///The type of boarding policy used by the airline (e.g. zone-based or group-based).
    ///<see cref="http://schema.org/boardingPolicy"/>
    ///</summary>
    public static readonly Property boardingPolicy = new Property(new Uri("http://schema.org/boardingPolicy"));    

    ///<summary>
    ///Location in the body of the anatomical structure.
    ///<see cref="http://schema.org/bodyLocation"/>
    ///</summary>
    public static readonly Property bodyLocation = new Property(new Uri("http://schema.org/bodyLocation"));    

    ///<summary>
    ///Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).
    ///<see cref="http://schema.org/bodyType"/>
    ///</summary>
    public static readonly Property bodyType = new Property(new Uri("http://schema.org/bodyType"));    

    ///<summary>
    ///The edition of the book.
    ///<see cref="http://schema.org/bookEdition"/>
    ///</summary>
    public static readonly Property bookEdition = new Property(new Uri("http://schema.org/bookEdition"));    

    ///<summary>
    ///The format of the book.
    ///<see cref="http://schema.org/bookFormat"/>
    ///</summary>
    public static readonly Property bookFormat = new Property(new Uri("http://schema.org/bookFormat"));    

    ///<summary>
    ///'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
    ///<see cref="http://schema.org/bookingAgent"/>
    ///</summary>
    public static readonly Property bookingAgent = new Property(new Uri("http://schema.org/bookingAgent"));    

    ///<summary>
    ///The date and time the reservation was booked.
    ///<see cref="http://schema.org/bookingTime"/>
    ///</summary>
    public static readonly Property bookingTime = new Property(new Uri("http://schema.org/bookingTime"));    

    ///<summary>
    ///A sub property of participant. The person that borrows the object being lent.
    ///<see cref="http://schema.org/borrower"/>
    ///</summary>
    public static readonly Property borrower = new Property(new Uri("http://schema.org/borrower"));    

    ///<summary>
    ///A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.
    ///<see cref="http://schema.org/box"/>
    ///</summary>
    public static readonly Property box = new Property(new Uri("http://schema.org/box"));    

    ///<summary>
    ///The branches that delineate from the nerve bundle. Not to be confused with <a class="localLink" href="http://schema.org/branchOf">branchOf</a>.
    ///<see cref="http://schema.org/branch"/>
    ///</summary>
    public static readonly Property branch = new Property(new Uri("http://schema.org/branch"));    

    ///<summary>
    ///A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>
    ///
    ///For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
    ///<see cref="http://schema.org/branchCode"/>
    ///</summary>
    public static readonly Property branchCode = new Property(new Uri("http://schema.org/branchCode"));    

    ///<summary>
    ///The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class="localLink" href="http://schema.org/branch">branch</a>.
    ///<see cref="http://schema.org/branchOf"/>
    ///</summary>
    public static readonly Property branchOf = new Property(new Uri("http://schema.org/branchOf"));    

    ///<summary>
    ///The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
    ///<see cref="http://schema.org/brand"/>
    ///</summary>
    public static readonly Property brand = new Property(new Uri("http://schema.org/brand"));    

    ///<summary>
    ///A set of links that can help a user understand and navigate a website hierarchy.
    ///<see cref="http://schema.org/breadcrumb"/>
    ///</summary>
    public static readonly Property breadcrumb = new Property(new Uri("http://schema.org/breadcrumb"));    

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.
    ///<see cref="http://schema.org/breastfeedingWarning"/>
    ///</summary>
    public static readonly Property breastfeedingWarning = new Property(new Uri("http://schema.org/breastfeedingWarning"));    

    ///<summary>
    ///The media network(s) whose content is broadcast on this station.
    ///<see cref="http://schema.org/broadcastAffiliateOf"/>
    ///</summary>
    public static readonly Property broadcastAffiliateOf = new Property(new Uri("http://schema.org/broadcastAffiliateOf"));    

    ///<summary>
    ///The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
    ///<see cref="http://schema.org/broadcastChannelId"/>
    ///</summary>
    public static readonly Property broadcastChannelId = new Property(new Uri("http://schema.org/broadcastChannelId"));    

    ///<summary>
    ///The name displayed in the channel guide. For many US affiliates, it is the network name.
    ///<see cref="http://schema.org/broadcastDisplayName"/>
    ///</summary>
    public static readonly Property broadcastDisplayName = new Property(new Uri("http://schema.org/broadcastDisplayName"));    

    ///<summary>
    ///The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
    ///<see cref="http://schema.org/broadcastFrequency"/>
    ///</summary>
    public static readonly Property broadcastFrequency = new Property(new Uri("http://schema.org/broadcastFrequency"));    

    ///<summary>
    ///The frequency in MHz for a particular broadcast.
    ///<see cref="http://schema.org/broadcastFrequencyValue"/>
    ///</summary>
    public static readonly Property broadcastFrequencyValue = new Property(new Uri("http://schema.org/broadcastFrequencyValue"));    

    ///<summary>
    ///The event being broadcast such as a sporting event or awards ceremony.
    ///<see cref="http://schema.org/broadcastOfEvent"/>
    ///</summary>
    public static readonly Property broadcastOfEvent = new Property(new Uri("http://schema.org/broadcastOfEvent"));    

    ///<summary>
    ///The type of service required to have access to the channel (e.g. Standard or Premium).
    ///<see cref="http://schema.org/broadcastServiceTier"/>
    ///</summary>
    public static readonly Property broadcastServiceTier = new Property(new Uri("http://schema.org/broadcastServiceTier"));    

    ///<summary>
    ///The modulation (e.g. FM, AM, etc) used by a particular broadcast service
    ///<see cref="http://schema.org/broadcastSignalModulation"/>
    ///</summary>
    public static readonly Property broadcastSignalModulation = new Property(new Uri("http://schema.org/broadcastSignalModulation"));    

    ///<summary>
    ///The subchannel used for the broadcast.
    ///<see cref="http://schema.org/broadcastSubChannel"/>
    ///</summary>
    public static readonly Property broadcastSubChannel = new Property(new Uri("http://schema.org/broadcastSubChannel"));    

    ///<summary>
    ///The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> for which the service bases its broadcasts
    ///<see cref="http://schema.org/broadcastTimezone"/>
    ///</summary>
    public static readonly Property broadcastTimezone = new Property(new Uri("http://schema.org/broadcastTimezone"));    

    ///<summary>
    ///The organization owning or operating the broadcast service.
    ///<see cref="http://schema.org/broadcaster"/>
    ///</summary>
    public static readonly Property broadcaster = new Property(new Uri("http://schema.org/broadcaster"));    

    ///<summary>
    ///Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.
    ///<see cref="http://schema.org/browserRequirements"/>
    ///</summary>
    public static readonly Property browserRequirements = new Property(new Uri("http://schema.org/browserRequirements"));    

    ///<summary>
    ///The name of the bus (e.g. Bolt Express).
    ///<see cref="http://schema.org/busName"/>
    ///</summary>
    public static readonly Property busName = new Property(new Uri("http://schema.org/busName"));    

    ///<summary>
    ///The unique identifier for the bus.
    ///<see cref="http://schema.org/busNumber"/>
    ///</summary>
    public static readonly Property busNumber = new Property(new Uri("http://schema.org/busNumber"));    

    ///<summary>
    ///The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
    ///<see cref="http://schema.org/businessFunction"/>
    ///</summary>
    public static readonly Property businessFunction = new Property(new Uri("http://schema.org/businessFunction"));    

    ///<summary>
    ///A sub property of participant. The participant/person/organization that bought the object.
    ///<see cref="http://schema.org/buyer"/>
    ///</summary>
    public static readonly Property buyer = new Property(new Uri("http://schema.org/buyer"));    

    ///<summary>
    ///The artist that performed this album or recording.
    ///<see cref="http://schema.org/byArtist"/>
    ///</summary>
    public static readonly Property byArtist = new Property(new Uri("http://schema.org/byArtist"));    

    ///<summary>
    ///Defines the day(s) of the week on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place
    ///<see cref="http://schema.org/byDay"/>
    ///</summary>
    public static readonly Property byDay = new Property(new Uri("http://schema.org/byDay"));    

    ///<summary>
    ///Defines the month(s) of the year on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place. Specified as an <a class="localLink" href="http://schema.org/Integer">Integer</a> between 1-12. January is 1.
    ///<see cref="http://schema.org/byMonth"/>
    ///</summary>
    public static readonly Property byMonth = new Property(new Uri("http://schema.org/byMonth"));    

    ///<summary>
    ///Defines the day(s) of the month on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place. Specified as an <a class="localLink" href="http://schema.org/Integer">Integer</a> between 1-31.
    ///<see cref="http://schema.org/byMonthDay"/>
    ///</summary>
    public static readonly Property byMonthDay = new Property(new Uri("http://schema.org/byMonthDay"));    

    ///<summary>
    ///The official callsign for the radio broadcast.
    ///<see cref="http://schema.org/callSign"/>
    ///</summary>
    public static readonly Property callSign = new Property(new Uri("http://schema.org/callSign"));    

    ///<summary>
    ///The number of calories.
    ///<see cref="http://schema.org/calories"/>
    ///</summary>
    public static readonly Property calories = new Property(new Uri("http://schema.org/calories"));    

    ///<summary>
    ///A sub property of object. The candidate subject of this action.
    ///<see cref="http://schema.org/candidate"/>
    ///</summary>
    public static readonly Property candidate = new Property(new Uri("http://schema.org/candidate"));    

    ///<summary>
    ///The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a>.
    ///<see cref="http://schema.org/caption"/>
    ///</summary>
    public static readonly Property caption = new Property(new Uri("http://schema.org/caption"));    

    ///<summary>
    ///The number of grams of carbohydrates.
    ///<see cref="http://schema.org/carbohydrateContent"/>
    ///</summary>
    public static readonly Property carbohydrateContent = new Property(new Uri("http://schema.org/carbohydrateContent"));    

    ///<summary>
    ///The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.<br/><br/>
    ///
    ///Typical unit code(s): LTR for liters, FTQ for cubic foot/feet<br/><br/>
    ///
    ///Note: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/cargoVolume"/>
    ///</summary>
    public static readonly Property cargoVolume = new Property(new Uri("http://schema.org/cargoVolume"));    

    ///<summary>
    ///'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
    ///<see cref="http://schema.org/carrier"/>
    ///</summary>
    public static readonly Property carrier = new Property(new Uri("http://schema.org/carrier"));    

    ///<summary>
    ///Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
    ///<see cref="http://schema.org/carrierRequirements"/>
    ///</summary>
    public static readonly Property carrierRequirements = new Property(new Uri("http://schema.org/carrierRequirements"));    

    ///<summary>
    ///A cardholder benefit that pays the cardholder a small percentage of their net expenditures.
    ///<see cref="http://schema.org/cashBack"/>
    ///</summary>
    public static readonly Property cashBack = new Property(new Uri("http://schema.org/cashBack"));    

    ///<summary>
    ///A data catalog which contains this dataset.
    ///<see cref="http://schema.org/catalog"/>
    ///</summary>
    public static readonly Property catalog = new Property(new Uri("http://schema.org/catalog"));    

    ///<summary>
    ///The catalog number for the release.
    ///<see cref="http://schema.org/catalogNumber"/>
    ///</summary>
    public static readonly Property catalogNumber = new Property(new Uri("http://schema.org/catalogNumber"));    

    ///<summary>
    ///A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
    ///<see cref="http://schema.org/category"/>
    ///</summary>
    public static readonly Property category = new Property(new Uri("http://schema.org/category"));    

    ///<summary>
    ///Specifying a cause of something in general. e.g in medicine , one of the causative agent(s) that are most directly responsible for the pathophysiologic process that eventually results in the occurrence.
    ///<see cref="http://schema.org/cause"/>
    ///</summary>
    public static readonly Property cause = new Property(new Uri("http://schema.org/cause"));    

    ///<summary>
    ///The condition, complication, symptom, sign, etc. caused.
    ///<see cref="http://schema.org/causeOf"/>
    ///</summary>
    public static readonly Property causeOf = new Property(new Uri("http://schema.org/causeOf"));    

    ///<summary>
    ///A sub property of recipient. The recipient copied on a message.
    ///<see cref="http://schema.org/ccRecipient"/>
    ///</summary>
    public static readonly Property ccRecipient = new Property(new Uri("http://schema.org/ccRecipient"));    

    ///<summary>
    ///Fictional person connected with a creative work.
    ///<see cref="http://schema.org/character"/>
    ///</summary>
    public static readonly Property character = new Property(new Uri("http://schema.org/character"));    

    ///<summary>
    ///A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
    ///<see cref="http://schema.org/characterAttribute"/>
    ///</summary>
    public static readonly Property characterAttribute = new Property(new Uri("http://schema.org/characterAttribute"));    

    ///<summary>
    ///The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
    ///<see cref="http://schema.org/characterName"/>
    ///</summary>
    public static readonly Property characterName = new Property(new Uri("http://schema.org/characterName"));    

    ///<summary>
    ///Cheat codes to the game.
    ///<see cref="http://schema.org/cheatCode"/>
    ///</summary>
    public static readonly Property cheatCode = new Property(new Uri("http://schema.org/cheatCode"));    

    ///<summary>
    ///The earliest someone may check into a lodging establishment.
    ///<see cref="http://schema.org/checkinTime"/>
    ///</summary>
    public static readonly Property checkinTime = new Property(new Uri("http://schema.org/checkinTime"));    

    ///<summary>
    ///The latest someone may check out of a lodging establishment.
    ///<see cref="http://schema.org/checkoutTime"/>
    ///</summary>
    public static readonly Property checkoutTime = new Property(new Uri("http://schema.org/checkoutTime"));    

    ///<summary>
    ///Maximal age of the child.
    ///<see cref="http://schema.org/childMaxAge"/>
    ///</summary>
    public static readonly Property childMaxAge = new Property(new Uri("http://schema.org/childMaxAge"));    

    ///<summary>
    ///Minimal age of the child.
    ///<see cref="http://schema.org/childMinAge"/>
    ///</summary>
    public static readonly Property childMinAge = new Property(new Uri("http://schema.org/childMinAge"));    

    ///<summary>
    ///A child of the person.
    ///<see cref="http://schema.org/children"/>
    ///</summary>
    public static readonly Property children = new Property(new Uri("http://schema.org/children"));    

    ///<summary>
    ///The number of milligrams of cholesterol.
    ///<see cref="http://schema.org/cholesterolContent"/>
    ///</summary>
    public static readonly Property cholesterolContent = new Property(new Uri("http://schema.org/cholesterolContent"));    

    ///<summary>
    ///A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
    ///<see cref="http://schema.org/circle"/>
    ///</summary>
    public static readonly Property circle = new Property(new Uri("http://schema.org/circle"));    

    ///<summary>
    ///A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
    ///<see cref="http://schema.org/citation"/>
    ///</summary>
    public static readonly Property citation = new Property(new Uri("http://schema.org/citation"));    

    ///<summary>
    ///A short summary of the specific claims reviewed in a ClaimReview.
    ///<see cref="http://schema.org/claimReviewed"/>
    ///</summary>
    public static readonly Property claimReviewed = new Property(new Uri("http://schema.org/claimReviewed"));    

    ///<summary>
    ///Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
    ///<see cref="http://schema.org/clincalPharmacology"/>
    ///</summary>
    public static readonly Property clincalPharmacology = new Property(new Uri("http://schema.org/clincalPharmacology"));    

    ///<summary>
    ///Position of the clip within an ordered group of clips.
    ///<see cref="http://schema.org/clipNumber"/>
    ///</summary>
    public static readonly Property clipNumber = new Property(new Uri("http://schema.org/clipNumber"));    

    ///<summary>
    ///The closing hour of the place or service on the given day(s) of the week.
    ///<see cref="http://schema.org/closes"/>
    ///</summary>
    public static readonly Property closes = new Property(new Uri("http://schema.org/closes"));    

    ///<summary>
    ///A person that acts in a coaching role for a sports team.
    ///<see cref="http://schema.org/coach"/>
    ///</summary>
    public static readonly Property coach = new Property(new Uri("http://schema.org/coach"));    

    ///<summary>
    ///A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
    ///<see cref="http://schema.org/code"/>
    ///</summary>
    public static readonly Property code = new Property(new Uri("http://schema.org/code"));    

    ///<summary>
    ///Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).
    ///<see cref="http://schema.org/codeRepository"/>
    ///</summary>
    public static readonly Property codeRepository = new Property(new Uri("http://schema.org/codeRepository"));    

    ///<summary>
    ///A short textual code that uniquely identifies the value.
    ///<see cref="http://schema.org/codeValue"/>
    ///</summary>
    public static readonly Property codeValue = new Property(new Uri("http://schema.org/codeValue"));    

    ///<summary>
    ///The coding system, e.g. 'ICD-10'.
    ///<see cref="http://schema.org/codingSystem"/>
    ///</summary>
    public static readonly Property codingSystem = new Property(new Uri("http://schema.org/codingSystem"));    

    ///<summary>
    ///A colleague of the person.
    ///<see cref="http://schema.org/colleagues"/>
    ///</summary>
    public static readonly Property colleagues = new Property(new Uri("http://schema.org/colleagues"));    

    ///<summary>
    ///A sub property of object. The collection target of the action.
    ///<see cref="http://schema.org/collection"/>
    ///</summary>
    public static readonly Property collection = new Property(new Uri("http://schema.org/collection"));    

    ///<summary>
    ///The number of items in the <a class="localLink" href="http://schema.org/Collection">Collection</a>.
    ///<see cref="http://schema.org/collectionSize"/>
    ///</summary>
    public static readonly Property collectionSize = new Property(new Uri("http://schema.org/collectionSize"));    

    ///<summary>
    ///The color of the product.
    ///<see cref="http://schema.org/color"/>
    ///</summary>
    public static readonly Property color = new Property(new Uri("http://schema.org/color"));    

    ///<summary>
    ///The individual who adds color to inked drawings.
    ///<see cref="http://schema.org/colorist"/>
    ///</summary>
    public static readonly Property colorist = new Property(new Uri("http://schema.org/colorist"));    

    ///<summary>
    ///Comments, typically from users.
    ///<see cref="http://schema.org/comment"/>
    ///</summary>
    public static readonly Property comment = new Property(new Uri("http://schema.org/comment"));    

    ///<summary>
    ///The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
    ///<see cref="http://schema.org/commentCount"/>
    ///</summary>
    public static readonly Property commentCount = new Property(new Uri("http://schema.org/commentCount"));    

    ///<summary>
    ///The text of the UserComment.
    ///<see cref="http://schema.org/commentText"/>
    ///</summary>
    public static readonly Property commentText = new Property(new Uri("http://schema.org/commentText"));    

    ///<summary>
    ///The time at which the UserComment was made.
    ///<see cref="http://schema.org/commentTime"/>
    ///</summary>
    public static readonly Property commentTime = new Property(new Uri("http://schema.org/commentTime"));    

    ///<summary>
    ///Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity.
    ///<see cref="http://schema.org/competencyRequired"/>
    ///</summary>
    public static readonly Property competencyRequired = new Property(new Uri("http://schema.org/competencyRequired"));    

    ///<summary>
    ///The person or organization who wrote a composition, or who is the composer of a work performed at some event.
    ///<see cref="http://schema.org/composer"/>
    ///</summary>
    public static readonly Property composer = new Property(new Uri("http://schema.org/composer"));    

    ///<summary>
    ///Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.
    ///<see cref="http://schema.org/comprisedOf"/>
    ///</summary>
    public static readonly Property comprisedOf = new Property(new Uri("http://schema.org/comprisedOf"));    

    ///<summary>
    ///Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an <a class="localLink" href="http://schema.org/ArchiveComponent">ArchiveComponent</a> held by an <a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a>. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.<br/><br/>
    ///
    ///For example "Available by appointment from the Reading Room" or "Accessible only from logged-in accounts ".
    ///<see cref="http://schema.org/conditionsOfAccess"/>
    ///</summary>
    public static readonly Property conditionsOfAccess = new Property(new Uri("http://schema.org/conditionsOfAccess"));    

    ///<summary>
    ///A number that confirms the given order or payment has been received.
    ///<see cref="http://schema.org/confirmationNumber"/>
    ///</summary>
    public static readonly Property confirmationNumber = new Property(new Uri("http://schema.org/confirmationNumber"));    

    ///<summary>
    ///Other anatomical structures to which this structure is connected.
    ///<see cref="http://schema.org/connectedTo"/>
    ///</summary>
    public static readonly Property connectedTo = new Property(new Uri("http://schema.org/connectedTo"));    

    ///<summary>
    ///Indicates a property used as a constraint to define a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> with respect to the set of entities
    ///  corresponding to an indicated type (via <a class="localLink" href="http://schema.org/populationType">populationType</a>).
    ///<see cref="http://schema.org/constrainingProperty"/>
    ///</summary>
    public static readonly Property constrainingProperty = new Property(new Uri("http://schema.org/constrainingProperty"));    

    ///<summary>
    ///An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).
    ///<see cref="http://schema.org/contactOption"/>
    ///</summary>
    public static readonly Property contactOption = new Property(new Uri("http://schema.org/contactOption"));    

    ///<summary>
    ///A contact point for a person or organization.
    ///<see cref="http://schema.org/contactPoints"/>
    ///</summary>
    public static readonly Property contactPoints = new Property(new Uri("http://schema.org/contactPoints"));    

    ///<summary>
    ///A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
    ///<see cref="http://schema.org/contactType"/>
    ///</summary>
    public static readonly Property contactType = new Property(new Uri("http://schema.org/contactType"));    

    ///<summary>
    ///A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.
    ///<see cref="http://schema.org/contactlessPayment"/>
    ///</summary>
    public static readonly Property contactlessPayment = new Property(new Uri("http://schema.org/contactlessPayment"));    

    ///<summary>
    ///The basic containment relation between a place and one that contains it.
    ///<see cref="http://schema.org/containedIn"/>
    ///</summary>
    public static readonly Property containedIn = new Property(new Uri("http://schema.org/containedIn"));    

    ///<summary>
    ///Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.
    ///<see cref="http://schema.org/contentRating"/>
    ///</summary>
    public static readonly Property contentRating = new Property(new Uri("http://schema.org/contentRating"));    

    ///<summary>
    ///The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
    ///<see cref="http://schema.org/contentReferenceTime"/>
    ///</summary>
    public static readonly Property contentReferenceTime = new Property(new Uri("http://schema.org/contentReferenceTime"));    

    ///<summary>
    ///File size in (mega/kilo) bytes.
    ///<see cref="http://schema.org/contentSize"/>
    ///</summary>
    public static readonly Property contentSize = new Property(new Uri("http://schema.org/contentSize"));    

    ///<summary>
    ///The supported content type(s) for an EntryPoint response.
    ///<see cref="http://schema.org/contentType"/>
    ///</summary>
    public static readonly Property contentType = new Property(new Uri("http://schema.org/contentType"));    

    ///<summary>
    ///Actual bytes of the media object, for example the image file or video file.
    ///<see cref="http://schema.org/contentUrl"/>
    ///</summary>
    public static readonly Property contentUrl = new Property(new Uri("http://schema.org/contentUrl"));    

    ///<summary>
    ///A contraindication for this therapy.
    ///<see cref="http://schema.org/contraindication"/>
    ///</summary>
    public static readonly Property contraindication = new Property(new Uri("http://schema.org/contraindication"));    

    ///<summary>
    ///A secondary contributor to the CreativeWork or Event.
    ///<see cref="http://schema.org/contributor"/>
    ///</summary>
    public static readonly Property contributor = new Property(new Uri("http://schema.org/contributor"));    

    ///<summary>
    ///The time it takes to actually cook the dish, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/cookTime"/>
    ///</summary>
    public static readonly Property cookTime = new Property(new Uri("http://schema.org/cookTime"));    

    ///<summary>
    ///The method of cooking, such as Frying, Steaming, ...
    ///<see cref="http://schema.org/cookingMethod"/>
    ///</summary>
    public static readonly Property cookingMethod = new Property(new Uri("http://schema.org/cookingMethod"));    

    ///<summary>
    ///The party holding the legal copyright to the CreativeWork.
    ///<see cref="http://schema.org/copyrightHolder"/>
    ///</summary>
    public static readonly Property copyrightHolder = new Property(new Uri("http://schema.org/copyrightHolder"));    

    ///<summary>
    ///The year during which the claimed copyright for the CreativeWork was first asserted.
    ///<see cref="http://schema.org/copyrightYear"/>
    ///</summary>
    public static readonly Property copyrightYear = new Property(new Uri("http://schema.org/copyrightYear"));    

    ///<summary>
    ///Indicates a correction to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>, either via a <a class="localLink" href="http://schema.org/CorrectionComment">CorrectionComment</a>, textually or in another document.
    ///<see cref="http://schema.org/correction"/>
    ///</summary>
    public static readonly Property correction = new Property(new Uri("http://schema.org/correction"));    

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (e.g. <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
    ///<see cref="http://schema.org/correctionsPolicy"/>
    ///</summary>
    public static readonly Property correctionsPolicy = new Property(new Uri("http://schema.org/correctionsPolicy"));    

    ///<summary>
    ///Cost per unit of the drug, as reported by the source being tagged.
    ///<see cref="http://schema.org/cost"/>
    ///</summary>
    public static readonly Property cost = new Property(new Uri("http://schema.org/cost"));    

    ///<summary>
    ///The category of cost, such as wholesale, retail, reimbursement cap, etc.
    ///<see cref="http://schema.org/costCategory"/>
    ///</summary>
    public static readonly Property costCategory = new Property(new Uri("http://schema.org/costCategory"));    

    ///<summary>
    ///The currency (in 3-letter of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217
    ///<see cref="http://schema.org/costCurrency"/>
    ///</summary>
    public static readonly Property costCurrency = new Property(new Uri("http://schema.org/costCurrency"));    

    ///<summary>
    ///Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.
    ///<see cref="http://schema.org/costOrigin"/>
    ///</summary>
    public static readonly Property costOrigin = new Property(new Uri("http://schema.org/costOrigin"));    

    ///<summary>
    ///The cost per unit of the drug.
    ///<see cref="http://schema.org/costPerUnit"/>
    ///</summary>
    public static readonly Property costPerUnit = new Property(new Uri("http://schema.org/costPerUnit"));    

    ///<summary>
    ///Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    ///<see cref="http://schema.org/countriesNotSupported"/>
    ///</summary>
    public static readonly Property countriesNotSupported = new Property(new Uri("http://schema.org/countriesNotSupported"));    

    ///<summary>
    ///Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    ///<see cref="http://schema.org/countriesSupported"/>
    ///</summary>
    public static readonly Property countriesSupported = new Property(new Uri("http://schema.org/countriesSupported"));    

    ///<summary>
    ///The country of the principal offices of the production company or individual responsible for the movie or program.
    ///<see cref="http://schema.org/countryOfOrigin"/>
    ///</summary>
    public static readonly Property countryOfOrigin = new Property(new Uri("http://schema.org/countryOfOrigin"));    

    ///<summary>
    ///A sub property of location. The course where this action was taken.
    ///<see cref="http://schema.org/course"/>
    ///</summary>
    public static readonly Property course = new Property(new Uri("http://schema.org/course"));    

    ///<summary>
    ///The identifier for the <a class="localLink" href="http://schema.org/Course">Course</a> used by the course <a class="localLink" href="http://schema.org/provider">provider</a> (e.g. CS101 or 6.001).
    ///<see cref="http://schema.org/courseCode"/>
    ///</summary>
    public static readonly Property courseCode = new Property(new Uri("http://schema.org/courseCode"));    

    ///<summary>
    ///The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
    ///<see cref="http://schema.org/courseMode"/>
    ///</summary>
    public static readonly Property courseMode = new Property(new Uri("http://schema.org/courseMode"));    

    ///<summary>
    ///Requirements for taking the Course. May be completion of another <a class="localLink" href="http://schema.org/Course">Course</a> or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using <a class="localLink" href="http://schema.org/AlignmentObject">AlignmentObject</a>.
    ///<see cref="http://schema.org/coursePrerequisites"/>
    ///</summary>
    public static readonly Property coursePrerequisites = new Property(new Uri("http://schema.org/coursePrerequisites"));    

    ///<summary>
    ///The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, "2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week".
    ///<see cref="http://schema.org/courseWorkload"/>
    ///</summary>
    public static readonly Property courseWorkload = new Property(new Uri("http://schema.org/courseWorkload"));    

    ///<summary>
    ///The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
    ///<see cref="http://schema.org/coverageEndTime"/>
    ///</summary>
    public static readonly Property coverageEndTime = new Property(new Uri("http://schema.org/coverageEndTime"));    

    ///<summary>
    ///The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
    ///<see cref="http://schema.org/coverageStartTime"/>
    ///</summary>
    public static readonly Property coverageStartTime = new Property(new Uri("http://schema.org/coverageStartTime"));    

    ///<summary>
    ///The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.
    ///<see cref="http://schema.org/creativeWorkStatus"/>
    ///</summary>
    public static readonly Property creativeWorkStatus = new Property(new Uri("http://schema.org/creativeWorkStatus"));    

    ///<summary>
    ///The category or type of credential being described, for example "degree”, “certificate”, “badge”, or more specific term.
    ///<see cref="http://schema.org/credentialCategory"/>
    ///</summary>
    public static readonly Property credentialCategory = new Property(new Uri("http://schema.org/credentialCategory"));    

    ///<summary>
    ///The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.
    ///<see cref="http://schema.org/creditedTo"/>
    ///</summary>
    public static readonly Property creditedTo = new Property(new Uri("http://schema.org/creditedTo"));    

    ///<summary>
    ///A CSS selector, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
    ///<see cref="http://schema.org/cssSelector"/>
    ///</summary>
    public static readonly Property cssSelector = new Property(new Uri("http://schema.org/cssSelector"));    

    ///<summary>
    ///The currency accepted.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/currenciesAccepted"/>
    ///</summary>
    public static readonly Property currenciesAccepted = new Property(new Uri("http://schema.org/currenciesAccepted"));    

    ///<summary>
    ///The currency in which the monetary amount is expressed.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/currency"/>
    ///</summary>
    public static readonly Property currency = new Property(new Uri("http://schema.org/currency"));    

    ///<summary>
    ///The current price of a currency.
    ///<see cref="http://schema.org/currentExchangeRate"/>
    ///</summary>
    public static readonly Property currentExchangeRate = new Property(new Uri("http://schema.org/currentExchangeRate"));    

    ///<summary>
    ///Party placing the order or paying the invoice.
    ///<see cref="http://schema.org/customer"/>
    ///</summary>
    public static readonly Property customer = new Property(new Uri("http://schema.org/customer"));    

    ///<summary>
    ///An item within in a data feed. Data feeds may have many elements.
    ///<see cref="http://schema.org/dataFeedElement"/>
    ///</summary>
    public static readonly Property dataFeedElement = new Property(new Uri("http://schema.org/dataFeedElement"));    

    ///<summary>
    ///The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
    ///<see cref="http://schema.org/datasetTimeInterval"/>
    ///</summary>
    public static readonly Property datasetTimeInterval = new Property(new Uri("http://schema.org/datasetTimeInterval"));    

    ///<summary>
    ///The datetime the item was removed from the DataFeed.
    ///<see cref="http://schema.org/dateDeleted"/>
    ///</summary>
    public static readonly Property dateDeleted = new Property(new Uri("http://schema.org/dateDeleted"));    

    ///<summary>
    ///The date the ticket was issued.
    ///<see cref="http://schema.org/dateIssued"/>
    ///</summary>
    public static readonly Property dateIssued = new Property(new Uri("http://schema.org/dateIssued"));    

    ///<summary>
    ///The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
    ///<see cref="http://schema.org/dateModified"/>
    ///</summary>
    public static readonly Property dateModified = new Property(new Uri("http://schema.org/dateModified"));    

    ///<summary>
    ///Publication date for the job posting.
    ///<see cref="http://schema.org/datePosted"/>
    ///</summary>
    public static readonly Property datePosted = new Property(new Uri("http://schema.org/datePosted"));    

    ///<summary>
    ///Date of first broadcast/publication.
    ///<see cref="http://schema.org/datePublished"/>
    ///</summary>
    public static readonly Property datePublished = new Property(new Uri("http://schema.org/datePublished"));    

    ///<summary>
    ///The date/time at which the message has been read by the recipient if a single recipient exists.
    ///<see cref="http://schema.org/dateRead"/>
    ///</summary>
    public static readonly Property dateRead = new Property(new Uri("http://schema.org/dateRead"));    

    ///<summary>
    ///The date/time the message was received if a single recipient exists.
    ///<see cref="http://schema.org/dateReceived"/>
    ///</summary>
    public static readonly Property dateReceived = new Property(new Uri("http://schema.org/dateReceived"));    

    ///<summary>
    ///The date/time at which the message was sent.
    ///<see cref="http://schema.org/dateSent"/>
    ///</summary>
    public static readonly Property dateSent = new Property(new Uri("http://schema.org/dateSent"));    

    ///<summary>
    ///The date of the first registration of the vehicle with the respective public authorities.
    ///<see cref="http://schema.org/dateVehicleFirstRegistered"/>
    ///</summary>
    public static readonly Property dateVehicleFirstRegistered = new Property(new Uri("http://schema.org/dateVehicleFirstRegistered"));    

    ///<summary>
    ///A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>
    ///
    ///Structured representations of dateline-related information can also be expressed more explicitly using <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>
    ///
    ///Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
    ///<see cref="http://schema.org/dateline"/>
    ///</summary>
    public static readonly Property dateline = new Property(new Uri("http://schema.org/dateline"));    

    ///<summary>
    ///The day of the week for which these opening hours are valid.
    ///<see cref="http://schema.org/dayOfWeek"/>
    ///</summary>
    public static readonly Property dayOfWeek = new Property(new Uri("http://schema.org/dayOfWeek"));    

    ///<summary>
    ///Date of death.
    ///<see cref="http://schema.org/deathDate"/>
    ///</summary>
    public static readonly Property deathDate = new Property(new Uri("http://schema.org/deathDate"));    

    ///<summary>
    ///The place where the person died.
    ///<see cref="http://schema.org/deathPlace"/>
    ///</summary>
    public static readonly Property deathPlace = new Property(new Uri("http://schema.org/deathPlace"));    

    ///<summary>
    ///The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
    ///<see cref="http://schema.org/defaultValue"/>
    ///</summary>
    public static readonly Property defaultValue = new Property(new Uri("http://schema.org/defaultValue"));    

    ///<summary>
    ///Destination address.
    ///<see cref="http://schema.org/deliveryAddress"/>
    ///</summary>
    public static readonly Property deliveryAddress = new Property(new Uri("http://schema.org/deliveryAddress"));    

    ///<summary>
    ///The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
    ///<see cref="http://schema.org/deliveryLeadTime"/>
    ///</summary>
    public static readonly Property deliveryLeadTime = new Property(new Uri("http://schema.org/deliveryLeadTime"));    

    ///<summary>
    ///A sub property of instrument. The method of delivery.
    ///<see cref="http://schema.org/deliveryMethod"/>
    ///</summary>
    public static readonly Property deliveryMethod = new Property(new Uri("http://schema.org/deliveryMethod"));    

    ///<summary>
    ///New entry added as the package passes through each leg of its journey (from shipment to final delivery).
    ///<see cref="http://schema.org/deliveryStatus"/>
    ///</summary>
    public static readonly Property deliveryStatus = new Property(new Uri("http://schema.org/deliveryStatus"));    

    ///<summary>
    ///A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
    ///<see cref="http://schema.org/department"/>
    ///</summary>
    public static readonly Property department = new Property(new Uri("http://schema.org/department"));    

    ///<summary>
    ///The airport where the flight originates.
    ///<see cref="http://schema.org/departureAirport"/>
    ///</summary>
    public static readonly Property departureAirport = new Property(new Uri("http://schema.org/departureAirport"));    

    ///<summary>
    ///The stop or station from which the bus departs.
    ///<see cref="http://schema.org/departureBusStop"/>
    ///</summary>
    public static readonly Property departureBusStop = new Property(new Uri("http://schema.org/departureBusStop"));    

    ///<summary>
    ///Identifier of the flight's departure gate.
    ///<see cref="http://schema.org/departureGate"/>
    ///</summary>
    public static readonly Property departureGate = new Property(new Uri("http://schema.org/departureGate"));    

    ///<summary>
    ///The platform from which the train departs.
    ///<see cref="http://schema.org/departurePlatform"/>
    ///</summary>
    public static readonly Property departurePlatform = new Property(new Uri("http://schema.org/departurePlatform"));    

    ///<summary>
    ///The station from which the train departs.
    ///<see cref="http://schema.org/departureStation"/>
    ///</summary>
    public static readonly Property departureStation = new Property(new Uri("http://schema.org/departureStation"));    

    ///<summary>
    ///Identifier of the flight's departure terminal.
    ///<see cref="http://schema.org/departureTerminal"/>
    ///</summary>
    public static readonly Property departureTerminal = new Property(new Uri("http://schema.org/departureTerminal"));    

    ///<summary>
    ///The expected departure time.
    ///<see cref="http://schema.org/departureTime"/>
    ///</summary>
    public static readonly Property departureTime = new Property(new Uri("http://schema.org/departureTime"));    

    ///<summary>
    ///Prerequisites needed to fulfill steps in article.
    ///<see cref="http://schema.org/dependencies"/>
    ///</summary>
    public static readonly Property dependencies = new Property(new Uri("http://schema.org/dependencies"));    

    ///<summary>
    ///The depth of the item.
    ///<see cref="http://schema.org/depth"/>
    ///</summary>
    public static readonly Property depth = new Property(new Uri("http://schema.org/depth"));    

    ///<summary>
    ///Device required to run the application. Used in cases where a specific make/model is required to run the application.
    ///<see cref="http://schema.org/device"/>
    ///</summary>
    public static readonly Property device = new Property(new Uri("http://schema.org/device"));    

    ///<summary>
    ///One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
    ///<see cref="http://schema.org/diagnosis"/>
    ///</summary>
    public static readonly Property diagnosis = new Property(new Uri("http://schema.org/diagnosis"));    

    ///<summary>
    ///An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.
    ///<see cref="http://schema.org/diagram"/>
    ///</summary>
    public static readonly Property diagram = new Property(new Uri("http://schema.org/diagram"));    

    ///<summary>
    ///A sub property of instrument. The diet used in this action.
    ///<see cref="http://schema.org/diet"/>
    ///</summary>
    public static readonly Property diet = new Property(new Uri("http://schema.org/diet"));    

    ///<summary>
    ///Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.
    ///<see cref="http://schema.org/dietFeatures"/>
    ///</summary>
    public static readonly Property dietFeatures = new Property(new Uri("http://schema.org/dietFeatures"));    

    ///<summary>
    ///One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.
    ///<see cref="http://schema.org/differentialDiagnosis"/>
    ///</summary>
    public static readonly Property differentialDiagnosis = new Property(new Uri("http://schema.org/differentialDiagnosis"));    

    ///<summary>
    ///A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/directors"/>
    ///</summary>
    public static readonly Property directors = new Property(new Uri("http://schema.org/directors"));    

    ///<summary>
    ///A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
    ///<see cref="http://schema.org/disambiguatingDescription"/>
    ///</summary>
    public static readonly Property disambiguatingDescription = new Property(new Uri("http://schema.org/disambiguatingDescription"));    

    ///<summary>
    ///Any discount applied (to an Order).
    ///<see cref="http://schema.org/discount"/>
    ///</summary>
    public static readonly Property discount = new Property(new Uri("http://schema.org/discount"));    

    ///<summary>
    ///Code used to redeem a discount.
    ///<see cref="http://schema.org/discountCode"/>
    ///</summary>
    public static readonly Property discountCode = new Property(new Uri("http://schema.org/discountCode"));    

    ///<summary>
    ///The currency of the discount.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/discountCurrency"/>
    ///</summary>
    public static readonly Property discountCurrency = new Property(new Uri("http://schema.org/discountCurrency"));    

    ///<summary>
    ///Specifies the CreativeWork associated with the UserComment.
    ///<see cref="http://schema.org/discusses"/>
    ///</summary>
    public static readonly Property discusses = new Property(new Uri("http://schema.org/discusses"));    

    ///<summary>
    ///A link to the page containing the comments of the CreativeWork.
    ///<see cref="http://schema.org/discussionUrl"/>
    ///</summary>
    public static readonly Property discussionUrl = new Property(new Uri("http://schema.org/discussionUrl"));    

    ///<summary>
    ///The date that this organization was dissolved.
    ///<see cref="http://schema.org/dissolutionDate"/>
    ///</summary>
    public static readonly Property dissolutionDate = new Property(new Uri("http://schema.org/dissolutionDate"));    

    ///<summary>
    ///The distance travelled, e.g. exercising or travelling.
    ///<see cref="http://schema.org/distance"/>
    ///</summary>
    public static readonly Property distance = new Property(new Uri("http://schema.org/distance"));    

    ///<summary>
    ///One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.
    ///<see cref="http://schema.org/distinguishingSign"/>
    ///</summary>
    public static readonly Property distinguishingSign = new Property(new Uri("http://schema.org/distinguishingSign"));    

    ///<summary>
    ///A downloadable form of this dataset, at a specific location, in a specific format.
    ///<see cref="http://schema.org/distribution"/>
    ///</summary>
    public static readonly Property distribution = new Property(new Uri("http://schema.org/distribution"));    

    ///<summary>
    ///Statement on diversity policy by an <a class="localLink" href="http://schema.org/Organization">Organization</a> e.g. a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>. For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
    ///<see cref="http://schema.org/diversityPolicy"/>
    ///</summary>
    public static readonly Property diversityPolicy = new Property(new Uri("http://schema.org/diversityPolicy"));    

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (often but not necessarily a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
    ///<see cref="http://schema.org/diversityStaffingReport"/>
    ///</summary>
    public static readonly Property diversityStaffingReport = new Property(new Uri("http://schema.org/diversityStaffingReport"));    

    ///<summary>
    ///Further documentation describing the Web API in more detail.
    ///<see cref="http://schema.org/documentation"/>
    ///</summary>
    public static readonly Property documentation = new Property(new Uri("http://schema.org/documentation"));    

    ///<summary>
    ///Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
    ///<see cref="http://schema.org/domainIncludes"/>
    ///</summary>
    public static readonly Property domainIncludes = new Property(new Uri("http://schema.org/domainIncludes"));    

    ///<summary>
    ///Whether borrower is a resident of the jurisdiction where the property is located.
    ///<see cref="http://schema.org/domiciledMortgage"/>
    ///</summary>
    public static readonly Property domiciledMortgage = new Property(new Uri("http://schema.org/domiciledMortgage"));    

    ///<summary>
    ///The time admission will commence.
    ///<see cref="http://schema.org/doorTime"/>
    ///</summary>
    public static readonly Property doorTime = new Property(new Uri("http://schema.org/doorTime"));    

    ///<summary>
    ///A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.
    ///<see cref="http://schema.org/dosageForm"/>
    ///</summary>
    public static readonly Property dosageForm = new Property(new Uri("http://schema.org/dosageForm"));    

    ///<summary>
    ///A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.
    ///<see cref="http://schema.org/doseSchedule"/>
    ///</summary>
    public static readonly Property doseSchedule = new Property(new Uri("http://schema.org/doseSchedule"));    

    ///<summary>
    ///The unit of the dose, e.g. 'mg'.
    ///<see cref="http://schema.org/doseUnit"/>
    ///</summary>
    public static readonly Property doseUnit = new Property(new Uri("http://schema.org/doseUnit"));    

    ///<summary>
    ///The value of the dose, e.g. 500.
    ///<see cref="http://schema.org/doseValue"/>
    ///</summary>
    public static readonly Property doseValue = new Property(new Uri("http://schema.org/doseValue"));    

    ///<summary>
    ///a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.
    ///<see cref="http://schema.org/downPayment"/>
    ///</summary>
    public static readonly Property downPayment = new Property(new Uri("http://schema.org/downPayment"));    

    ///<summary>
    ///If the file can be downloaded, URL to download the binary.
    ///<see cref="http://schema.org/downloadUrl"/>
    ///</summary>
    public static readonly Property downloadUrl = new Property(new Uri("http://schema.org/downloadUrl"));    

    ///<summary>
    ///The number of downvotes this question, answer or comment has received from the community.
    ///<see cref="http://schema.org/downvoteCount"/>
    ///</summary>
    public static readonly Property downvoteCount = new Property(new Uri("http://schema.org/downvoteCount"));    

    ///<summary>
    ///The vasculature that the vein drains into.
    ///<see cref="http://schema.org/drainsTo"/>
    ///</summary>
    public static readonly Property drainsTo = new Property(new Uri("http://schema.org/drainsTo"));    

    ///<summary>
    ///The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
    ///<see cref="http://schema.org/driveWheelConfiguration"/>
    ///</summary>
    public static readonly Property driveWheelConfiguration = new Property(new Uri("http://schema.org/driveWheelConfiguration"));    

    ///<summary>
    ///Where a rental car can be dropped off.
    ///<see cref="http://schema.org/dropoffLocation"/>
    ///</summary>
    public static readonly Property dropoffLocation = new Property(new Uri("http://schema.org/dropoffLocation"));    

    ///<summary>
    ///When a rental car can be dropped off.
    ///<see cref="http://schema.org/dropoffTime"/>
    ///</summary>
    public static readonly Property dropoffTime = new Property(new Uri("http://schema.org/dropoffTime"));    

    ///<summary>
    ///Specifying a drug or medicine used in a medication procedure
    ///<see cref="http://schema.org/drug"/>
    ///</summary>
    public static readonly Property drug = new Property(new Uri("http://schema.org/drug"));    

    ///<summary>
    ///The class of drug this belongs to (e.g., statins).
    ///<see cref="http://schema.org/drugClass"/>
    ///</summary>
    public static readonly Property drugClass = new Property(new Uri("http://schema.org/drugClass"));    

    ///<summary>
    ///The unit in which the drug is measured, e.g. '5 mg tablet'.
    ///<see cref="http://schema.org/drugUnit"/>
    ///</summary>
    public static readonly Property drugUnit = new Property(new Uri("http://schema.org/drugUnit"));    

    ///<summary>
    ///The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.
    ///<see cref="http://schema.org/duns"/>
    ///</summary>
    public static readonly Property duns = new Property(new Uri("http://schema.org/duns"));    

    ///<summary>
    ///A therapy that duplicates or overlaps this one.
    ///<see cref="http://schema.org/duplicateTherapy"/>
    ///</summary>
    public static readonly Property duplicateTherapy = new Property(new Uri("http://schema.org/duplicateTherapy"));    

    ///<summary>
    ///The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
    ///<see cref="http://schema.org/durationOfWarranty"/>
    ///</summary>
    public static readonly Property durationOfWarranty = new Property(new Uri("http://schema.org/durationOfWarranty"));    

    ///<summary>
    ///A media object representing the circumstances while performing this direction.
    ///<see cref="http://schema.org/duringMedia"/>
    ///</summary>
    public static readonly Property duringMedia = new Property(new Uri("http://schema.org/duringMedia"));    

    ///<summary>
    ///The amount to be paid as a penalty in the event of early payment of the loan.
    ///<see cref="http://schema.org/earlyPrepaymentPenalty"/>
    ///</summary>
    public static readonly Property earlyPrepaymentPenalty = new Property(new Uri("http://schema.org/earlyPrepaymentPenalty"));    

    ///<summary>
    ///Specifies the Person who edited the CreativeWork.
    ///<see cref="http://schema.org/editor"/>
    ///</summary>
    public static readonly Property editor = new Property(new Uri("http://schema.org/editor"));    

    ///<summary>
    ///Educational background needed for the position or Occupation.
    ///<see cref="http://schema.org/educationRequirements"/>
    ///</summary>
    public static readonly Property educationRequirements = new Property(new Uri("http://schema.org/educationRequirements"));    

    ///<summary>
    ///An alignment to an established educational framework.
    ///<see cref="http://schema.org/educationalAlignment"/>
    ///</summary>
    public static readonly Property educationalAlignment = new Property(new Uri("http://schema.org/educationalAlignment"));    

    ///<summary>
    ///A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.
    ///<see cref="http://schema.org/educationalCredentialAwarded"/>
    ///</summary>
    public static readonly Property educationalCredentialAwarded = new Property(new Uri("http://schema.org/educationalCredentialAwarded"));    

    ///<summary>
    ///The framework to which the resource being described is aligned.
    ///<see cref="http://schema.org/educationalFramework"/>
    ///</summary>
    public static readonly Property educationalFramework = new Property(new Uri("http://schema.org/educationalFramework"));    

    ///<summary>
    ///The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.
    ///<see cref="http://schema.org/educationalLevel"/>
    ///</summary>
    public static readonly Property educationalLevel = new Property(new Uri("http://schema.org/educationalLevel"));    

    ///<summary>
    ///An educationalRole of an EducationalAudience.
    ///<see cref="http://schema.org/educationalRole"/>
    ///</summary>
    public static readonly Property educationalRole = new Property(new Uri("http://schema.org/educationalRole"));    

    ///<summary>
    ///The purpose of a work in the context of education; for example, 'assignment', 'group work'.
    ///<see cref="http://schema.org/educationalUse"/>
    ///</summary>
    public static readonly Property educationalUse = new Property(new Uri("http://schema.org/educationalUse"));    

    ///<summary>
    ///The elevation of a location (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.
    ///<see cref="http://schema.org/elevation"/>
    ///</summary>
    public static readonly Property elevation = new Property(new Uri("http://schema.org/elevation"));    

    ///<summary>
    ///The type(s) of customers for which the given offer is valid.
    ///<see cref="http://schema.org/eligibleCustomerType"/>
    ///</summary>
    public static readonly Property eligibleCustomerType = new Property(new Uri("http://schema.org/eligibleCustomerType"));    

    ///<summary>
    ///The duration for which the given offer is valid.
    ///<see cref="http://schema.org/eligibleDuration"/>
    ///</summary>
    public static readonly Property eligibleDuration = new Property(new Uri("http://schema.org/eligibleDuration"));    

    ///<summary>
    ///The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
    ///<see cref="http://schema.org/eligibleQuantity"/>
    ///</summary>
    public static readonly Property eligibleQuantity = new Property(new Uri("http://schema.org/eligibleQuantity"));    

    ///<summary>
    ///The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>
    ///
    ///See also <a class="localLink" href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
    ///<see cref="http://schema.org/eligibleRegion"/>
    ///</summary>
    public static readonly Property eligibleRegion = new Property(new Uri("http://schema.org/eligibleRegion"));    

    ///<summary>
    ///The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
    ///<see cref="http://schema.org/eligibleTransactionVolume"/>
    ///</summary>
    public static readonly Property eligibleTransactionVolume = new Property(new Uri("http://schema.org/eligibleTransactionVolume"));    

    ///<summary>
    ///Email address.
    ///<see cref="http://schema.org/email"/>
    ///</summary>
    public static readonly Property email = new Property(new Uri("http://schema.org/email"));    

    ///<summary>
    ///A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.
    ///<see cref="http://schema.org/embedUrl"/>
    ///</summary>
    public static readonly Property embedUrl = new Property(new Uri("http://schema.org/embedUrl"));    

    ///<summary>
    ///The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put "g/km" into the unitText property of that value, since there is no UN/CEFACT Common Code for "g/km".
    ///<see cref="http://schema.org/emissionsCO2"/>
    ///</summary>
    public static readonly Property emissionsCO2 = new Property(new Uri("http://schema.org/emissionsCO2"));    

    ///<summary>
    ///People working for this organization.
    ///<see cref="http://schema.org/employees"/>
    ///</summary>
    public static readonly Property employees = new Property(new Uri("http://schema.org/employees"));    

    ///<summary>
    ///Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
    ///<see cref="http://schema.org/employmentType"/>
    ///</summary>
    public static readonly Property employmentType = new Property(new Uri("http://schema.org/employmentType"));    

    ///<summary>
    ///The supported encoding type(s) for an EntryPoint request.
    ///<see cref="http://schema.org/encodingType"/>
    ///</summary>
    public static readonly Property encodingType = new Property(new Uri("http://schema.org/encodingType"));    

    ///<summary>
    ///A media object that encodes this CreativeWork.
    ///<see cref="http://schema.org/encodings"/>
    ///</summary>
    public static readonly Property encodings = new Property(new Uri("http://schema.org/encodings"));    

    ///<summary>
    ///The end date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
    ///<see cref="http://schema.org/endDate"/>
    ///</summary>
    public static readonly Property endDate = new Property(new Uri("http://schema.org/endDate"));    

    ///<summary>
    ///The end time of the clip expressed as the number of seconds from the beginning of the work.
    ///<see cref="http://schema.org/endOffset"/>
    ///</summary>
    public static readonly Property endOffset = new Property(new Uri("http://schema.org/endOffset"));    

    ///<summary>
    ///The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>
    ///
    ///Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    ///<see cref="http://schema.org/endTime"/>
    ///</summary>
    public static readonly Property endTime = new Property(new Uri("http://schema.org/endTime"));    

    ///<summary>
    ///A sub property of participant. The person/organization being supported.
    ///<see cref="http://schema.org/endorsee"/>
    ///</summary>
    public static readonly Property endorsee = new Property(new Uri("http://schema.org/endorsee"));    

    ///<summary>
    ///People or organizations that endorse the plan.
    ///<see cref="http://schema.org/endorsers"/>
    ///</summary>
    public static readonly Property endorsers = new Property(new Uri("http://schema.org/endorsers"));    

    ///<summary>
    ///The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. <br/><br/>
    ///
    ///Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches
    ///* Note 1: You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.
    ///* Note 2: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/engineDisplacement"/>
    ///</summary>
    public static readonly Property engineDisplacement = new Property(new Uri("http://schema.org/engineDisplacement"));    

    ///<summary>
    ///The power of the vehicle's engine.
    ///    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are many different ways of measuring an engine's power. For an overview, see  <a href="http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes">http://en.wikipedia.org/wiki/Horsepower#Engine<em>power</em>test_codes</a>.</li>
    ///<li>Note 2: You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.</li>
    ///<li>Note 3: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/enginePower"/>
    ///</summary>
    public static readonly Property enginePower = new Property(new Uri("http://schema.org/enginePower"));    

    ///<summary>
    ///The type of engine or engines powering the vehicle.
    ///<see cref="http://schema.org/engineType"/>
    ///</summary>
    public static readonly Property engineType = new Property(new Uri("http://schema.org/engineType"));    

    ///<summary>
    ///A sub property of location. The entertainment business where the action occurred.
    ///<see cref="http://schema.org/entertainmentBusiness"/>
    ///</summary>
    public static readonly Property entertainmentBusiness = new Property(new Uri("http://schema.org/entertainmentBusiness"));    

    ///<summary>
    ///The characteristics of associated patients, such as age, gender, race etc.
    ///<see cref="http://schema.org/epidemiology"/>
    ///</summary>
    public static readonly Property epidemiology = new Property(new Uri("http://schema.org/epidemiology"));    

    ///<summary>
    ///Position of the episode within an ordered group of episodes.
    ///<see cref="http://schema.org/episodeNumber"/>
    ///</summary>
    public static readonly Property episodeNumber = new Property(new Uri("http://schema.org/episodeNumber"));    

    ///<summary>
    ///An episode of a TV/radio series or season.
    ///<see cref="http://schema.org/episodes"/>
    ///</summary>
    public static readonly Property episodes = new Property(new Uri("http://schema.org/episodes"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is equal to the object.
    ///<see cref="http://schema.org/equal"/>
    ///</summary>
    public static readonly Property equal = new Property(new Uri("http://schema.org/equal"));    

    ///<summary>
    ///For failed actions, more information on the cause of the failure.
    ///<see cref="http://schema.org/error"/>
    ///</summary>
    public static readonly Property error = new Property(new Uri("http://schema.org/error"));    

    ///<summary>
    ///The estimated cost of the supply or supplies consumed when performing instructions.
    ///<see cref="http://schema.org/estimatedCost"/>
    ///</summary>
    public static readonly Property estimatedCost = new Property(new Uri("http://schema.org/estimatedCost"));    

    ///<summary>
    ///The estimated time the flight will take.
    ///<see cref="http://schema.org/estimatedFlightDuration"/>
    ///</summary>
    public static readonly Property estimatedFlightDuration = new Property(new Uri("http://schema.org/estimatedFlightDuration"));    

    ///<summary>
    ///An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
    ///<see cref="http://schema.org/estimatedSalary"/>
    ///</summary>
    public static readonly Property estimatedSalary = new Property(new Uri("http://schema.org/estimatedSalary"));    

    ///<summary>
    ///The condition, complication, or symptom whose risk is being estimated.
    ///<see cref="http://schema.org/estimatesRiskOf"/>
    ///</summary>
    public static readonly Property estimatesRiskOf = new Property(new Uri("http://schema.org/estimatesRiskOf"));    

    ///<summary>
    ///Statement about ethics policy, e.g. of a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> regarding journalistic and publishing practices, or of a <a class="localLink" href="http://schema.org/Restaurant">Restaurant</a>, a page describing food source policies. In the case of a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
    ///<see cref="http://schema.org/ethicsPolicy"/>
    ///</summary>
    public static readonly Property ethicsPolicy = new Property(new Uri("http://schema.org/ethicsPolicy"));    

    ///<summary>
    ///Associates an <a class="localLink" href="http://schema.org/Event">Event</a> with a <a class="localLink" href="http://schema.org/Schedule">Schedule</a>. There are circumstances where it is preferable to share a schedule for a series of
    ///      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
    ///      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An <a class="localLink" href="http://schema.org/Event">Event</a> that
    ///      is associated with a <a class="localLink" href="http://schema.org/Schedule">Schedule</a> using this property should not have <a class="localLink" href="http://schema.org/startDate">startDate</a> or <a class="localLink" href="http://schema.org/endDate">endDate</a> properties. These are instead defined within the associated
    ///      <a class="localLink" href="http://schema.org/Schedule">Schedule</a>, this avoids any ambiguity for clients using the data. The propery might have repeated values to specify different schedules, e.g. for different months
    ///      or seasons.
    ///<see cref="http://schema.org/eventSchedule"/>
    ///</summary>
    public static readonly Property eventSchedule = new Property(new Uri("http://schema.org/eventSchedule"));    

    ///<summary>
    ///An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
    ///<see cref="http://schema.org/eventStatus"/>
    ///</summary>
    public static readonly Property eventStatus = new Property(new Uri("http://schema.org/eventStatus"));    

    ///<summary>
    ///Upcoming or past events associated with this place or organization.
    ///<see cref="http://schema.org/events"/>
    ///</summary>
    public static readonly Property events = new Property(new Uri("http://schema.org/events"));    

    ///<summary>
    ///Strength of evidence of the data used to formulate the guideline (enumerated).
    ///<see cref="http://schema.org/evidenceLevel"/>
    ///</summary>
    public static readonly Property evidenceLevel = new Property(new Uri("http://schema.org/evidenceLevel"));    

    ///<summary>
    ///Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.
    ///<see cref="http://schema.org/evidenceOrigin"/>
    ///</summary>
    public static readonly Property evidenceOrigin = new Property(new Uri("http://schema.org/evidenceOrigin"));    

    ///<summary>
    ///Defines a <a class="localLink" href="http://schema.org/Date">Date</a> or <a class="localLink" href="http://schema.org/DateTime">DateTime</a> during which a scheduled <a class="localLink" href="http://schema.org/Event">Event</a> will not take place. The property allows exceptions to
    ///      a <a class="localLink" href="http://schema.org/Schedule">Schedule</a> to be specified. If an exception is specified as a <a class="localLink" href="http://schema.org/DateTime">DateTime</a> then only the event that would have started at that specific date and time
    ///      should be excluded from the schedule. If an exception is specified as a <a class="localLink" href="http://schema.org/Date">Date</a> then any event that is scheduled for that 24 hour period should be
    ///      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.
    ///<see cref="http://schema.org/exceptDate"/>
    ///</summary>
    public static readonly Property exceptDate = new Property(new Uri("http://schema.org/exceptDate"));    

    ///<summary>
    ///The difference between the price at which a broker or other intermediary buys and sells foreign currency.
    ///<see cref="http://schema.org/exchangeRateSpread"/>
    ///</summary>
    public static readonly Property exchangeRateSpread = new Property(new Uri("http://schema.org/exchangeRateSpread"));    

    ///<summary>
    ///A sub property of instrument. The exercise plan used on this action.
    ///<see cref="http://schema.org/exercisePlan"/>
    ///</summary>
    public static readonly Property exercisePlan = new Property(new Uri("http://schema.org/exercisePlan"));    

    ///<summary>
    ///A sub property of instrument. The diet used in this action.
    ///<see cref="http://schema.org/exerciseRelatedDiet"/>
    ///</summary>
    public static readonly Property exerciseRelatedDiet = new Property(new Uri("http://schema.org/exerciseRelatedDiet"));    

    ///<summary>
    ///Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.
    ///<see cref="http://schema.org/exerciseType"/>
    ///</summary>
    public static readonly Property exerciseType = new Property(new Uri("http://schema.org/exerciseType"));    

    ///<summary>
    ///exif data for this object.
    ///<see cref="http://schema.org/exifData"/>
    ///</summary>
    public static readonly Property exifData = new Property(new Uri("http://schema.org/exifData"));    

    ///<summary>
    ///The earliest date the package may arrive.
    ///<see cref="http://schema.org/expectedArrivalFrom"/>
    ///</summary>
    public static readonly Property expectedArrivalFrom = new Property(new Uri("http://schema.org/expectedArrivalFrom"));    

    ///<summary>
    ///The latest date the package may arrive.
    ///<see cref="http://schema.org/expectedArrivalUntil"/>
    ///</summary>
    public static readonly Property expectedArrivalUntil = new Property(new Uri("http://schema.org/expectedArrivalUntil"));    

    ///<summary>
    ///The likely outcome in either the short term or long term of the medical condition.
    ///<see cref="http://schema.org/expectedPrognosis"/>
    ///</summary>
    public static readonly Property expectedPrognosis = new Property(new Uri("http://schema.org/expectedPrognosis"));    

    ///<summary>
    ///An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.
    ///<see cref="http://schema.org/expectsAcceptanceOf"/>
    ///</summary>
    public static readonly Property expectsAcceptanceOf = new Property(new Uri("http://schema.org/expectsAcceptanceOf"));    

    ///<summary>
    ///Description of skills and experience needed for the position or Occupation.
    ///<see cref="http://schema.org/experienceRequirements"/>
    ///</summary>
    public static readonly Property experienceRequirements = new Property(new Uri("http://schema.org/experienceRequirements"));    

    ///<summary>
    ///Medical expert advice related to the plan.
    ///<see cref="http://schema.org/expertConsiderations"/>
    ///</summary>
    public static readonly Property expertConsiderations = new Property(new Uri("http://schema.org/expertConsiderations"));    

    ///<summary>
    ///Date the content expires and is no longer useful or available. For example a <a class="localLink" href="http://schema.org/VideoObject">VideoObject</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> whose availability or relevance is time-limited, or a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.
    ///<see cref="http://schema.org/expires"/>
    ///</summary>
    public static readonly Property expires = new Property(new Uri("http://schema.org/expires"));    

    ///<summary>
    ///Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.
    ///<see cref="http://schema.org/familyName"/>
    ///</summary>
    public static readonly Property familyName = new Property(new Uri("http://schema.org/familyName"));    

    ///<summary>
    ///The number of grams of fat.
    ///<see cref="http://schema.org/fatContent"/>
    ///</summary>
    public static readonly Property fatContent = new Property(new Uri("http://schema.org/fatContent"));    

    ///<summary>
    ///The fax number.
    ///<see cref="http://schema.org/faxNumber"/>
    ///</summary>
    public static readonly Property faxNumber = new Property(new Uri("http://schema.org/faxNumber"));    

    ///<summary>
    ///Features or modules provided by this application (and possibly required by other applications).
    ///<see cref="http://schema.org/featureList"/>
    ///</summary>
    public static readonly Property featureList = new Property(new Uri("http://schema.org/featureList"));    

    ///<summary>
    ///Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.
    ///<see cref="http://schema.org/feesAndCommissionsSpecification"/>
    ///</summary>
    public static readonly Property feesAndCommissionsSpecification = new Property(new Uri("http://schema.org/feesAndCommissionsSpecification"));    

    ///<summary>
    ///The number of grams of fiber.
    ///<see cref="http://schema.org/fiberContent"/>
    ///</summary>
    public static readonly Property fiberContent = new Property(new Uri("http://schema.org/fiberContent"));    

    ///<summary>
    ///Media type, typically MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.
    ///<see cref="http://schema.org/fileFormat"/>
    ///</summary>
    public static readonly Property fileFormat = new Property(new Uri("http://schema.org/fileFormat"));    

    ///<summary>
    ///Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
    ///<see cref="http://schema.org/fileSize"/>
    ///</summary>
    public static readonly Property fileSize = new Property(new Uri("http://schema.org/fileSize"));    

    ///<summary>
    ///Indicates the first known occurence of a <a class="localLink" href="http://schema.org/Claim">Claim</a> in some <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/firstAppearance"/>
    ///</summary>
    public static readonly Property firstAppearance = new Property(new Uri("http://schema.org/firstAppearance"));    

    ///<summary>
    ///The date and place the work was first performed.
    ///<see cref="http://schema.org/firstPerformance"/>
    ///</summary>
    public static readonly Property firstPerformance = new Property(new Uri("http://schema.org/firstPerformance"));    

    ///<summary>
    ///The distance of the flight.
    ///<see cref="http://schema.org/flightDistance"/>
    ///</summary>
    public static readonly Property flightDistance = new Property(new Uri("http://schema.org/flightDistance"));    

    ///<summary>
    ///The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
    ///<see cref="http://schema.org/flightNumber"/>
    ///</summary>
    public static readonly Property flightNumber = new Property(new Uri("http://schema.org/flightNumber"));    

    ///<summary>
    ///A floor limit is the amount of money above which credit card transactions must be authorized.
    ///<see cref="http://schema.org/floorLimit"/>
    ///</summary>
    public static readonly Property floorLimit = new Property(new Uri("http://schema.org/floorLimit"));    

    ///<summary>
    ///The size of the accommodation, e.g. in square meter or squarefoot.
    ///Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard
    ///<see cref="http://schema.org/floorSize"/>
    ///</summary>
    public static readonly Property floorSize = new Property(new Uri("http://schema.org/floorSize"));    

    ///<summary>
    ///A sub property of object. The person or organization being followed.
    ///<see cref="http://schema.org/followee"/>
    ///</summary>
    public static readonly Property followee = new Property(new Uri("http://schema.org/followee"));    

    ///<summary>
    ///The most generic uni-directional social relation.
    ///<see cref="http://schema.org/follows"/>
    ///</summary>
    public static readonly Property follows = new Property(new Uri("http://schema.org/follows"));    

    ///<summary>
    ///Typical or recommended followup care after the procedure is performed.
    ///<see cref="http://schema.org/followup"/>
    ///</summary>
    public static readonly Property followup = new Property(new Uri("http://schema.org/followup"));    

    ///<summary>
    ///A sub property of location. The specific food establishment where the action occurred.
    ///<see cref="http://schema.org/foodEstablishment"/>
    ///</summary>
    public static readonly Property foodEstablishment = new Property(new Uri("http://schema.org/foodEstablishment"));    

    ///<summary>
    ///A sub property of location. The specific food event where the action occurred.
    ///<see cref="http://schema.org/foodEvent"/>
    ///</summary>
    public static readonly Property foodEvent = new Property(new Uri("http://schema.org/foodEvent"));    

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.
    ///<see cref="http://schema.org/foodWarning"/>
    ///</summary>
    public static readonly Property foodWarning = new Property(new Uri("http://schema.org/foodWarning"));    

    ///<summary>
    ///A person who founded this organization.
    ///<see cref="http://schema.org/founders"/>
    ///</summary>
    public static readonly Property founders = new Property(new Uri("http://schema.org/founders"));    

    ///<summary>
    ///The date that this organization was founded.
    ///<see cref="http://schema.org/foundingDate"/>
    ///</summary>
    public static readonly Property foundingDate = new Property(new Uri("http://schema.org/foundingDate"));    

    ///<summary>
    ///The place where the Organization was founded.
    ///<see cref="http://schema.org/foundingLocation"/>
    ///</summary>
    public static readonly Property foundingLocation = new Property(new Uri("http://schema.org/foundingLocation"));    

    ///<summary>
    ///A flag to signal that the item, event, or place is accessible for free.
    ///<see cref="http://schema.org/free"/>
    ///</summary>
    public static readonly Property free = new Property(new Uri("http://schema.org/free"));    

    ///<summary>
    ///A sub property of location. The original location of the object or the agent before the action.
    ///<see cref="http://schema.org/fromLocation"/>
    ///</summary>
    public static readonly Property fromLocation = new Property(new Uri("http://schema.org/fromLocation"));    

    ///<summary>
    ///The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.<br/><br/>
    ///
    ///Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).
    ///<see cref="http://schema.org/fuelCapacity"/>
    ///</summary>
    public static readonly Property fuelCapacity = new Property(new Uri("http://schema.org/fuelCapacity"));    

    ///<summary>
    ///The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>
    ///<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
    ///<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel consumption to another value.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/fuelConsumption"/>
    ///</summary>
    public static readonly Property fuelConsumption = new Property(new Uri("http://schema.org/fuelConsumption"));    

    ///<summary>
    ///The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>
    ///<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
    ///<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel economy to another value.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/fuelEfficiency"/>
    ///</summary>
    public static readonly Property fuelEfficiency = new Property(new Uri("http://schema.org/fuelEfficiency"));    

    ///<summary>
    ///The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
    ///<see cref="http://schema.org/fuelType"/>
    ///</summary>
    public static readonly Property fuelType = new Property(new Uri("http://schema.org/fuelType"));    

    ///<summary>
    ///Function of the anatomical structure.
    ///<see cref="http://schema.org/function"/>
    ///</summary>
    public static readonly Property function = new Property(new Uri("http://schema.org/function"));    

    ///<summary>
    ///The degree of mobility the joint allows.
    ///<see cref="http://schema.org/functionalClass"/>
    ///</summary>
    public static readonly Property functionalClass = new Property(new Uri("http://schema.org/functionalClass"));    

    ///<summary>
    ///Indicates an item funded or sponsored through a <a class="localLink" href="http://schema.org/Grant">Grant</a>.
    ///<see cref="http://schema.org/fundedItem"/>
    ///</summary>
    public static readonly Property fundedItem = new Property(new Uri("http://schema.org/fundedItem"));    

    ///<summary>
    ///A person or organization that supports (sponsors) something through some kind of financial contribution.
    ///<see cref="http://schema.org/funder"/>
    ///</summary>
    public static readonly Property funder = new Property(new Uri("http://schema.org/funder"));    

    ///<summary>
    ///An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
    ///<see cref="http://schema.org/gameItem"/>
    ///</summary>
    public static readonly Property gameItem = new Property(new Uri("http://schema.org/gameItem"));    

    ///<summary>
    ///Real or fictional location of the game (or part of game).
    ///<see cref="http://schema.org/gameLocation"/>
    ///</summary>
    public static readonly Property gameLocation = new Property(new Uri("http://schema.org/gameLocation"));    

    ///<summary>
    ///The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
    ///<see cref="http://schema.org/gamePlatform"/>
    ///</summary>
    public static readonly Property gamePlatform = new Property(new Uri("http://schema.org/gamePlatform"));    

    ///<summary>
    ///Links to tips, tactics, etc.
    ///<see cref="http://schema.org/gameTip"/>
    ///</summary>
    public static readonly Property gameTip = new Property(new Uri("http://schema.org/gameTip"));    

    ///<summary>
    ///Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.
    ///<see cref="http://schema.org/gender"/>
    ///</summary>
    public static readonly Property gender = new Property(new Uri("http://schema.org/gender"));    

    ///<summary>
    ///The geo coordinates of the place.
    ///<see cref="http://schema.org/geo"/>
    ///</summary>
    public static readonly Property geo = new Property(new Uri("http://schema.org/geo"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoContains"/>
    ///</summary>
    public static readonly Property geoContains = new Property(new Uri("http://schema.org/geoContains"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCoveredBy"/>
    ///</summary>
    public static readonly Property geoCoveredBy = new Property(new Uri("http://schema.org/geoCoveredBy"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCovers"/>
    ///</summary>
    public static readonly Property geoCovers = new Property(new Uri("http://schema.org/geoCovers"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCrosses"/>
    ///</summary>
    public static readonly Property geoCrosses = new Property(new Uri("http://schema.org/geoCrosses"));    

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)
    ///<see cref="http://schema.org/geoDisjoint"/>
    ///</summary>
    public static readonly Property geoDisjoint = new Property(new Uri("http://schema.org/geoDisjoint"));    

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
    ///<see cref="http://schema.org/geoEquals"/>
    ///</summary>
    public static readonly Property geoEquals = new Property(new Uri("http://schema.org/geoEquals"));    

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoIntersects"/>
    ///</summary>
    public static readonly Property geoIntersects = new Property(new Uri("http://schema.org/geoIntersects"));    

    ///<summary>
    ///Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.
    ///<see cref="http://schema.org/geoMidpoint"/>
    ///</summary>
    public static readonly Property geoMidpoint = new Property(new Uri("http://schema.org/geoMidpoint"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoOverlaps"/>
    ///</summary>
    public static readonly Property geoOverlaps = new Property(new Uri("http://schema.org/geoOverlaps"));    

    ///<summary>
    ///Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).
    ///<see cref="http://schema.org/geoRadius"/>
    ///</summary>
    public static readonly Property geoRadius = new Property(new Uri("http://schema.org/geoRadius"));    

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a> )
    ///<see cref="http://schema.org/geoTouches"/>
    ///</summary>
    public static readonly Property geoTouches = new Property(new Uri("http://schema.org/geoTouches"));    

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoWithin"/>
    ///</summary>
    public static readonly Property geoWithin = new Property(new Uri("http://schema.org/geoWithin"));    

    ///<summary>
    ///The geographic area associated with the audience.
    ///<see cref="http://schema.org/geographicArea"/>
    ///</summary>
    public static readonly Property geographicArea = new Property(new Uri("http://schema.org/geographicArea"));    

    ///<summary>
    ///Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.
    ///<see cref="http://schema.org/givenName"/>
    ///</summary>
    public static readonly Property givenName = new Property(new Uri("http://schema.org/givenName"));    

    ///<summary>
    ///The <a href="http://www.gs1.org/gln">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
    ///<see cref="http://schema.org/globalLocationNumber"/>
    ///</summary>
    public static readonly Property globalLocationNumber = new Property(new Uri("http://schema.org/globalLocationNumber"));    

    ///<summary>
    ///The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.
    ///<see cref="http://schema.org/gracePeriod"/>
    ///</summary>
    public static readonly Property gracePeriod = new Property(new Uri("http://schema.org/gracePeriod"));    

    ///<summary>
    ///The person, organization, contact point, or audience that has been granted this permission.
    ///<see cref="http://schema.org/grantee"/>
    ///</summary>
    public static readonly Property grantee = new Property(new Uri("http://schema.org/grantee"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is greater than the object.
    ///<see cref="http://schema.org/greater"/>
    ///</summary>
    public static readonly Property greater = new Property(new Uri("http://schema.org/greater"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
    ///<see cref="http://schema.org/greaterOrEqual"/>
    ///</summary>
    public static readonly Property greaterOrEqual = new Property(new Uri("http://schema.org/greaterOrEqual"));    

    ///<summary>
    ///The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin12"/>
    ///</summary>
    public static readonly Property gtin12 = new Property(new Uri("http://schema.org/gtin12"));    

    ///<summary>
    ///The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin13"/>
    ///</summary>
    public static readonly Property gtin13 = new Property(new Uri("http://schema.org/gtin13"));    

    ///<summary>
    ///The GTIN-14 code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin14"/>
    ///</summary>
    public static readonly Property gtin14 = new Property(new Uri("http://schema.org/gtin14"));    

    ///<summary>
    ///The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin8"/>
    ///</summary>
    public static readonly Property gtin8 = new Property(new Uri("http://schema.org/gtin8"));    

    ///<summary>
    ///A medical guideline related to this entity.
    ///<see cref="http://schema.org/guideline"/>
    ///</summary>
    public static readonly Property guideline = new Property(new Uri("http://schema.org/guideline"));    

    ///<summary>
    ///Date on which this guideline's recommendation was made.
    ///<see cref="http://schema.org/guidelineDate"/>
    ///</summary>
    public static readonly Property guidelineDate = new Property(new Uri("http://schema.org/guidelineDate"));    

    ///<summary>
    ///The medical conditions, treatments, etc. that are the subject of the guideline.
    ///<see cref="http://schema.org/guidelineSubject"/>
    ///</summary>
    public static readonly Property guidelineSubject = new Property(new Uri("http://schema.org/guidelineSubject"));    

    ///<summary>
    ///A Category code contained in this code set.
    ///<see cref="http://schema.org/hasCategoryCode"/>
    ///</summary>
    public static readonly Property hasCategoryCode = new Property(new Uri("http://schema.org/hasCategoryCode"));    

    ///<summary>
    ///An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.
    ///<see cref="http://schema.org/hasCourseInstance"/>
    ///</summary>
    public static readonly Property hasCourseInstance = new Property(new Uri("http://schema.org/hasCourseInstance"));    

    ///<summary>
    ///A credential awarded to the Person or Organization.
    ///<see cref="http://schema.org/hasCredential"/>
    ///</summary>
    public static readonly Property hasCredential = new Property(new Uri("http://schema.org/hasCredential"));    

    ///<summary>
    ///Method used for delivery or shipping.
    ///<see cref="http://schema.org/hasDeliveryMethod"/>
    ///</summary>
    public static readonly Property hasDeliveryMethod = new Property(new Uri("http://schema.org/hasDeliveryMethod"));    

    ///<summary>
    ///A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public".
    ///<see cref="http://schema.org/hasDigitalDocumentPermission"/>
    ///</summary>
    public static readonly Property hasDigitalDocumentPermission = new Property(new Uri("http://schema.org/hasDigitalDocumentPermission"));    

    ///<summary>
    ///A food or drink item contained in a menu or menu section.
    ///<see cref="http://schema.org/hasMenuItem"/>
    ///</summary>
    public static readonly Property hasMenuItem = new Property(new Uri("http://schema.org/hasMenuItem"));    

    ///<summary>
    ///A subgrouping of the menu (by dishes, course, serving time period, etc.).
    ///<see cref="http://schema.org/hasMenuSection"/>
    ///</summary>
    public static readonly Property hasMenuSection = new Property(new Uri("http://schema.org/hasMenuSection"));    

    ///<summary>
    ///The Person's occupation. For past professions, use Role for expressing dates.
    ///<see cref="http://schema.org/hasOccupation"/>
    ///</summary>
    public static readonly Property hasOccupation = new Property(new Uri("http://schema.org/hasOccupation"));    

    ///<summary>
    ///Indicates an OfferCatalog listing for this Organization, Person, or Service.
    ///<see cref="http://schema.org/hasOfferCatalog"/>
    ///</summary>
    public static readonly Property hasOfferCatalog = new Property(new Uri("http://schema.org/hasOfferCatalog"));    

    ///<summary>
    ///Points-of-Sales operated by the organization or person.
    ///<see cref="http://schema.org/hasPOS"/>
    ///</summary>
    public static readonly Property hasPOS = new Property(new Uri("http://schema.org/hasPOS"));    

    ///<summary>
    ///Indicates a ProductReturnPolicy that may be applicable.
    ///<see cref="http://schema.org/hasProductReturnPolicy"/>
    ///</summary>
    public static readonly Property hasProductReturnPolicy = new Property(new Uri("http://schema.org/hasProductReturnPolicy"));    

    ///<summary>
    ///Headline of the article.
    ///<see cref="http://schema.org/headline"/>
    ///</summary>
    public static readonly Property headline = new Property(new Uri("http://schema.org/headline"));    

    ///<summary>
    ///Specifying the health condition(s) of a patient, medical study, or other target audience.
    ///<see cref="http://schema.org/healthCondition"/>
    ///</summary>
    public static readonly Property healthCondition = new Property(new Uri("http://schema.org/healthCondition"));    

    ///<summary>
    ///Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?
    ///<see cref="http://schema.org/healthPlanCoinsuranceOption"/>
    ///</summary>
    public static readonly Property healthPlanCoinsuranceOption = new Property(new Uri("http://schema.org/healthPlanCoinsuranceOption"));    

    ///<summary>
    ///Whether The rate of coinsurance expressed as a number between 0.0 and 1.0.
    ///<see cref="http://schema.org/healthPlanCoinsuranceRate"/>
    ///</summary>
    public static readonly Property healthPlanCoinsuranceRate = new Property(new Uri("http://schema.org/healthPlanCoinsuranceRate"));    

    ///<summary>
    ///Whether The copay amount.
    ///<see cref="http://schema.org/healthPlanCopay"/>
    ///</summary>
    public static readonly Property healthPlanCopay = new Property(new Uri("http://schema.org/healthPlanCopay"));    

    ///<summary>
    ///Whether the copay is before or after deductible, etc. TODO: Is this a closed set?
    ///<see cref="http://schema.org/healthPlanCopayOption"/>
    ///</summary>
    public static readonly Property healthPlanCopayOption = new Property(new Uri("http://schema.org/healthPlanCopayOption"));    

    ///<summary>
    ///Whether The costs to the patient for services under this network or formulary.
    ///<see cref="http://schema.org/healthPlanCostSharing"/>
    ///</summary>
    public static readonly Property healthPlanCostSharing = new Property(new Uri("http://schema.org/healthPlanCostSharing"));    

    ///<summary>
    ///TODO.
    ///<see cref="http://schema.org/healthPlanDrugOption"/>
    ///</summary>
    public static readonly Property healthPlanDrugOption = new Property(new Uri("http://schema.org/healthPlanDrugOption"));    

    ///<summary>
    ///The tier(s) of drugs offered by this formulary or insurance plan.
    ///<see cref="http://schema.org/healthPlanDrugTier"/>
    ///</summary>
    public static readonly Property healthPlanDrugTier = new Property(new Uri("http://schema.org/healthPlanDrugTier"));    

    ///<summary>
    ///The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)
    ///<see cref="http://schema.org/healthPlanId"/>
    ///</summary>
    public static readonly Property healthPlanId = new Property(new Uri("http://schema.org/healthPlanId"));    

    ///<summary>
    ///The URL that goes directly to the plan brochure for the specific standard plan or plan variation.
    ///<see cref="http://schema.org/healthPlanMarketingUrl"/>
    ///</summary>
    public static readonly Property healthPlanMarketingUrl = new Property(new Uri("http://schema.org/healthPlanMarketingUrl"));    

    ///<summary>
    ///Name or unique ID of network. (Networks are often reused across different insurance plans).
    ///<see cref="http://schema.org/healthPlanNetworkId"/>
    ///</summary>
    public static readonly Property healthPlanNetworkId = new Property(new Uri("http://schema.org/healthPlanNetworkId"));    

    ///<summary>
    ///The tier(s) for this network.
    ///<see cref="http://schema.org/healthPlanNetworkTier"/>
    ///</summary>
    public static readonly Property healthPlanNetworkTier = new Property(new Uri("http://schema.org/healthPlanNetworkTier"));    

    ///<summary>
    ///The category or type of pharmacy associated with this cost sharing.
    ///<see cref="http://schema.org/healthPlanPharmacyCategory"/>
    ///</summary>
    public static readonly Property healthPlanPharmacyCategory = new Property(new Uri("http://schema.org/healthPlanPharmacyCategory"));    

    ///<summary>
    ///The height of the item.
    ///<see cref="http://schema.org/height"/>
    ///</summary>
    public static readonly Property height = new Property(new Uri("http://schema.org/height"));    

    ///<summary>
    ///The highest price of all offers available.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/highPrice"/>
    ///</summary>
    public static readonly Property highPrice = new Property(new Uri("http://schema.org/highPrice"));    

    ///<summary>
    ///Organization offering the job position.
    ///<see cref="http://schema.org/hiringOrganization"/>
    ///</summary>
    public static readonly Property hiringOrganization = new Property(new Uri("http://schema.org/hiringOrganization"));    

    ///<summary>
    ///A contact location for a person's residence.
    ///<see cref="http://schema.org/homeLocation"/>
    ///</summary>
    public static readonly Property homeLocation = new Property(new Uri("http://schema.org/homeLocation"));    

    ///<summary>
    ///The home team in a sports event.
    ///<see cref="http://schema.org/homeTeam"/>
    ///</summary>
    public static readonly Property homeTeam = new Property(new Uri("http://schema.org/homeTeam"));    

    ///<summary>
    ///An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
    ///<see cref="http://schema.org/honorificPrefix"/>
    ///</summary>
    public static readonly Property honorificPrefix = new Property(new Uri("http://schema.org/honorificPrefix"));    

    ///<summary>
    ///An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.
    ///<see cref="http://schema.org/honorificSuffix"/>
    ///</summary>
    public static readonly Property honorificSuffix = new Property(new Uri("http://schema.org/honorificSuffix"));    

    ///<summary>
    ///A hospital with which the physician or office is affiliated.
    ///<see cref="http://schema.org/hospitalAffiliation"/>
    ///</summary>
    public static readonly Property hospitalAffiliation = new Property(new Uri("http://schema.org/hospitalAffiliation"));    

    ///<summary>
    ///The organization (airline, travelers' club, etc.) the membership is made with.
    ///<see cref="http://schema.org/hostingOrganization"/>
    ///</summary>
    public static readonly Property hostingOrganization = new Property(new Uri("http://schema.org/hostingOrganization"));    

    ///<summary>
    ///The hours during which this service or contact is available.
    ///<see cref="http://schema.org/hoursAvailable"/>
    ///</summary>
    public static readonly Property hoursAvailable = new Property(new Uri("http://schema.org/hoursAvailable"));    

    ///<summary>
    ///How the procedure is performed.
    ///<see cref="http://schema.org/howPerformed"/>
    ///</summary>
    public static readonly Property howPerformed = new Property(new Uri("http://schema.org/howPerformed"));    

    ///<summary>
    ///An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
    ///<see cref="http://schema.org/httpMethod"/>
    ///</summary>
    public static readonly Property httpMethod = new Property(new Uri("http://schema.org/httpMethod"));    

    ///<summary>
    ///IATA identifier for an airline or airport.
    ///<see cref="http://schema.org/iataCode"/>
    ///</summary>
    public static readonly Property iataCode = new Property(new Uri("http://schema.org/iataCode"));    

    ///<summary>
    ///ICAO identifier for an airport.
    ///<see cref="http://schema.org/icaoCode"/>
    ///</summary>
    public static readonly Property icaoCode = new Property(new Uri("http://schema.org/icaoCode"));    

    ///<summary>
    ///A physical examination that can identify this sign.
    ///<see cref="http://schema.org/identifyingExam"/>
    ///</summary>
    public static readonly Property identifyingExam = new Property(new Uri("http://schema.org/identifyingExam"));    

    ///<summary>
    ///A diagnostic test that can identify this sign.
    ///<see cref="http://schema.org/identifyingTest"/>
    ///</summary>
    public static readonly Property identifyingTest = new Property(new Uri("http://schema.org/identifyingTest"));    

    ///<summary>
    ///The illustrator of the book.
    ///<see cref="http://schema.org/illustrator"/>
    ///</summary>
    public static readonly Property illustrator = new Property(new Uri("http://schema.org/illustrator"));    

    ///<summary>
    ///Imaging technique used.
    ///<see cref="http://schema.org/imagingTechnique"/>
    ///</summary>
    public static readonly Property imagingTechnique = new Property(new Uri("http://schema.org/imagingTechnique"));    

    ///<summary>
    ///The album to which this recording belongs.
    ///<see cref="http://schema.org/inAlbum"/>
    ///</summary>
    public static readonly Property inAlbum = new Property(new Uri("http://schema.org/inAlbum"));    

    ///<summary>
    ///The CableOrSatelliteService offering the channel.
    ///<see cref="http://schema.org/inBroadcastLineup"/>
    ///</summary>
    public static readonly Property inBroadcastLineup = new Property(new Uri("http://schema.org/inBroadcastLineup"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CategoryCodeSet">CategoryCodeSet</a> that contains this category code.
    ///<see cref="http://schema.org/inCodeSet"/>
    ///</summary>
    public static readonly Property inCodeSet = new Property(new Uri("http://schema.org/inCodeSet"));    

    ///<summary>
    ///The playlist to which this recording belongs.
    ///<see cref="http://schema.org/inPlaylist"/>
    ///</summary>
    public static readonly Property inPlaylist = new Property(new Uri("http://schema.org/inPlaylist"));    

    ///<summary>
    ///Are in-store returns offered?
    ///<see cref="http://schema.org/inStoreReturnsOffered"/>
    ///</summary>
    public static readonly Property inStoreReturnsOffered = new Property(new Uri("http://schema.org/inStoreReturnsOffered"));    

    ///<summary>
    ///Qualification, candidature, degree, application that Thesis supports.
    ///<see cref="http://schema.org/inSupportOf"/>
    ///</summary>
    public static readonly Property inSupportOf = new Property(new Uri("http://schema.org/inSupportOf"));    

    ///<summary>
    ///Description of bonus and commission compensation aspects of the job.
    ///<see cref="http://schema.org/incentives"/>
    ///</summary>
    public static readonly Property incentives = new Property(new Uri("http://schema.org/incentives"));    

    ///<summary>
    ///Smaller compositions included in this work (e.g. a movement in a symphony).
    ///<see cref="http://schema.org/includedComposition"/>
    ///</summary>
    public static readonly Property includedComposition = new Property(new Uri("http://schema.org/includedComposition"));    

    ///<summary>
    ///A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').
    ///<see cref="http://schema.org/includedDataCatalog"/>
    ///</summary>
    public static readonly Property includedDataCatalog = new Property(new Uri("http://schema.org/includedDataCatalog"));    

    ///<summary>
    ///The insurance plans that cover this drug.
    ///<see cref="http://schema.org/includedInHealthInsurancePlan"/>
    ///</summary>
    public static readonly Property includedInHealthInsurancePlan = new Property(new Uri("http://schema.org/includedInHealthInsurancePlan"));    

    ///<summary>
    ///A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.
    ///<see cref="http://schema.org/includedRiskFactor"/>
    ///</summary>
    public static readonly Property includedRiskFactor = new Property(new Uri("http://schema.org/includedRiskFactor"));    

    ///<summary>
    ///Attraction located at destination.
    ///<see cref="http://schema.org/includesAttraction"/>
    ///</summary>
    public static readonly Property includesAttraction = new Property(new Uri("http://schema.org/includesAttraction"));    

    ///<summary>
    ///Formularies covered by this plan.
    ///<see cref="http://schema.org/includesHealthPlanFormulary"/>
    ///</summary>
    public static readonly Property includesHealthPlanFormulary = new Property(new Uri("http://schema.org/includesHealthPlanFormulary"));    

    ///<summary>
    ///Networks covered by this plan.
    ///<see cref="http://schema.org/includesHealthPlanNetwork"/>
    ///</summary>
    public static readonly Property includesHealthPlanNetwork = new Property(new Uri("http://schema.org/includesHealthPlanNetwork"));    

    ///<summary>
    ///This links to a node or nodes indicating the exact quantity of the products included in the offer.
    ///<see cref="http://schema.org/includesObject"/>
    ///</summary>
    public static readonly Property includesObject = new Property(new Uri("http://schema.org/includesObject"));    

    ///<summary>
    ///The condition, complication, etc. influenced by this factor.
    ///<see cref="http://schema.org/increasesRiskOf"/>
    ///</summary>
    public static readonly Property increasesRiskOf = new Property(new Uri("http://schema.org/increasesRiskOf"));    

    ///<summary>
    ///A factor that indicates use of this therapy for treatment and/or prevention of a condition, symptom, etc. For therapies such as drugs, indications can include both officially-approved indications as well as off-label uses. These can be distinguished by using the ApprovedIndication subtype of MedicalIndication.
    ///<see cref="http://schema.org/indication"/>
    ///</summary>
    public static readonly Property indication = new Property(new Uri("http://schema.org/indication"));    

    ///<summary>
    ///The industry associated with the job position.
    ///<see cref="http://schema.org/industry"/>
    ///</summary>
    public static readonly Property industry = new Property(new Uri("http://schema.org/industry"));    

    ///<summary>
    ///The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>
    ///
    ///See also <a class="localLink" href="http://schema.org/eligibleRegion">eligibleRegion</a>.
    ///<see cref="http://schema.org/ineligibleRegion"/>
    ///</summary>
    public static readonly Property ineligibleRegion = new Property(new Uri("http://schema.org/ineligibleRegion"));    

    ///<summary>
    ///The actual infectious agent, such as a specific bacterium.
    ///<see cref="http://schema.org/infectiousAgent"/>
    ///</summary>
    public static readonly Property infectiousAgent = new Property(new Uri("http://schema.org/infectiousAgent"));    

    ///<summary>
    ///The class of infectious agent (bacteria, prion, etc.) that causes the disease.
    ///<see cref="http://schema.org/infectiousAgentClass"/>
    ///</summary>
    public static readonly Property infectiousAgentClass = new Property(new Uri("http://schema.org/infectiousAgentClass"));    

    ///<summary>
    ///A single ingredient used in the recipe, e.g. sugar, flour or garlic.
    ///<see cref="http://schema.org/ingredients"/>
    ///</summary>
    public static readonly Property ingredients = new Property(new Uri("http://schema.org/ingredients"));    

    ///<summary>
    ///The individual who traces over the pencil drawings in ink after pencils are complete.
    ///<see cref="http://schema.org/inker"/>
    ///</summary>
    public static readonly Property inker = new Property(new Uri("http://schema.org/inker"));    

    ///<summary>
    ///The place of attachment of a muscle, or what the muscle moves.
    ///<see cref="http://schema.org/insertion"/>
    ///</summary>
    public static readonly Property insertion = new Property(new Uri("http://schema.org/insertion"));    

    ///<summary>
    ///URL at which the app may be installed, if different from the URL of the item.
    ///<see cref="http://schema.org/installUrl"/>
    ///</summary>
    public static readonly Property installUrl = new Property(new Uri("http://schema.org/installUrl"));    

    ///<summary>
    ///A person assigned to instruct or provide instructional assistance for the <a class="localLink" href="http://schema.org/CourseInstance">CourseInstance</a>.
    ///<see cref="http://schema.org/instructor"/>
    ///</summary>
    public static readonly Property instructor = new Property(new Uri("http://schema.org/instructor"));    

    ///<summary>
    ///Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.
    ///<see cref="http://schema.org/intensity"/>
    ///</summary>
    public static readonly Property intensity = new Property(new Uri("http://schema.org/intensity"));    

    ///<summary>
    ///Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.
    ///<see cref="http://schema.org/interactingDrug"/>
    ///</summary>
    public static readonly Property interactingDrug = new Property(new Uri("http://schema.org/interactingDrug"));    

    ///<summary>
    ///This property is deprecated, alongside the UserInteraction types on which it depended.
    ///<see cref="http://schema.org/interactionCount"/>
    ///</summary>
    public static readonly Property interactionCount = new Property(new Uri("http://schema.org/interactionCount"));    

    ///<summary>
    ///The WebSite or SoftwareApplication where the interactions took place.
    ///<see cref="http://schema.org/interactionService"/>
    ///</summary>
    public static readonly Property interactionService = new Property(new Uri("http://schema.org/interactionService"));    

    ///<summary>
    ///The Action representing the type of interaction. For up votes, +1s, etc. use <a class="localLink" href="http://schema.org/LikeAction">LikeAction</a>. For down votes use <a class="localLink" href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise, use the most specific Action.
    ///<see cref="http://schema.org/interactionType"/>
    ///</summary>
    public static readonly Property interactionType = new Property(new Uri("http://schema.org/interactionType"));    

    ///<summary>
    ///The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
    ///<see cref="http://schema.org/interactivityType"/>
    ///</summary>
    public static readonly Property interactivityType = new Property(new Uri("http://schema.org/interactivityType"));    

    ///<summary>
    ///The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.
    ///<see cref="http://schema.org/interestRate"/>
    ///</summary>
    public static readonly Property interestRate = new Property(new Uri("http://schema.org/interestRate"));    

    ///<summary>
    ///The current approximate inventory level for the item or items.
    ///<see cref="http://schema.org/inventoryLevel"/>
    ///</summary>
    public static readonly Property inventoryLevel = new Property(new Uri("http://schema.org/inventoryLevel"));    

    ///<summary>
    ///Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
    ///<see cref="http://schema.org/inverseOf"/>
    ///</summary>
    public static readonly Property inverseOf = new Property(new Uri("http://schema.org/inverseOf"));    

    ///<summary>
    ///Whether the provider is accepting new patients.
    ///<see cref="http://schema.org/isAcceptingNewPatients"/>
    ///</summary>
    public static readonly Property isAcceptingNewPatients = new Property(new Uri("http://schema.org/isAcceptingNewPatients"));    

    ///<summary>
    ///A pointer to another product (or multiple products) for which this product is an accessory or spare part.
    ///<see cref="http://schema.org/isAccessoryOrSparePartFor"/>
    ///</summary>
    public static readonly Property isAccessoryOrSparePartFor = new Property(new Uri("http://schema.org/isAccessoryOrSparePartFor"));    

    ///<summary>
    ///True if the drug is available in a generic form (regardless of name).
    ///<see cref="http://schema.org/isAvailableGenerically"/>
    ///</summary>
    public static readonly Property isAvailableGenerically = new Property(new Uri("http://schema.org/isAvailableGenerically"));    

    ///<summary>
    ///A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.
    ///<see cref="http://schema.org/isBasedOnUrl"/>
    ///</summary>
    public static readonly Property isBasedOnUrl = new Property(new Uri("http://schema.org/isBasedOnUrl"));    

    ///<summary>
    ///A pointer to another product (or multiple products) for which this product is a consumable.
    ///<see cref="http://schema.org/isConsumableFor"/>
    ///</summary>
    public static readonly Property isConsumableFor = new Property(new Uri("http://schema.org/isConsumableFor"));    

    ///<summary>
    ///Indicates whether this content is family friendly.
    ///<see cref="http://schema.org/isFamilyFriendly"/>
    ///</summary>
    public static readonly Property isFamilyFriendly = new Property(new Uri("http://schema.org/isFamilyFriendly"));    

    ///<summary>
    ///Was the offer accepted as a gift for someone other than the buyer.
    ///<see cref="http://schema.org/isGift"/>
    ///</summary>
    public static readonly Property isGift = new Property(new Uri("http://schema.org/isGift"));    

    ///<summary>
    ///True is the broadcast is of a live event.
    ///<see cref="http://schema.org/isLiveBroadcast"/>
    ///</summary>
    public static readonly Property isLiveBroadcast = new Property(new Uri("http://schema.org/isLiveBroadcast"));    

    ///<summary>
    ///True if this item's name is a proprietary/brand name (vs. generic name).
    ///<see cref="http://schema.org/isProprietary"/>
    ///</summary>
    public static readonly Property isProprietary = new Property(new Uri("http://schema.org/isProprietary"));    

    ///<summary>
    ///A pointer to another, somehow related product (or multiple products).
    ///<see cref="http://schema.org/isRelatedTo"/>
    ///</summary>
    public static readonly Property isRelatedTo = new Property(new Uri("http://schema.org/isRelatedTo"));    

    ///<summary>
    ///A pointer to another, functionally similar product (or multiple products).
    ///<see cref="http://schema.org/isSimilarTo"/>
    ///</summary>
    public static readonly Property isSimilarTo = new Property(new Uri("http://schema.org/isSimilarTo"));    

    ///<summary>
    ///A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.
    ///<see cref="http://schema.org/isVariantOf"/>
    ///</summary>
    public static readonly Property isVariantOf = new Property(new Uri("http://schema.org/isVariantOf"));    

    ///<summary>
    ///The ISBN of the book.
    ///<see cref="http://schema.org/isbn"/>
    ///</summary>
    public static readonly Property isbn = new Property(new Uri("http://schema.org/isbn"));    

    ///<summary>
    ///The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
    ///<see cref="http://schema.org/isicV4"/>
    ///</summary>
    public static readonly Property isicV4 = new Property(new Uri("http://schema.org/isicV4"));    

    ///<summary>
    ///The International Standard Recording Code for the recording.
    ///<see cref="http://schema.org/isrcCode"/>
    ///</summary>
    public static readonly Property isrcCode = new Property(new Uri("http://schema.org/isrcCode"));    

    ///<summary>
    ///The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.
    ///<see cref="http://schema.org/issn"/>
    ///</summary>
    public static readonly Property issn = new Property(new Uri("http://schema.org/issn"));    

    ///<summary>
    ///Identifies the issue of publication; for example, "iii" or "2".
    ///<see cref="http://schema.org/issueNumber"/>
    ///</summary>
    public static readonly Property issueNumber = new Property(new Uri("http://schema.org/issueNumber"));    

    ///<summary>
    ///The organization issuing the ticket or permit.
    ///<see cref="http://schema.org/issuedBy"/>
    ///</summary>
    public static readonly Property issuedBy = new Property(new Uri("http://schema.org/issuedBy"));    

    ///<summary>
    ///The service through with the permit was granted.
    ///<see cref="http://schema.org/issuedThrough"/>
    ///</summary>
    public static readonly Property issuedThrough = new Property(new Uri("http://schema.org/issuedThrough"));    

    ///<summary>
    ///The International Standard Musical Work Code for the composition.
    ///<see cref="http://schema.org/iswcCode"/>
    ///</summary>
    public static readonly Property iswcCode = new Property(new Uri("http://schema.org/iswcCode"));    

    ///<summary>
    ///An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.
    ///<see cref="http://schema.org/item"/>
    ///</summary>
    public static readonly Property item = new Property(new Uri("http://schema.org/item"));    

    ///<summary>
    ///A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.
    ///<see cref="http://schema.org/itemCondition"/>
    ///</summary>
    public static readonly Property itemCondition = new Property(new Uri("http://schema.org/itemCondition"));    

    ///<summary>
    ///For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.<br/><br/>
    ///
    ///Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>
    ///
    ///Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
    ///<see cref="http://schema.org/itemListElement"/>
    ///</summary>
    public static readonly Property itemListElement = new Property(new Uri("http://schema.org/itemListElement"));    

    ///<summary>
    ///Type of ordering (e.g. Ascending, Descending, Unordered).
    ///<see cref="http://schema.org/itemListOrder"/>
    ///</summary>
    public static readonly Property itemListOrder = new Property(new Uri("http://schema.org/itemListOrder"));    

    ///<summary>
    ///Current location of the item.
    ///<see cref="http://schema.org/itemLocation"/>
    ///</summary>
    public static readonly Property itemLocation = new Property(new Uri("http://schema.org/itemLocation"));    

    ///<summary>
    ///The item being offered.
    ///<see cref="http://schema.org/itemOffered"/>
    ///</summary>
    public static readonly Property itemOffered = new Property(new Uri("http://schema.org/itemOffered"));    

    ///<summary>
    ///The item that is being reviewed/rated.
    ///<see cref="http://schema.org/itemReviewed"/>
    ///</summary>
    public static readonly Property itemReviewed = new Property(new Uri("http://schema.org/itemReviewed"));    

    ///<summary>
    ///Item(s) being shipped.
    ///<see cref="http://schema.org/itemShipped"/>
    ///</summary>
    public static readonly Property itemShipped = new Property(new Uri("http://schema.org/itemShipped"));    

    ///<summary>
    ///Destination(s) ( <a class="localLink" href="http://schema.org/Place">Place</a> ) that make up a trip. For a trip where destination order is important use <a class="localLink" href="http://schema.org/ItemList">ItemList</a> to specify that order (see examples).
    ///<see cref="http://schema.org/itinerary"/>
    ///</summary>
    public static readonly Property itinerary = new Property(new Uri("http://schema.org/itinerary"));    

    ///<summary>
    ///An indicator as to whether a position is available for an immediate start.
    ///<see cref="http://schema.org/jobImmediateStart"/>
    ///</summary>
    public static readonly Property jobImmediateStart = new Property(new Uri("http://schema.org/jobImmediateStart"));    

    ///<summary>
    ///A (typically single) geographic location associated with the job position.
    ///<see cref="http://schema.org/jobLocation"/>
    ///</summary>
    public static readonly Property jobLocation = new Property(new Uri("http://schema.org/jobLocation"));    

    ///<summary>
    ///A description of the job location (e.g TELECOMMUTE for telecommute jobs).
    ///<see cref="http://schema.org/jobLocationType"/>
    ///</summary>
    public static readonly Property jobLocationType = new Property(new Uri("http://schema.org/jobLocationType"));    

    ///<summary>
    ///The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.
    ///<see cref="http://schema.org/jobStartDate"/>
    ///</summary>
    public static readonly Property jobStartDate = new Property(new Uri("http://schema.org/jobStartDate"));    

    ///<summary>
    ///The job title of the person (for example, Financial Manager).
    ///<see cref="http://schema.org/jobTitle"/>
    ///</summary>
    public static readonly Property jobTitle = new Property(new Uri("http://schema.org/jobTitle"));    

    ///<summary>
    ///Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.
    ///<see cref="http://schema.org/keywords"/>
    ///</summary>
    public static readonly Property keywords = new Property(new Uri("http://schema.org/keywords"));    

    ///<summary>
    ///A textual description of known damages, both repaired and unrepaired.
    ///<see cref="http://schema.org/knownVehicleDamages"/>
    ///</summary>
    public static readonly Property knownVehicleDamages = new Property(new Uri("http://schema.org/knownVehicleDamages"));    

    ///<summary>
    ///The most generic bi-directional social/work relation.
    ///<see cref="http://schema.org/knows"/>
    ///</summary>
    public static readonly Property knows = new Property(new Uri("http://schema.org/knows"));    

    ///<summary>
    ///Of a <a class="localLink" href="http://schema.org/Person">Person</a>, and less typically of an <a class="localLink" href="http://schema.org/Organization">Organization</a>, to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or <a class="localLink" href="http://schema.org/JobPosting">JobPosting</a> descriptions.
    ///<see cref="http://schema.org/knowsAbout"/>
    ///</summary>
    public static readonly Property knowsAbout = new Property(new Uri("http://schema.org/knowsAbout"));    

    ///<summary>
    ///Of a <a class="localLink" href="http://schema.org/Person">Person</a>, and less typically of an <a class="localLink" href="http://schema.org/Organization">Organization</a>, to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
    ///<see cref="http://schema.org/knowsLanguage"/>
    ///</summary>
    public static readonly Property knowsLanguage = new Property(new Uri("http://schema.org/knowsLanguage"));    

    ///<summary>
    ///Link to the drug's label details.
    ///<see cref="http://schema.org/labelDetails"/>
    ///</summary>
    public static readonly Property labelDetails = new Property(new Uri("http://schema.org/labelDetails"));    

    ///<summary>
    ///A sub property of participant. The owner of the real estate property.
    ///<see cref="http://schema.org/landlord"/>
    ///</summary>
    public static readonly Property landlord = new Property(new Uri("http://schema.org/landlord"));    

    ///<summary>
    ///A sub property of instrument. The language used on this action.
    ///<see cref="http://schema.org/language"/>
    ///</summary>
    public static readonly Property language = new Property(new Uri("http://schema.org/language"));    

    ///<summary>
    ///Date on which the content on this web page was last reviewed for accuracy and/or completeness.
    ///<see cref="http://schema.org/lastReviewed"/>
    ///</summary>
    public static readonly Property lastReviewed = new Property(new Uri("http://schema.org/lastReviewed"));    

    ///<summary>
    ///The latitude of a location. For example <code>37.42242</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
    ///<see cref="http://schema.org/latitude"/>
    ///</summary>
    public static readonly Property latitude = new Property(new Uri("http://schema.org/latitude"));    

    ///<summary>
    ///The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
    ///<see cref="http://schema.org/learningResourceType"/>
    ///</summary>
    public static readonly Property learningResourceType = new Property(new Uri("http://schema.org/learningResourceType"));    

    ///<summary>
    ///The official name of the organization, e.g. the registered company name.
    ///<see cref="http://schema.org/legalName"/>
    ///</summary>
    public static readonly Property legalName = new Property(new Uri("http://schema.org/legalName"));    

    ///<summary>
    ///The drug or supplement's legal status, including any controlled substance schedules that apply.
    ///<see cref="http://schema.org/legalStatus"/>
    ///</summary>
    public static readonly Property legalStatus = new Property(new Uri("http://schema.org/legalStatus"));    

    ///<summary>
    ///Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href="/legislationConsolidates">legislationConsolidates</a> property.
    ///<see cref="http://schema.org/legislationChanges"/>
    ///</summary>
    public static readonly Property legislationChanges = new Property(new Uri("http://schema.org/legislationChanges"));    

    ///<summary>
    ///Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.
    ///<see cref="http://schema.org/legislationConsolidates"/>
    ///</summary>
    public static readonly Property legislationConsolidates = new Property(new Uri("http://schema.org/legislationConsolidates"));    

    ///<summary>
    ///The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.
    ///<see cref="http://schema.org/legislationDate"/>
    ///</summary>
    public static readonly Property legislationDate = new Property(new Uri("http://schema.org/legislationDate"));    

    ///<summary>
    ///The point-in-time at which the provided description of the legislation is valid (e.g. : when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the "National Insurance Contributions Act 2015")
    ///<see cref="http://schema.org/legislationDateVersion"/>
    ///</summary>
    public static readonly Property legislationDateVersion = new Property(new Uri("http://schema.org/legislationDateVersion"));    

    ///<summary>
    ///An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.
    ///<see cref="http://schema.org/legislationIdentifier"/>
    ///</summary>
    public static readonly Property legislationIdentifier = new Property(new Uri("http://schema.org/legislationIdentifier"));    

    ///<summary>
    ///The jurisdiction from which the legislation originates.
    ///<see cref="http://schema.org/legislationJurisdiction"/>
    ///</summary>
    public static readonly Property legislationJurisdiction = new Property(new Uri("http://schema.org/legislationJurisdiction"));    

    ///<summary>
    ///Whether the legislation is currently in force, not in force, or partially in force.
    ///<see cref="http://schema.org/legislationLegalForce"/>
    ///</summary>
    public static readonly Property legislationLegalForce = new Property(new Uri("http://schema.org/legislationLegalForce"));    

    ///<summary>
    ///The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a "stronger" legal value than the HTML file of the same act.
    ///<see cref="http://schema.org/legislationLegalValue"/>
    ///</summary>
    public static readonly Property legislationLegalValue = new Property(new Uri("http://schema.org/legislationLegalValue"));    

    ///<summary>
    ///The person or organization that originally passed or made the law : typically parliament (for primary legislation) or government (for secondary legislation). This indicates the "legal author" of the law, as opposed to its physical author.
    ///<see cref="http://schema.org/legislationPassedBy"/>
    ///</summary>
    public static readonly Property legislationPassedBy = new Property(new Uri("http://schema.org/legislationPassedBy"));    

    ///<summary>
    ///An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.
    ///<see cref="http://schema.org/legislationResponsible"/>
    ///</summary>
    public static readonly Property legislationResponsible = new Property(new Uri("http://schema.org/legislationResponsible"));    

    ///<summary>
    ///Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.
    ///<see cref="http://schema.org/legislationTransposes"/>
    ///</summary>
    public static readonly Property legislationTransposes = new Property(new Uri("http://schema.org/legislationTransposes"));    

    ///<summary>
    ///The type of the legislation. Examples of values are "law", "act", "directive", "decree", "regulation", "statutory instrument", "loi organique", "règlement grand-ducal", etc., depending on the country.
    ///<see cref="http://schema.org/legislationType"/>
    ///</summary>
    public static readonly Property legislationType = new Property(new Uri("http://schema.org/legislationType"));    

    ///<summary>
    ///An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
    ///<see cref="http://schema.org/leiCode"/>
    ///</summary>
    public static readonly Property leiCode = new Property(new Uri("http://schema.org/leiCode"));    

    ///<summary>
    ///A sub property of participant. The person that lends the object being borrowed.
    ///<see cref="http://schema.org/lender"/>
    ///</summary>
    public static readonly Property lender = new Property(new Uri("http://schema.org/lender"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is lesser than the object.
    ///<see cref="http://schema.org/lesser"/>
    ///</summary>
    public static readonly Property lesser = new Property(new Uri("http://schema.org/lesser"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
    ///<see cref="http://schema.org/lesserOrEqual"/>
    ///</summary>
    public static readonly Property lesserOrEqual = new Property(new Uri("http://schema.org/lesserOrEqual"));    

    ///<summary>
    ///The individual who adds lettering, including speech balloons and sound effects, to artwork.
    ///<see cref="http://schema.org/letterer"/>
    ///</summary>
    public static readonly Property letterer = new Property(new Uri("http://schema.org/letterer"));    

    ///<summary>
    ///A license document that applies to this content, typically indicated by URL.
    ///<see cref="http://schema.org/license"/>
    ///</summary>
    public static readonly Property license = new Property(new Uri("http://schema.org/license"));    

    ///<summary>
    ///A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
    ///<see cref="http://schema.org/line"/>
    ///</summary>
    public static readonly Property line = new Property(new Uri("http://schema.org/line"));    

    ///<summary>
    ///Indicates the relationship type of a Web link.
    ///<see cref="http://schema.org/linkRelationship"/>
    ///</summary>
    public static readonly Property linkRelationship = new Property(new Uri("http://schema.org/linkRelationship"));    

    ///<summary>
    ///An update to the LiveBlog.
    ///<see cref="http://schema.org/liveBlogUpdate"/>
    ///</summary>
    public static readonly Property liveBlogUpdate = new Property(new Uri("http://schema.org/liveBlogUpdate"));    

    ///<summary>
    ///Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.
    ///<see cref="http://schema.org/loanMortgageMandateAmount"/>
    ///</summary>
    public static readonly Property loanMortgageMandateAmount = new Property(new Uri("http://schema.org/loanMortgageMandateAmount"));    

    ///<summary>
    ///The amount of money to pay in a single payment.
    ///<see cref="http://schema.org/loanPaymentAmount"/>
    ///</summary>
    public static readonly Property loanPaymentAmount = new Property(new Uri("http://schema.org/loanPaymentAmount"));    

    ///<summary>
    ///Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.
    ///<see cref="http://schema.org/loanPaymentFrequency"/>
    ///</summary>
    public static readonly Property loanPaymentFrequency = new Property(new Uri("http://schema.org/loanPaymentFrequency"));    

    ///<summary>
    ///A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.
    ///<see cref="http://schema.org/loanRepaymentForm"/>
    ///</summary>
    public static readonly Property loanRepaymentForm = new Property(new Uri("http://schema.org/loanRepaymentForm"));    

    ///<summary>
    ///The duration of the loan or credit agreement.
    ///<see cref="http://schema.org/loanTerm"/>
    ///</summary>
    public static readonly Property loanTerm = new Property(new Uri("http://schema.org/loanTerm"));    

    ///<summary>
    ///The type of a loan or credit.
    ///<see cref="http://schema.org/loanType"/>
    ///</summary>
    public static readonly Property loanType = new Property(new Uri("http://schema.org/loanType"));    

    ///<summary>
    ///The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
    ///<see cref="http://schema.org/locationCreated"/>
    ///</summary>
    public static readonly Property locationCreated = new Property(new Uri("http://schema.org/locationCreated"));    

    ///<summary>
    ///A full description of the lodging unit.
    ///<see cref="http://schema.org/lodgingUnitDescription"/>
    ///</summary>
    public static readonly Property lodgingUnitDescription = new Property(new Uri("http://schema.org/lodgingUnitDescription"));    

    ///<summary>
    ///Textual description of the unit type (including suite vs. room, size of bed, etc.).
    ///<see cref="http://schema.org/lodgingUnitType"/>
    ///</summary>
    public static readonly Property lodgingUnitType = new Property(new Uri("http://schema.org/lodgingUnitType"));    

    ///<summary>
    ///An associated logo.
    ///<see cref="http://schema.org/logo"/>
    ///</summary>
    public static readonly Property logo = new Property(new Uri("http://schema.org/logo"));    

    ///<summary>
    ///The longitude of a location. For example <code>-122.08585</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
    ///<see cref="http://schema.org/longitude"/>
    ///</summary>
    public static readonly Property longitude = new Property(new Uri("http://schema.org/longitude"));    

    ///<summary>
    ///A sub property of participant. The loser of the action.
    ///<see cref="http://schema.org/loser"/>
    ///</summary>
    public static readonly Property loser = new Property(new Uri("http://schema.org/loser"));    

    ///<summary>
    ///The lowest price of all offers available.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/lowPrice"/>
    ///</summary>
    public static readonly Property lowPrice = new Property(new Uri("http://schema.org/lowPrice"));    

    ///<summary>
    ///The person who wrote the words.
    ///<see cref="http://schema.org/lyricist"/>
    ///</summary>
    public static readonly Property lyricist = new Property(new Uri("http://schema.org/lyricist"));    

    ///<summary>
    ///The words in the song.
    ///<see cref="http://schema.org/lyrics"/>
    ///</summary>
    public static readonly Property lyrics = new Property(new Uri("http://schema.org/lyrics"));    

    ///<summary>
    ///The manufacturer of the product.
    ///<see cref="http://schema.org/manufacturer"/>
    ///</summary>
    public static readonly Property manufacturer = new Property(new Uri("http://schema.org/manufacturer"));    

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/map"/>
    ///</summary>
    public static readonly Property map = new Property(new Uri("http://schema.org/map"));    

    ///<summary>
    ///Indicates the kind of Map, from the MapCategoryType Enumeration.
    ///<see cref="http://schema.org/mapType"/>
    ///</summary>
    public static readonly Property mapType = new Property(new Uri("http://schema.org/mapType"));    

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/maps"/>
    ///</summary>
    public static readonly Property maps = new Property(new Uri("http://schema.org/maps"));    

    ///<summary>
    ///A marginOfError for an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/marginOfError"/>
    ///</summary>
    public static readonly Property marginOfError = new Property(new Uri("http://schema.org/marginOfError"));    

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a link to the masthead page or a page listing top editorial management.
    ///<see cref="http://schema.org/masthead"/>
    ///</summary>
    public static readonly Property masthead = new Property(new Uri("http://schema.org/masthead"));    

    ///<summary>
    ///The quantity of the materials being described or an expression of the physical space they occupy.
    ///<see cref="http://schema.org/materialExtent"/>
    ///</summary>
    public static readonly Property materialExtent = new Property(new Uri("http://schema.org/materialExtent"));    

    ///<summary>
    ///The highest price if the price is a range.
    ///<see cref="http://schema.org/maxPrice"/>
    ///</summary>
    public static readonly Property maxPrice = new Property(new Uri("http://schema.org/maxPrice"));    

    ///<summary>
    ///The upper value of some characteristic or property.
    ///<see cref="http://schema.org/maxValue"/>
    ///</summary>
    public static readonly Property maxValue = new Property(new Uri("http://schema.org/maxValue"));    

    ///<summary>
    ///The total number of individuals that may attend an event or venue.
    ///<see cref="http://schema.org/maximumAttendeeCapacity"/>
    ///</summary>
    public static readonly Property maximumAttendeeCapacity = new Property(new Uri("http://schema.org/maximumAttendeeCapacity"));    

    ///<summary>
    ///Recommended intake of this supplement for a given population as defined by a specific recommending authority.
    ///<see cref="http://schema.org/maximumIntake"/>
    ///</summary>
    public static readonly Property maximumIntake = new Property(new Uri("http://schema.org/maximumIntake"));    

    ///<summary>
    ///Description of the meals that will be provided or available for purchase.
    ///<see cref="http://schema.org/mealService"/>
    ///</summary>
    public static readonly Property mealService = new Property(new Uri("http://schema.org/mealService"));    

    ///<summary>
    ///The measuredProperty of an <a class="localLink" href="http://schema.org/Observation">Observation</a>, either a schema.org property, a property from other RDF-compatible systems e.g. W3C RDF Data Cube, or schema.org extensions such as <a href="https://www.gs1.org/voc/?show=properties">GS1's</a>.
    ///<see cref="http://schema.org/measuredProperty"/>
    ///</summary>
    public static readonly Property measuredProperty = new Property(new Uri("http://schema.org/measuredProperty"));    

    ///<summary>
    ///The measuredValue of an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/measuredValue"/>
    ///</summary>
    public static readonly Property measuredValue = new Property(new Uri("http://schema.org/measuredValue"));    

    ///<summary>
    ///A technique or technology used in a <a class="localLink" href="http://schema.org/Dataset">Dataset</a> (or <a class="localLink" href="http://schema.org/DataDownload">DataDownload</a>, <a class="localLink" href="http://schema.org/DataCatalog">DataCatalog</a>),
    ///corresponding to the method used for measuring the corresponding variable(s) (described using <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a>). This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but rather as a high level summary for dataset discovery.<br/><br/>
    ///
    ///For example, if <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> is: molecule concentration, <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a> could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence".<br/><br/>
    ///
    ///If the <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> is "depression rating", the <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a> could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory".<br/><br/>
    ///
    ///If there are several <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> properties recorded for some given data object, use a <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a> for each <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> and attach the corresponding <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a>.
    ///<see cref="http://schema.org/measurementTechnique"/>
    ///</summary>
    public static readonly Property measurementTechnique = new Property(new Uri("http://schema.org/measurementTechnique"));    

    ///<summary>
    ///The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
    ///<see cref="http://schema.org/mechanismOfAction"/>
    ///</summary>
    public static readonly Property mechanismOfAction = new Property(new Uri("http://schema.org/mechanismOfAction"));    

    ///<summary>
    ///The median value.
    ///<see cref="http://schema.org/median"/>
    ///</summary>
    public static readonly Property median = new Property(new Uri("http://schema.org/median"));    

    ///<summary>
    ///A medical specialty of the provider.
    ///<see cref="http://schema.org/medicalSpecialty"/>
    ///</summary>
    public static readonly Property medicalSpecialty = new Property(new Uri("http://schema.org/medicalSpecialty"));    

    ///<summary>
    ///The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
    ///<see cref="http://schema.org/medicineSystem"/>
    ///</summary>
    public static readonly Property medicineSystem = new Property(new Uri("http://schema.org/medicineSystem"));    

    ///<summary>
    ///Indicates that the vehicle meets the respective emission standard.
    ///<see cref="http://schema.org/meetsEmissionStandard"/>
    ///</summary>
    public static readonly Property meetsEmissionStandard = new Property(new Uri("http://schema.org/meetsEmissionStandard"));    

    ///<summary>
    ///A member of this organization.
    ///<see cref="http://schema.org/members"/>
    ///</summary>
    public static readonly Property members = new Property(new Uri("http://schema.org/members"));    

    ///<summary>
    ///A unique identifier for the membership.
    ///<see cref="http://schema.org/membershipNumber"/>
    ///</summary>
    public static readonly Property membershipNumber = new Property(new Uri("http://schema.org/membershipNumber"));    

    ///<summary>
    ///The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (e.g. stars, miles, etc.)
    ///<see cref="http://schema.org/membershipPointsEarned"/>
    ///</summary>
    public static readonly Property membershipPointsEarned = new Property(new Uri("http://schema.org/membershipPointsEarned"));    

    ///<summary>
    ///Minimum memory requirements.
    ///<see cref="http://schema.org/memoryRequirements"/>
    ///</summary>
    public static readonly Property memoryRequirements = new Property(new Uri("http://schema.org/memoryRequirements"));    

    ///<summary>
    ///Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
    ///<see cref="http://schema.org/mentions"/>
    ///</summary>
    public static readonly Property mentions = new Property(new Uri("http://schema.org/mentions"));    

    ///<summary>
    ///Either the actual menu as a structured representation, as text, or a URL of the menu.
    ///<see cref="http://schema.org/menu"/>
    ///</summary>
    public static readonly Property menu = new Property(new Uri("http://schema.org/menu"));    

    ///<summary>
    ///Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.
    ///<see cref="http://schema.org/menuAddOn"/>
    ///</summary>
    public static readonly Property menuAddOn = new Property(new Uri("http://schema.org/menuAddOn"));    

    ///<summary>
    ///'merchant' is an out-dated term for 'seller'.
    ///<see cref="http://schema.org/merchant"/>
    ///</summary>
    public static readonly Property merchant = new Property(new Uri("http://schema.org/merchant"));    

    ///<summary>
    ///A CreativeWork attached to the message.
    ///<see cref="http://schema.org/messageAttachment"/>
    ///</summary>
    public static readonly Property messageAttachment = new Property(new Uri("http://schema.org/messageAttachment"));    

    ///<summary>
    ///The total distance travelled by the particular vehicle since its initial production, as read from its odometer.<br/><br/>
    ///
    ///Typical unit code(s): KMT for kilometers, SMI for statute miles
    ///<see cref="http://schema.org/mileageFromOdometer"/>
    ///</summary>
    public static readonly Property mileageFromOdometer = new Property(new Uri("http://schema.org/mileageFromOdometer"));    

    ///<summary>
    ///The lowest price if the price is a range.
    ///<see cref="http://schema.org/minPrice"/>
    ///</summary>
    public static readonly Property minPrice = new Property(new Uri("http://schema.org/minPrice"));    

    ///<summary>
    ///The lower value of some characteristic or property.
    ///<see cref="http://schema.org/minValue"/>
    ///</summary>
    public static readonly Property minValue = new Property(new Uri("http://schema.org/minValue"));    

    ///<summary>
    ///The minimum payment required at this time.
    ///<see cref="http://schema.org/minimumPaymentDue"/>
    ///</summary>
    public static readonly Property minimumPaymentDue = new Property(new Uri("http://schema.org/minimumPaymentDue"));    

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a statement on coverage priorities, including any public agenda or stance on issues.
    ///<see cref="http://schema.org/missionCoveragePrioritiesPolicy"/>
    ///</summary>
    public static readonly Property missionCoveragePrioritiesPolicy = new Property(new Uri("http://schema.org/missionCoveragePrioritiesPolicy"));    

    ///<summary>
    ///The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
    ///<see cref="http://schema.org/model"/>
    ///</summary>
    public static readonly Property model = new Property(new Uri("http://schema.org/model"));    

    ///<summary>
    ///The release date of a vehicle model (often used to differentiate versions of the same make and model).
    ///<see cref="http://schema.org/modelDate"/>
    ///</summary>
    public static readonly Property modelDate = new Property(new Uri("http://schema.org/modelDate"));    

    ///<summary>
    ///The date and time the reservation was modified.
    ///<see cref="http://schema.org/modifiedTime"/>
    ///</summary>
    public static readonly Property modifiedTime = new Property(new Uri("http://schema.org/modifiedTime"));    

    ///<summary>
    ///The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.
    ///<see cref="http://schema.org/monthlyMinimumRepaymentAmount"/>
    ///</summary>
    public static readonly Property monthlyMinimumRepaymentAmount = new Property(new Uri("http://schema.org/monthlyMinimumRepaymentAmount"));    

    ///<summary>
    ///The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
    ///<see cref="http://schema.org/mpn"/>
    ///</summary>
    public static readonly Property mpn = new Property(new Uri("http://schema.org/mpn"));    

    ///<summary>
    ///Whether multiple values are allowed for the property.  Default is false.
    ///<see cref="http://schema.org/multipleValues"/>
    ///</summary>
    public static readonly Property multipleValues = new Property(new Uri("http://schema.org/multipleValues"));    

    ///<summary>
    ///The movement the muscle generates.
    ///<see cref="http://schema.org/muscleAction"/>
    ///</summary>
    public static readonly Property muscleAction = new Property(new Uri("http://schema.org/muscleAction"));    

    ///<summary>
    ///An arrangement derived from the composition.
    ///<see cref="http://schema.org/musicArrangement"/>
    ///</summary>
    public static readonly Property musicArrangement = new Property(new Uri("http://schema.org/musicArrangement"));    

    ///<summary>
    ///The composer of the soundtrack.
    ///<see cref="http://schema.org/musicBy"/>
    ///</summary>
    public static readonly Property musicBy = new Property(new Uri("http://schema.org/musicBy"));    

    ///<summary>
    ///The type of composition (e.g. overture, sonata, symphony, etc.).
    ///<see cref="http://schema.org/musicCompositionForm"/>
    ///</summary>
    public static readonly Property musicCompositionForm = new Property(new Uri("http://schema.org/musicCompositionForm"));    

    ///<summary>
    ///A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
    ///<see cref="http://schema.org/musicGroupMember"/>
    ///</summary>
    public static readonly Property musicGroupMember = new Property(new Uri("http://schema.org/musicGroupMember"));    

    ///<summary>
    ///Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
    ///<see cref="http://schema.org/musicReleaseFormat"/>
    ///</summary>
    public static readonly Property musicReleaseFormat = new Property(new Uri("http://schema.org/musicReleaseFormat"));    

    ///<summary>
    ///The key, mode, or scale this composition uses.
    ///<see cref="http://schema.org/musicalKey"/>
    ///</summary>
    public static readonly Property musicalKey = new Property(new Uri("http://schema.org/musicalKey"));    

    ///<summary>
    ///The North American Industry Classification System (NAICS) code for a particular organization or business person.
    ///<see cref="http://schema.org/naics"/>
    ///</summary>
    public static readonly Property naics = new Property(new Uri("http://schema.org/naics"));    

    ///<summary>
    ///The name of the item.
    ///<see cref="http://schema.org/name"/>
    ///</summary>
    public static readonly Property name = new Property(new Uri("http://schema.org/name"));    

    ///<summary>
    ///A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
    ///<see cref="http://schema.org/namedPosition"/>
    ///</summary>
    public static readonly Property namedPosition = new Property(new Uri("http://schema.org/namedPosition"));    

    ///<summary>
    ///Nationality of the person.
    ///<see cref="http://schema.org/nationality"/>
    ///</summary>
    public static readonly Property nationality = new Property(new Uri("http://schema.org/nationality"));    

    ///<summary>
    ///The expected progression of the condition if it is not treated and allowed to progress naturally.
    ///<see cref="http://schema.org/naturalProgression"/>
    ///</summary>
    public static readonly Property naturalProgression = new Property(new Uri("http://schema.org/naturalProgression"));    

    ///<summary>
    ///The underlying innervation associated with the muscle.
    ///<see cref="http://schema.org/nerve"/>
    ///</summary>
    public static readonly Property nerve = new Property(new Uri("http://schema.org/nerve"));    

    ///<summary>
    ///The neurological pathway extension that involves muscle control.
    ///<see cref="http://schema.org/nerveMotor"/>
    ///</summary>
    public static readonly Property nerveMotor = new Property(new Uri("http://schema.org/nerveMotor"));    

    ///<summary>
    ///The total financial value of the person as calculated by subtracting assets from liabilities.
    ///<see cref="http://schema.org/netWorth"/>
    ///</summary>
    public static readonly Property netWorth = new Property(new Uri("http://schema.org/netWorth"));    

    ///<summary>
    ///A link to the ListItem that follows the current one.
    ///<see cref="http://schema.org/nextItem"/>
    ///</summary>
    public static readonly Property nextItem = new Property(new Uri("http://schema.org/nextItem"));    

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other news-related <a class="localLink" href="http://schema.org/Organization">Organization</a>, a statement explaining when authors of articles are not named in bylines.
    ///<see cref="http://schema.org/noBylinesPolicy"/>
    ///</summary>
    public static readonly Property noBylinesPolicy = new Property(new Uri("http://schema.org/noBylinesPolicy"));    

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is not equal to the object.
    ///<see cref="http://schema.org/nonEqual"/>
    ///</summary>
    public static readonly Property nonEqual = new Property(new Uri("http://schema.org/nonEqual"));    

    ///<summary>
    ///The generic name of this drug or supplement.
    ///<see cref="http://schema.org/nonProprietaryName"/>
    ///</summary>
    public static readonly Property nonProprietaryName = new Property(new Uri("http://schema.org/nonProprietaryName"));    

    ///<summary>
    ///Range of acceptable values for a typical patient, when applicable.
    ///<see cref="http://schema.org/normalRange"/>
    ///</summary>
    public static readonly Property normalRange = new Property(new Uri("http://schema.org/normalRange"));    

    ///<summary>
    ///Indicates the <a href="https://en.wikipedia.org/wiki/NATO_Stock_Number">NATO stock number</a> (nsn) of a <a class="localLink" href="http://schema.org/Product">Product</a>.
    ///<see cref="http://schema.org/nsn"/>
    ///</summary>
    public static readonly Property nsn = new Property(new Uri("http://schema.org/nsn"));    

    ///<summary>
    ///The number of adults staying in the unit.
    ///<see cref="http://schema.org/numAdults"/>
    ///</summary>
    public static readonly Property numAdults = new Property(new Uri("http://schema.org/numAdults"));    

    ///<summary>
    ///The number of children staying in the unit.
    ///<see cref="http://schema.org/numChildren"/>
    ///</summary>
    public static readonly Property numChildren = new Property(new Uri("http://schema.org/numChildren"));    

    ///<summary>
    ///Indicates the number of constraints (not counting <a class="localLink" href="http://schema.org/populationType">populationType</a>) defined for a particular <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>. This helps applications understand if they have access to a sufficiently complete description of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/numConstraints"/>
    ///</summary>
    public static readonly Property numConstraints = new Property(new Uri("http://schema.org/numConstraints"));    

    ///<summary>
    ///The number of tracks in this album or playlist.
    ///<see cref="http://schema.org/numTracks"/>
    ///</summary>
    public static readonly Property numTracks = new Property(new Uri("http://schema.org/numTracks"));    

    ///<summary>
    ///The number or type of airbags in the vehicle.
    ///<see cref="http://schema.org/numberOfAirbags"/>
    ///</summary>
    public static readonly Property numberOfAirbags = new Property(new Uri("http://schema.org/numberOfAirbags"));    

    ///<summary>
    ///The number of axles.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfAxles"/>
    ///</summary>
    public static readonly Property numberOfAxles = new Property(new Uri("http://schema.org/numberOfAxles"));    

    ///<summary>
    ///The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.
    ///<see cref="http://schema.org/numberOfBeds"/>
    ///</summary>
    public static readonly Property numberOfBeds = new Property(new Uri("http://schema.org/numberOfBeds"));    

    ///<summary>
    ///The number of doors.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfDoors"/>
    ///</summary>
    public static readonly Property numberOfDoors = new Property(new Uri("http://schema.org/numberOfDoors"));    

    ///<summary>
    ///The number of employees in an organization e.g. business.
    ///<see cref="http://schema.org/numberOfEmployees"/>
    ///</summary>
    public static readonly Property numberOfEmployees = new Property(new Uri("http://schema.org/numberOfEmployees"));    

    ///<summary>
    ///The number of episodes in this season or series.
    ///<see cref="http://schema.org/numberOfEpisodes"/>
    ///</summary>
    public static readonly Property numberOfEpisodes = new Property(new Uri("http://schema.org/numberOfEpisodes"));    

    ///<summary>
    ///The total number of forward gears available for the transmission system of the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfForwardGears"/>
    ///</summary>
    public static readonly Property numberOfForwardGears = new Property(new Uri("http://schema.org/numberOfForwardGears"));    

    ///<summary>
    ///The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
    ///<see cref="http://schema.org/numberOfItems"/>
    ///</summary>
    public static readonly Property numberOfItems = new Property(new Uri("http://schema.org/numberOfItems"));    

    ///<summary>
    ///The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.
    ///<see cref="http://schema.org/numberOfLoanPayments"/>
    ///</summary>
    public static readonly Property numberOfLoanPayments = new Property(new Uri("http://schema.org/numberOfLoanPayments"));    

    ///<summary>
    ///The number of pages in the book.
    ///<see cref="http://schema.org/numberOfPages"/>
    ///</summary>
    public static readonly Property numberOfPages = new Property(new Uri("http://schema.org/numberOfPages"));    

    ///<summary>
    ///Indicate how many people can play this game (minimum, maximum, or range).
    ///<see cref="http://schema.org/numberOfPlayers"/>
    ///</summary>
    public static readonly Property numberOfPlayers = new Property(new Uri("http://schema.org/numberOfPlayers"));    

    ///<summary>
    ///The number of owners of the vehicle, including the current one.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfPreviousOwners"/>
    ///</summary>
    public static readonly Property numberOfPreviousOwners = new Property(new Uri("http://schema.org/numberOfPreviousOwners"));    

    ///<summary>
    ///The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
    ///Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.
    ///<see cref="http://schema.org/numberOfRooms"/>
    ///</summary>
    public static readonly Property numberOfRooms = new Property(new Uri("http://schema.org/numberOfRooms"));    

    ///<summary>
    ///The number of seasons in this series.
    ///<see cref="http://schema.org/numberOfSeasons"/>
    ///</summary>
    public static readonly Property numberOfSeasons = new Property(new Uri("http://schema.org/numberOfSeasons"));    

    ///<summary>
    ///A number associated with a role in an organization, for example, the number on an athlete's jersey.
    ///<see cref="http://schema.org/numberedPosition"/>
    ///</summary>
    public static readonly Property numberedPosition = new Property(new Uri("http://schema.org/numberedPosition"));    

    ///<summary>
    ///Nutrition information about the recipe or menu item.
    ///<see cref="http://schema.org/nutrition"/>
    ///</summary>
    public static readonly Property nutrition = new Property(new Uri("http://schema.org/nutrition"));    

    ///<summary>
    ///The observationDate of an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/observationDate"/>
    ///</summary>
    public static readonly Property observationDate = new Property(new Uri("http://schema.org/observationDate"));    

    ///<summary>
    ///The observedNode of an <a class="localLink" href="http://schema.org/Observation">Observation</a>, often a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/observedNode"/>
    ///</summary>
    public static readonly Property observedNode = new Property(new Uri("http://schema.org/observedNode"));    

    ///<summary>
    ///The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
    ///Typical unit code(s): C62 for person
    ///<see cref="http://schema.org/occupancy"/>
    ///</summary>
    public static readonly Property occupancy = new Property(new Uri("http://schema.org/occupancy"));    

    ///<summary>
    ///The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
    ///<see cref="http://schema.org/occupationLocation"/>
    ///</summary>
    public static readonly Property occupationLocation = new Property(new Uri("http://schema.org/occupationLocation"));    

    ///<summary>
    ///A category describing the job, preferably using a term from a taxonomy such as <a href="http://www.onetcenter.org/taxonomy.html">BLS O*NET-SOC</a>, <a href="https://www.ilo.org/public/english/bureau/stat/isco/isco08/">ISCO-08</a> or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.<br/><br/>
    ///
    ///Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
    ///<see cref="http://schema.org/occupationalCategory"/>
    ///</summary>
    public static readonly Property occupationalCategory = new Property(new Uri("http://schema.org/occupationalCategory"));    

    ///<summary>
    ///A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.
    ///<see cref="http://schema.org/occupationalCredentialAwarded"/>
    ///</summary>
    public static readonly Property occupationalCredentialAwarded = new Property(new Uri("http://schema.org/occupationalCredentialAwarded"));    

    ///<summary>
    ///The number of offers for the product.
    ///<see cref="http://schema.org/offerCount"/>
    ///</summary>
    public static readonly Property offerCount = new Property(new Uri("http://schema.org/offerCount"));    

    ///<summary>
    ///An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
    ///<see cref="http://schema.org/offers"/>
    ///</summary>
    public static readonly Property offers = new Property(new Uri("http://schema.org/offers"));    

    ///<summary>
    ///Whether prescriptions can be delivered by mail.
    ///<see cref="http://schema.org/offersPrescriptionByMail"/>
    ///</summary>
    public static readonly Property offersPrescriptionByMail = new Property(new Uri("http://schema.org/offersPrescriptionByMail"));    

    ///<summary>
    ///The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>
    ///
    ///<ul>
    ///<li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>
    ///<li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>
    ///<li>Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>
    ///<li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/openingHours"/>
    ///</summary>
    public static readonly Property openingHours = new Property(new Uri("http://schema.org/openingHours"));    

    ///<summary>
    ///The opening hours of a certain place.
    ///<see cref="http://schema.org/openingHoursSpecification"/>
    ///</summary>
    public static readonly Property openingHoursSpecification = new Property(new Uri("http://schema.org/openingHoursSpecification"));    

    ///<summary>
    ///The opening hour of the place or service on the given day(s) of the week.
    ///<see cref="http://schema.org/opens"/>
    ///</summary>
    public static readonly Property opens = new Property(new Uri("http://schema.org/opens"));    

    ///<summary>
    ///Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
    ///<see cref="http://schema.org/operatingSystem"/>
    ///</summary>
    public static readonly Property operatingSystem = new Property(new Uri("http://schema.org/operatingSystem"));    

    ///<summary>
    ///A sub property of participant. The opponent on this action.
    ///<see cref="http://schema.org/opponent"/>
    ///</summary>
    public static readonly Property opponent = new Property(new Uri("http://schema.org/opponent"));    

    ///<summary>
    ///A sub property of object. The options subject to this action.
    ///<see cref="http://schema.org/option"/>
    ///</summary>
    public static readonly Property option = new Property(new Uri("http://schema.org/option"));    

    ///<summary>
    ///Date order was placed.
    ///<see cref="http://schema.org/orderDate"/>
    ///</summary>
    public static readonly Property orderDate = new Property(new Uri("http://schema.org/orderDate"));    

    ///<summary>
    ///The delivery of the parcel related to this order or order item.
    ///<see cref="http://schema.org/orderDelivery"/>
    ///</summary>
    public static readonly Property orderDelivery = new Property(new Uri("http://schema.org/orderDelivery"));    

    ///<summary>
    ///The identifier of the order item.
    ///<see cref="http://schema.org/orderItemNumber"/>
    ///</summary>
    public static readonly Property orderItemNumber = new Property(new Uri("http://schema.org/orderItemNumber"));    

    ///<summary>
    ///The current status of the order item.
    ///<see cref="http://schema.org/orderItemStatus"/>
    ///</summary>
    public static readonly Property orderItemStatus = new Property(new Uri("http://schema.org/orderItemStatus"));    

    ///<summary>
    ///The identifier of the transaction.
    ///<see cref="http://schema.org/orderNumber"/>
    ///</summary>
    public static readonly Property orderNumber = new Property(new Uri("http://schema.org/orderNumber"));    

    ///<summary>
    ///The number of the item ordered. If the property is not set, assume the quantity is one.
    ///<see cref="http://schema.org/orderQuantity"/>
    ///</summary>
    public static readonly Property orderQuantity = new Property(new Uri("http://schema.org/orderQuantity"));    

    ///<summary>
    ///The current status of the order.
    ///<see cref="http://schema.org/orderStatus"/>
    ///</summary>
    public static readonly Property orderStatus = new Property(new Uri("http://schema.org/orderStatus"));    

    ///<summary>
    ///The item ordered.
    ///<see cref="http://schema.org/orderedItem"/>
    ///</summary>
    public static readonly Property orderedItem = new Property(new Uri("http://schema.org/orderedItem"));    

    ///<summary>
    ///An organizer of an Event.
    ///<see cref="http://schema.org/organizer"/>
    ///</summary>
    public static readonly Property organizer = new Property(new Uri("http://schema.org/organizer"));    

    ///<summary>
    ///The place or point where a muscle arises.
    ///<see cref="http://schema.org/origin"/>
    ///</summary>
    public static readonly Property origin = new Property(new Uri("http://schema.org/origin"));    

    ///<summary>
    ///Shipper's address.
    ///<see cref="http://schema.org/originAddress"/>
    ///</summary>
    public static readonly Property originAddress = new Property(new Uri("http://schema.org/originAddress"));    

    ///<summary>
    ///The vasculature the lymphatic structure originates, or afferents, from.
    ///<see cref="http://schema.org/originatesFrom"/>
    ///</summary>
    public static readonly Property originatesFrom = new Property(new Uri("http://schema.org/originatesFrom"));    

    ///<summary>
    ///Expected or actual outcomes of the study.
    ///<see cref="http://schema.org/outcome"/>
    ///</summary>
    public static readonly Property outcome = new Property(new Uri("http://schema.org/outcome"));    

    ///<summary>
    ///Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.
    ///<see cref="http://schema.org/overdosage"/>
    ///</summary>
    public static readonly Property overdosage = new Property(new Uri("http://schema.org/overdosage"));    

    ///<summary>
    ///Descriptive information establishing the overarching theory/philosophy of the plan. May include the rationale for the name, the population where the plan first came to prominence, etc.
    ///<see cref="http://schema.org/overview"/>
    ///</summary>
    public static readonly Property overview = new Property(new Uri("http://schema.org/overview"));    

    ///<summary>
    ///The date and time of obtaining the product.
    ///<see cref="http://schema.org/ownedFrom"/>
    ///</summary>
    public static readonly Property ownedFrom = new Property(new Uri("http://schema.org/ownedFrom"));    

    ///<summary>
    ///The date and time of giving up ownership on the product.
    ///<see cref="http://schema.org/ownedThrough"/>
    ///</summary>
    public static readonly Property ownedThrough = new Property(new Uri("http://schema.org/ownedThrough"));    

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (often but not necessarily a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the <a class="localLink" href="http://schema.org/funder">funder</a> is also available and can be used to make basic funder information machine-readable.
    ///<see cref="http://schema.org/ownershipFundingInfo"/>
    ///</summary>
    public static readonly Property ownershipFundingInfo = new Property(new Uri("http://schema.org/ownershipFundingInfo"));    

    ///<summary>
    ///Products owned by the organization or person.
    ///<see cref="http://schema.org/owns"/>
    ///</summary>
    public static readonly Property owns = new Property(new Uri("http://schema.org/owns"));    

    ///<summary>
    ///The page on which the work ends; for example "138" or "xvi".
    ///<see cref="http://schema.org/pageEnd"/>
    ///</summary>
    public static readonly Property pageEnd = new Property(new Uri("http://schema.org/pageEnd"));    

    ///<summary>
    ///The page on which the work starts; for example "135" or "xiii".
    ///<see cref="http://schema.org/pageStart"/>
    ///</summary>
    public static readonly Property pageStart = new Property(new Uri("http://schema.org/pageStart"));    

    ///<summary>
    ///Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
    ///<see cref="http://schema.org/pagination"/>
    ///</summary>
    public static readonly Property pagination = new Property(new Uri("http://schema.org/pagination"));    

    ///<summary>
    ///The parent of a question, answer or item in general.
    ///<see cref="http://schema.org/parentItem"/>
    ///</summary>
    public static readonly Property parentItem = new Property(new Uri("http://schema.org/parentItem"));    

    ///<summary>
    ///A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
    ///<see cref="http://schema.org/parentService"/>
    ///</summary>
    public static readonly Property parentService = new Property(new Uri("http://schema.org/parentService"));    

    ///<summary>
    ///A parents of the person.
    ///<see cref="http://schema.org/parents"/>
    ///</summary>
    public static readonly Property parents = new Property(new Uri("http://schema.org/parents"));    

    ///<summary>
    ///The episode to which this clip belongs.
    ///<see cref="http://schema.org/partOfEpisode"/>
    ///</summary>
    public static readonly Property partOfEpisode = new Property(new Uri("http://schema.org/partOfEpisode"));    

    ///<summary>
    ///The order is being paid as part of the referenced Invoice.
    ///<see cref="http://schema.org/partOfInvoice"/>
    ///</summary>
    public static readonly Property partOfInvoice = new Property(new Uri("http://schema.org/partOfInvoice"));    

    ///<summary>
    ///The overall order the items in this delivery were included in.
    ///<see cref="http://schema.org/partOfOrder"/>
    ///</summary>
    public static readonly Property partOfOrder = new Property(new Uri("http://schema.org/partOfOrder"));    

    ///<summary>
    ///The season to which this episode belongs.
    ///<see cref="http://schema.org/partOfSeason"/>
    ///</summary>
    public static readonly Property partOfSeason = new Property(new Uri("http://schema.org/partOfSeason"));    

    ///<summary>
    ///The anatomical or organ system that this structure is part of.
    ///<see cref="http://schema.org/partOfSystem"/>
    ///</summary>
    public static readonly Property partOfSystem = new Property(new Uri("http://schema.org/partOfSystem"));    

    ///<summary>
    ///The TV series to which this episode or season belongs.
    ///<see cref="http://schema.org/partOfTVSeries"/>
    ///</summary>
    public static readonly Property partOfTVSeries = new Property(new Uri("http://schema.org/partOfTVSeries"));    

    ///<summary>
    ///Number of people the reservation should accommodate.
    ///<see cref="http://schema.org/partySize"/>
    ///</summary>
    public static readonly Property partySize = new Property(new Uri("http://schema.org/partySize"));    

    ///<summary>
    ///The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).
    ///<see cref="http://schema.org/passengerPriorityStatus"/>
    ///</summary>
    public static readonly Property passengerPriorityStatus = new Property(new Uri("http://schema.org/passengerPriorityStatus"));    

    ///<summary>
    ///The passenger's sequence number as assigned by the airline.
    ///<see cref="http://schema.org/passengerSequenceNumber"/>
    ///</summary>
    public static readonly Property passengerSequenceNumber = new Property(new Uri("http://schema.org/passengerSequenceNumber"));    

    ///<summary>
    ///Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.
    ///<see cref="http://schema.org/pathophysiology"/>
    ///</summary>
    public static readonly Property pathophysiology = new Property(new Uri("http://schema.org/pathophysiology"));    

    ///<summary>
    ///The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of <a class="localLink" href="http://schema.org/weight">weight</a> and <a class="localLink" href="http://schema.org/payload">payload</a></li>
    ///<li>Note 2: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 3: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 4: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/payload"/>
    ///</summary>
    public static readonly Property payload = new Property(new Uri("http://schema.org/payload"));    

    ///<summary>
    ///Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
    ///<see cref="http://schema.org/paymentAccepted"/>
    ///</summary>
    public static readonly Property paymentAccepted = new Property(new Uri("http://schema.org/paymentAccepted"));    

    ///<summary>
    ///The date that payment is due.
    ///<see cref="http://schema.org/paymentDue"/>
    ///</summary>
    public static readonly Property paymentDue = new Property(new Uri("http://schema.org/paymentDue"));    

    ///<summary>
    ///The name of the credit card or other method of payment for the order.
    ///<see cref="http://schema.org/paymentMethod"/>
    ///</summary>
    public static readonly Property paymentMethod = new Property(new Uri("http://schema.org/paymentMethod"));    

    ///<summary>
    ///An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
    ///<see cref="http://schema.org/paymentMethodId"/>
    ///</summary>
    public static readonly Property paymentMethodId = new Property(new Uri("http://schema.org/paymentMethodId"));    

    ///<summary>
    ///The status of payment; whether the invoice has been paid or not.
    ///<see cref="http://schema.org/paymentStatus"/>
    ///</summary>
    public static readonly Property paymentStatus = new Property(new Uri("http://schema.org/paymentStatus"));    

    ///<summary>
    ///The URL for sending a payment.
    ///<see cref="http://schema.org/paymentUrl"/>
    ///</summary>
    public static readonly Property paymentUrl = new Property(new Uri("http://schema.org/paymentUrl"));    

    ///<summary>
    ///The individual who draws the primary narrative artwork.
    ///<see cref="http://schema.org/penciler"/>
    ///</summary>
    public static readonly Property penciler = new Property(new Uri("http://schema.org/penciler"));    

    ///<summary>
    ///The 10th percentile value.
    ///<see cref="http://schema.org/percentile10"/>
    ///</summary>
    public static readonly Property percentile10 = new Property(new Uri("http://schema.org/percentile10"));    

    ///<summary>
    ///The 25th percentile value.
    ///<see cref="http://schema.org/percentile25"/>
    ///</summary>
    public static readonly Property percentile25 = new Property(new Uri("http://schema.org/percentile25"));    

    ///<summary>
    ///The 75th percentile value.
    ///<see cref="http://schema.org/percentile75"/>
    ///</summary>
    public static readonly Property percentile75 = new Property(new Uri("http://schema.org/percentile75"));    

    ///<summary>
    ///The 90th percentile value.
    ///<see cref="http://schema.org/percentile90"/>
    ///</summary>
    public static readonly Property percentile90 = new Property(new Uri("http://schema.org/percentile90"));    

    ///<summary>
    ///Event that this person is a performer or participant in.
    ///<see cref="http://schema.org/performerIn"/>
    ///</summary>
    public static readonly Property performerIn = new Property(new Uri("http://schema.org/performerIn"));    

    ///<summary>
    ///The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
    ///<see cref="http://schema.org/performers"/>
    ///</summary>
    public static readonly Property performers = new Property(new Uri("http://schema.org/performers"));    

    ///<summary>
    ///The type of permission granted the person, organization, or audience.
    ///<see cref="http://schema.org/permissionType"/>
    ///</summary>
    public static readonly Property permissionType = new Property(new Uri("http://schema.org/permissionType"));    

    ///<summary>
    ///Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
    ///<see cref="http://schema.org/permissions"/>
    ///</summary>
    public static readonly Property permissions = new Property(new Uri("http://schema.org/permissions"));    

    ///<summary>
    ///The target audience for this permit.
    ///<see cref="http://schema.org/permitAudience"/>
    ///</summary>
    public static readonly Property permitAudience = new Property(new Uri("http://schema.org/permitAudience"));    

    ///<summary>
    ///Indications regarding the permitted usage of the accommodation.
    ///<see cref="http://schema.org/permittedUsage"/>
    ///</summary>
    public static readonly Property permittedUsage = new Property(new Uri("http://schema.org/permittedUsage"));    

    ///<summary>
    ///Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.
    ///<see cref="http://schema.org/petsAllowed"/>
    ///</summary>
    public static readonly Property petsAllowed = new Property(new Uri("http://schema.org/petsAllowed"));    

    ///<summary>
    ///The phase of the clinical trial.
    ///<see cref="http://schema.org/phase"/>
    ///</summary>
    public static readonly Property phase = new Property(new Uri("http://schema.org/phase"));    

    ///<summary>
    ///Photographs of this place.
    ///<see cref="http://schema.org/photos"/>
    ///</summary>
    public static readonly Property photos = new Property(new Uri("http://schema.org/photos"));    

    ///<summary>
    ///Specific physiologic benefits associated to the plan.
    ///<see cref="http://schema.org/physiologicalBenefits"/>
    ///</summary>
    public static readonly Property physiologicalBenefits = new Property(new Uri("http://schema.org/physiologicalBenefits"));    

    ///<summary>
    ///Where a taxi will pick up a passenger or a rental car can be picked up.
    ///<see cref="http://schema.org/pickupLocation"/>
    ///</summary>
    public static readonly Property pickupLocation = new Property(new Uri("http://schema.org/pickupLocation"));    

    ///<summary>
    ///When a taxi will pickup a passenger or a rental car can be picked up.
    ///<see cref="http://schema.org/pickupTime"/>
    ///</summary>
    public static readonly Property pickupTime = new Property(new Uri("http://schema.org/pickupTime"));    

    ///<summary>
    ///Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
    ///<see cref="http://schema.org/playMode"/>
    ///</summary>
    public static readonly Property playMode = new Property(new Uri("http://schema.org/playMode"));    

    ///<summary>
    ///Player type required&#x2014;for example, Flash or Silverlight.
    ///<see cref="http://schema.org/playerType"/>
    ///</summary>
    public static readonly Property playerType = new Property(new Uri("http://schema.org/playerType"));    

    ///<summary>
    ///Number of players on the server.
    ///<see cref="http://schema.org/playersOnline"/>
    ///</summary>
    public static readonly Property playersOnline = new Property(new Uri("http://schema.org/playersOnline"));    

    ///<summary>
    ///A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
    ///<see cref="http://schema.org/polygon"/>
    ///</summary>
    public static readonly Property polygon = new Property(new Uri("http://schema.org/polygon"));    

    ///<summary>
    ///Any characteristics of the population used in the study, e.g. 'males under 65'.
    ///<see cref="http://schema.org/population"/>
    ///</summary>
    public static readonly Property population = new Property(new Uri("http://schema.org/population"));    

    ///<summary>
    ///Indicates the populationType common to all members of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/populationType"/>
    ///</summary>
    public static readonly Property populationType = new Property(new Uri("http://schema.org/populationType"));    

    ///<summary>
    ///A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.
    ///<see cref="http://schema.org/possibleComplication"/>
    ///</summary>
    public static readonly Property possibleComplication = new Property(new Uri("http://schema.org/possibleComplication"));    

    ///<summary>
    ///A possible treatment to address this condition, sign or symptom.
    ///<see cref="http://schema.org/possibleTreatment"/>
    ///</summary>
    public static readonly Property possibleTreatment = new Property(new Uri("http://schema.org/possibleTreatment"));    

    ///<summary>
    ///The post office box number for PO box addresses.
    ///<see cref="http://schema.org/postOfficeBoxNumber"/>
    ///</summary>
    public static readonly Property postOfficeBoxNumber = new Property(new Uri("http://schema.org/postOfficeBoxNumber"));    

    ///<summary>
    ///A description of the postoperative procedures, care, and/or followups for this device.
    ///<see cref="http://schema.org/postOp"/>
    ///</summary>
    public static readonly Property postOp = new Property(new Uri("http://schema.org/postOp"));    

    ///<summary>
    ///The postal code. For example, 94043.
    ///<see cref="http://schema.org/postalCode"/>
    ///</summary>
    public static readonly Property postalCode = new Property(new Uri("http://schema.org/postalCode"));    

    ///<summary>
    ///Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
    ///<see cref="http://schema.org/potentialAction"/>
    ///</summary>
    public static readonly Property potentialAction = new Property(new Uri("http://schema.org/potentialAction"));    

    ///<summary>
    ///A description of the workup, testing, and other preparations required before implanting this device.
    ///<see cref="http://schema.org/preOp"/>
    ///</summary>
    public static readonly Property preOp = new Property(new Uri("http://schema.org/preOp"));    

    ///<summary>
    ///A pointer from a previous, often discontinued variant of the product to its newer variant.
    ///<see cref="http://schema.org/predecessorOf"/>
    ///</summary>
    public static readonly Property predecessorOf = new Property(new Uri("http://schema.org/predecessorOf"));    

    ///<summary>
    ///Pregnancy category of this drug.
    ///<see cref="http://schema.org/pregnancyCategory"/>
    ///</summary>
    public static readonly Property pregnancyCategory = new Property(new Uri("http://schema.org/pregnancyCategory"));    

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.
    ///<see cref="http://schema.org/pregnancyWarning"/>
    ///</summary>
    public static readonly Property pregnancyWarning = new Property(new Uri("http://schema.org/pregnancyWarning"));    

    ///<summary>
    ///The length of time it takes to prepare the items to be used in instructions or a direction, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/prepTime"/>
    ///</summary>
    public static readonly Property prepTime = new Property(new Uri("http://schema.org/prepTime"));    

    ///<summary>
    ///Typical preparation that a patient must undergo before having the procedure performed.
    ///<see cref="http://schema.org/preparation"/>
    ///</summary>
    public static readonly Property preparation = new Property(new Uri("http://schema.org/preparation"));    

    ///<summary>
    ///Link to prescribing information for the drug.
    ///<see cref="http://schema.org/prescribingInfo"/>
    ///</summary>
    public static readonly Property prescribingInfo = new Property(new Uri("http://schema.org/prescribingInfo"));    

    ///<summary>
    ///Indicates the status of drug prescription eg. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.
    ///<see cref="http://schema.org/prescriptionStatus"/>
    ///</summary>
    public static readonly Property prescriptionStatus = new Property(new Uri("http://schema.org/prescriptionStatus"));    

    ///<summary>
    ///A link to the ListItem that preceeds the current one.
    ///<see cref="http://schema.org/previousItem"/>
    ///</summary>
    public static readonly Property previousItem = new Property(new Uri("http://schema.org/previousItem"));    

    ///<summary>
    ///Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
    ///<see cref="http://schema.org/previousStartDate"/>
    ///</summary>
    public static readonly Property previousStartDate = new Property(new Uri("http://schema.org/previousStartDate"));    

    ///<summary>
    ///The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use the <a class="localLink" href="http://schema.org/priceCurrency">priceCurrency</a> property (with standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR") instead of including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///<li>Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/price"/>
    ///</summary>
    public static readonly Property price = new Property(new Uri("http://schema.org/price"));    

    ///<summary>
    ///This property links to all <a class="localLink" href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a> nodes that apply in parallel for the <a class="localLink" href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a> node.
    ///<see cref="http://schema.org/priceComponent"/>
    ///</summary>
    public static readonly Property priceComponent = new Property(new Uri("http://schema.org/priceComponent"));    

    ///<summary>
    ///The currency of the price, or a price component when attached to <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> and its subtypes.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/priceCurrency"/>
    ///</summary>
    public static readonly Property priceCurrency = new Property(new Uri("http://schema.org/priceCurrency"));    

    ///<summary>
    ///The price range of the business, for example <code>$$$</code>.
    ///<see cref="http://schema.org/priceRange"/>
    ///</summary>
    public static readonly Property priceRange = new Property(new Uri("http://schema.org/priceRange"));    

    ///<summary>
    ///One or more detailed price specifications, indicating the unit price and delivery or payment charges.
    ///<see cref="http://schema.org/priceSpecification"/>
    ///</summary>
    public static readonly Property priceSpecification = new Property(new Uri("http://schema.org/priceSpecification"));    

    ///<summary>
    ///A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.
    ///<see cref="http://schema.org/priceType"/>
    ///</summary>
    public static readonly Property priceType = new Property(new Uri("http://schema.org/priceType"));    

    ///<summary>
    ///The date after which the price is no longer available.
    ///<see cref="http://schema.org/priceValidUntil"/>
    ///</summary>
    public static readonly Property priceValidUntil = new Property(new Uri("http://schema.org/priceValidUntil"));    

    ///<summary>
    ///Indicates the main image on the page.
    ///<see cref="http://schema.org/primaryImageOfPage"/>
    ///</summary>
    public static readonly Property primaryImageOfPage = new Property(new Uri("http://schema.org/primaryImageOfPage"));    

    ///<summary>
    ///A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.
    ///<see cref="http://schema.org/primaryPrevention"/>
    ///</summary>
    public static readonly Property primaryPrevention = new Property(new Uri("http://schema.org/primaryPrevention"));    

    ///<summary>
    ///The number of the column in which the NewsArticle appears in the print edition.
    ///<see cref="http://schema.org/printColumn"/>
    ///</summary>
    public static readonly Property printColumn = new Property(new Uri("http://schema.org/printColumn"));    

    ///<summary>
    ///The edition of the print product in which the NewsArticle appears.
    ///<see cref="http://schema.org/printEdition"/>
    ///</summary>
    public static readonly Property printEdition = new Property(new Uri("http://schema.org/printEdition"));    

    ///<summary>
    ///If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
    ///<see cref="http://schema.org/printPage"/>
    ///</summary>
    public static readonly Property printPage = new Property(new Uri("http://schema.org/printPage"));    

    ///<summary>
    ///If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
    ///<see cref="http://schema.org/printSection"/>
    ///</summary>
    public static readonly Property printSection = new Property(new Uri("http://schema.org/printSection"));    

    ///<summary>
    ///A description of the procedure involved in setting up, using, and/or installing the device.
    ///<see cref="http://schema.org/procedure"/>
    ///</summary>
    public static readonly Property procedure = new Property(new Uri("http://schema.org/procedure"));    

    ///<summary>
    ///The type of procedure, for example Surgical, Noninvasive, or Percutaneous.
    ///<see cref="http://schema.org/procedureType"/>
    ///</summary>
    public static readonly Property procedureType = new Property(new Uri("http://schema.org/procedureType"));    

    ///<summary>
    ///Estimated processing time for the service using this channel.
    ///<see cref="http://schema.org/processingTime"/>
    ///</summary>
    public static readonly Property processingTime = new Property(new Uri("http://schema.org/processingTime"));    

    ///<summary>
    ///Processor architecture required to run the application (e.g. IA64).
    ///<see cref="http://schema.org/processorRequirements"/>
    ///</summary>
    public static readonly Property processorRequirements = new Property(new Uri("http://schema.org/processorRequirements"));    

    ///<summary>
    ///The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).
    ///<see cref="http://schema.org/producer"/>
    ///</summary>
    public static readonly Property producer = new Property(new Uri("http://schema.org/producer"));    

    ///<summary>
    ///The tangible thing generated by the service, e.g. a passport, permit, etc.
    ///<see cref="http://schema.org/produces"/>
    ///</summary>
    public static readonly Property produces = new Property(new Uri("http://schema.org/produces"));    

    ///<summary>
    ///The product identifier, such as ISBN. For example: <code>meta itemprop="productID" content="isbn:123-456-789"</code>.
    ///<see cref="http://schema.org/productID"/>
    ///</summary>
    public static readonly Property productID = new Property(new Uri("http://schema.org/productID"));    

    ///<summary>
    ///The productReturnDays property indicates the number of days (from purchase) within which relevant product return policy is applicable.
    ///<see cref="http://schema.org/productReturnDays"/>
    ///</summary>
    public static readonly Property productReturnDays = new Property(new Uri("http://schema.org/productReturnDays"));    

    ///<summary>
    ///Indicates a Web page or service by URL, for product return.
    ///<see cref="http://schema.org/productReturnLink"/>
    ///</summary>
    public static readonly Property productReturnLink = new Property(new Uri("http://schema.org/productReturnLink"));    

    ///<summary>
    ///The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
    ///<see cref="http://schema.org/productSupported"/>
    ///</summary>
    public static readonly Property productSupported = new Property(new Uri("http://schema.org/productSupported"));    

    ///<summary>
    ///The production company or studio responsible for the item e.g. series, video game, episode etc.
    ///<see cref="http://schema.org/productionCompany"/>
    ///</summary>
    public static readonly Property productionCompany = new Property(new Uri("http://schema.org/productionCompany"));    

    ///<summary>
    ///The date of production of the item, e.g. vehicle.
    ///<see cref="http://schema.org/productionDate"/>
    ///</summary>
    public static readonly Property productionDate = new Property(new Uri("http://schema.org/productionDate"));    

    ///<summary>
    ///Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
    ///<see cref="http://schema.org/proficiencyLevel"/>
    ///</summary>
    public static readonly Property proficiencyLevel = new Property(new Uri("http://schema.org/proficiencyLevel"));    

    ///<summary>
    ///Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
    ///<see cref="http://schema.org/programMembershipUsed"/>
    ///</summary>
    public static readonly Property programMembershipUsed = new Property(new Uri("http://schema.org/programMembershipUsed"));    

    ///<summary>
    ///The program providing the membership.
    ///<see cref="http://schema.org/programName"/>
    ///</summary>
    public static readonly Property programName = new Property(new Uri("http://schema.org/programName"));    

    ///<summary>
    ///Prerequisites for enrolling in the program.
    ///<see cref="http://schema.org/programPrerequisites"/>
    ///</summary>
    public static readonly Property programPrerequisites = new Property(new Uri("http://schema.org/programPrerequisites"));    

    ///<summary>
    ///The computer programming language.
    ///<see cref="http://schema.org/programmingLanguage"/>
    ///</summary>
    public static readonly Property programmingLanguage = new Property(new Uri("http://schema.org/programmingLanguage"));    

    ///<summary>
    ///Indicates whether API is managed or unmanaged.
    ///<see cref="http://schema.org/programmingModel"/>
    ///</summary>
    public static readonly Property programmingModel = new Property(new Uri("http://schema.org/programmingModel"));    

    ///<summary>
    ///A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
    ///(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
    ///a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
    ///Standards bodies should promote a standard prefix for the identifiers of properties from their standards.
    ///<see cref="http://schema.org/propertyID"/>
    ///</summary>
    public static readonly Property propertyID = new Property(new Uri("http://schema.org/propertyID"));    

    ///<summary>
    ///Proprietary name given to the diet plan, typically by its originator or creator.
    ///<see cref="http://schema.org/proprietaryName"/>
    ///</summary>
    public static readonly Property proprietaryName = new Property(new Uri("http://schema.org/proprietaryName"));    

    ///<summary>
    ///The number of grams of protein.
    ///<see cref="http://schema.org/proteinContent"/>
    ///</summary>
    public static readonly Property proteinContent = new Property(new Uri("http://schema.org/proteinContent"));    

    ///<summary>
    ///Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
    ///<see cref="http://schema.org/providerMobility"/>
    ///</summary>
    public static readonly Property providerMobility = new Property(new Uri("http://schema.org/providerMobility"));    

    ///<summary>
    ///The service provided by this channel.
    ///<see cref="http://schema.org/providesService"/>
    ///</summary>
    public static readonly Property providesService = new Property(new Uri("http://schema.org/providesService"));    

    ///<summary>
    ///A flag to signal that the <a class="localLink" href="http://schema.org/Place">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value
    ///<see cref="http://schema.org/publicAccess"/>
    ///</summary>
    public static readonly Property publicAccess = new Property(new Uri("http://schema.org/publicAccess"));    

    ///<summary>
    ///A publication event associated with the item.
    ///<see cref="http://schema.org/publication"/>
    ///</summary>
    public static readonly Property publication = new Property(new Uri("http://schema.org/publication"));    

    ///<summary>
    ///The type of the medical article, taken from the US NLM MeSH publication type catalog. See also <a href="http://www.nlm.nih.gov/mesh/pubtypes.html">MeSH documentation</a>.
    ///<see cref="http://schema.org/publicationType"/>
    ///</summary>
    public static readonly Property publicationType = new Property(new Uri("http://schema.org/publicationType"));    

    ///<summary>
    ///An agent associated with the publication event.
    ///<see cref="http://schema.org/publishedBy"/>
    ///</summary>
    public static readonly Property publishedBy = new Property(new Uri("http://schema.org/publishedBy"));    

    ///<summary>
    ///A broadcast service associated with the publication event.
    ///<see cref="http://schema.org/publishedOn"/>
    ///</summary>
    public static readonly Property publishedOn = new Property(new Uri("http://schema.org/publishedOn"));    

    ///<summary>
    ///The publisher of the creative work.
    ///<see cref="http://schema.org/publisher"/>
    ///</summary>
    public static readonly Property publisher = new Property(new Uri("http://schema.org/publisher"));    

    ///<summary>
    ///The publishing division which published the comic.
    ///<see cref="http://schema.org/publisherImprint"/>
    ///</summary>
    public static readonly Property publisherImprint = new Property(new Uri("http://schema.org/publisherImprint"));    

    ///<summary>
    ///The date the item e.g. vehicle was purchased by the current owner.
    ///<see cref="http://schema.org/purchaseDate"/>
    ///</summary>
    public static readonly Property purchaseDate = new Property(new Uri("http://schema.org/purchaseDate"));    

    ///<summary>
    ///A goal towards an action is taken. Can be concrete or abstract.
    ///<see cref="http://schema.org/purpose"/>
    ///</summary>
    public static readonly Property purpose = new Property(new Uri("http://schema.org/purpose"));    

    ///<summary>
    ///Specific qualifications required for this role or Occupation.
    ///<see cref="http://schema.org/qualifications"/>
    ///</summary>
    public static readonly Property qualifications = new Property(new Uri("http://schema.org/qualifications"));    

    ///<summary>
    ///A sub property of instrument. The query used on this action.
    ///<see cref="http://schema.org/query"/>
    ///</summary>
    public static readonly Property query = new Property(new Uri("http://schema.org/query"));    

    ///<summary>
    ///The task that a player-controlled character, or group of characters may complete in order to gain a reward.
    ///<see cref="http://schema.org/quest"/>
    ///</summary>
    public static readonly Property quest = new Property(new Uri("http://schema.org/quest"));    

    ///<summary>
    ///A sub property of object. A question.
    ///<see cref="http://schema.org/question"/>
    ///</summary>
    public static readonly Property question = new Property(new Uri("http://schema.org/question"));    

    ///<summary>
    ///Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
    ///<see cref="http://schema.org/rangeIncludes"/>
    ///</summary>
    public static readonly Property rangeIncludes = new Property(new Uri("http://schema.org/rangeIncludes"));    

    ///<summary>
    ///The count of total number of ratings.
    ///<see cref="http://schema.org/ratingCount"/>
    ///</summary>
    public static readonly Property ratingCount = new Property(new Uri("http://schema.org/ratingCount"));    

    ///<summary>
    ///A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with "fact check" markup using <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>.
    ///<see cref="http://schema.org/ratingExplanation"/>
    ///</summary>
    public static readonly Property ratingExplanation = new Property(new Uri("http://schema.org/ratingExplanation"));    

    ///<summary>
    ///The rating for the content.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ratingValue"/>
    ///</summary>
    public static readonly Property ratingValue = new Property(new Uri("http://schema.org/ratingValue"));    

    ///<summary>
    ///A person who reads (performs) the audiobook.
    ///<see cref="http://schema.org/readBy"/>
    ///</summary>
    public static readonly Property readBy = new Property(new Uri("http://schema.org/readBy"));    

    ///<summary>
    ///Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
    ///<see cref="http://schema.org/readonlyValue"/>
    ///</summary>
    public static readonly Property readonlyValue = new Property(new Uri("http://schema.org/readonlyValue"));    

    ///<summary>
    ///A sub property of participant. The real estate agent involved in the action.
    ///<see cref="http://schema.org/realEstateAgent"/>
    ///</summary>
    public static readonly Property realEstateAgent = new Property(new Uri("http://schema.org/realEstateAgent"));    

    ///<summary>
    ///A sub property of instrument. The recipe/instructions used to perform the action.
    ///<see cref="http://schema.org/recipe"/>
    ///</summary>
    public static readonly Property recipe = new Property(new Uri("http://schema.org/recipe"));    

    ///<summary>
    ///The category of the recipe—for example, appetizer, entree, etc.
    ///<see cref="http://schema.org/recipeCategory"/>
    ///</summary>
    public static readonly Property recipeCategory = new Property(new Uri("http://schema.org/recipeCategory"));    

    ///<summary>
    ///The cuisine of the recipe (for example, French or Ethiopian).
    ///<see cref="http://schema.org/recipeCuisine"/>
    ///</summary>
    public static readonly Property recipeCuisine = new Property(new Uri("http://schema.org/recipeCuisine"));    

    ///<summary>
    ///A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
    ///<see cref="http://schema.org/recipeInstructions"/>
    ///</summary>
    public static readonly Property recipeInstructions = new Property(new Uri("http://schema.org/recipeInstructions"));    

    ///<summary>
    ///The quantity produced by the recipe (for example, number of people served, number of servings, etc).
    ///<see cref="http://schema.org/recipeYield"/>
    ///</summary>
    public static readonly Property recipeYield = new Property(new Uri("http://schema.org/recipeYield"));    

    ///<summary>
    ///An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.
    ///<see cref="http://schema.org/recognizedBy"/>
    ///</summary>
    public static readonly Property recognizedBy = new Property(new Uri("http://schema.org/recognizedBy"));    

    ///<summary>
    ///If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
    ///<see cref="http://schema.org/recognizingAuthority"/>
    ///</summary>
    public static readonly Property recognizingAuthority = new Property(new Uri("http://schema.org/recognizingAuthority"));    

    ///<summary>
    ///Strength of the guideline's recommendation (e.g. 'class I').
    ///<see cref="http://schema.org/recommendationStrength"/>
    ///</summary>
    public static readonly Property recommendationStrength = new Property(new Uri("http://schema.org/recommendationStrength"));    

    ///<summary>
    ///Recommended intake of this supplement for a given population as defined by a specific recommending authority.
    ///<see cref="http://schema.org/recommendedIntake"/>
    ///</summary>
    public static readonly Property recommendedIntake = new Property(new Uri("http://schema.org/recommendedIntake"));    

    ///<summary>
    ///The label that issued the release.
    ///<see cref="http://schema.org/recordLabel"/>
    ///</summary>
    public static readonly Property recordLabel = new Property(new Uri("http://schema.org/recordLabel"));    

    ///<summary>
    ///The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.
    ///<see cref="http://schema.org/recourseLoan"/>
    ///</summary>
    public static readonly Property recourseLoan = new Property(new Uri("http://schema.org/recourseLoan"));    

    ///<summary>
    ///The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
    ///<see cref="http://schema.org/referenceQuantity"/>
    ///</summary>
    public static readonly Property referenceQuantity = new Property(new Uri("http://schema.org/referenceQuantity"));    

    ///<summary>
    ///The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.
    ///<see cref="http://schema.org/referencesOrder"/>
    ///</summary>
    public static readonly Property referencesOrder = new Property(new Uri("http://schema.org/referencesOrder"));    

    ///<summary>
    ///A refundType, from an enumerated list.
    ///<see cref="http://schema.org/refundType"/>
    ///</summary>
    public static readonly Property refundType = new Property(new Uri("http://schema.org/refundType"));    

    ///<summary>
    ///The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.
    ///<see cref="http://schema.org/regionDrained"/>
    ///</summary>
    public static readonly Property regionDrained = new Property(new Uri("http://schema.org/regionDrained"));    

    ///<summary>
    ///The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>.
    ///<see cref="http://schema.org/regionsAllowed"/>
    ///</summary>
    public static readonly Property regionsAllowed = new Property(new Uri("http://schema.org/regionsAllowed"));    

    ///<summary>
    ///Anatomical systems or structures that relate to the superficial anatomy.
    ///<see cref="http://schema.org/relatedAnatomy"/>
    ///</summary>
    public static readonly Property relatedAnatomy = new Property(new Uri("http://schema.org/relatedAnatomy"));    

    ///<summary>
    ///A medical condition associated with this anatomy.
    ///<see cref="http://schema.org/relatedCondition"/>
    ///</summary>
    public static readonly Property relatedCondition = new Property(new Uri("http://schema.org/relatedCondition"));    

    ///<summary>
    ///Any other drug related to this one, for example commonly-prescribed alternatives.
    ///<see cref="http://schema.org/relatedDrug"/>
    ///</summary>
    public static readonly Property relatedDrug = new Property(new Uri("http://schema.org/relatedDrug"));    

    ///<summary>
    ///A link related to this web page, for example to other related web pages.
    ///<see cref="http://schema.org/relatedLink"/>
    ///</summary>
    public static readonly Property relatedLink = new Property(new Uri("http://schema.org/relatedLink"));    

    ///<summary>
    ///Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.
    ///<see cref="http://schema.org/relatedStructure"/>
    ///</summary>
    public static readonly Property relatedStructure = new Property(new Uri("http://schema.org/relatedStructure"));    

    ///<summary>
    ///A medical therapy related to this anatomy.
    ///<see cref="http://schema.org/relatedTherapy"/>
    ///</summary>
    public static readonly Property relatedTherapy = new Property(new Uri("http://schema.org/relatedTherapy"));    

    ///<summary>
    ///The most generic familial relation.
    ///<see cref="http://schema.org/relatedTo"/>
    ///</summary>
    public static readonly Property relatedTo = new Property(new Uri("http://schema.org/relatedTo"));    

    ///<summary>
    ///The release date of a product or product model. This can be used to distinguish the exact variant of a product.
    ///<see cref="http://schema.org/releaseDate"/>
    ///</summary>
    public static readonly Property releaseDate = new Property(new Uri("http://schema.org/releaseDate"));    

    ///<summary>
    ///Description of what changed in this version.
    ///<see cref="http://schema.org/releaseNotes"/>
    ///</summary>
    public static readonly Property releaseNotes = new Property(new Uri("http://schema.org/releaseNotes"));    

    ///<summary>
    ///The place and time the release was issued, expressed as a PublicationEvent.
    ///<see cref="http://schema.org/releasedEvent"/>
    ///</summary>
    public static readonly Property releasedEvent = new Property(new Uri("http://schema.org/releasedEvent"));    

    ///<summary>
    ///The Occupation for the JobPosting.
    ///<see cref="http://schema.org/relevantOccupation"/>
    ///</summary>
    public static readonly Property relevantOccupation = new Property(new Uri("http://schema.org/relevantOccupation"));    

    ///<summary>
    ///If applicable, a medical specialty in which this entity is relevant.
    ///<see cref="http://schema.org/relevantSpecialty"/>
    ///</summary>
    public static readonly Property relevantSpecialty = new Property(new Uri("http://schema.org/relevantSpecialty"));    

    ///<summary>
    ///The number of attendee places for an event that remain unallocated.
    ///<see cref="http://schema.org/remainingAttendeeCapacity"/>
    ///</summary>
    public static readonly Property remainingAttendeeCapacity = new Property(new Uri("http://schema.org/remainingAttendeeCapacity"));    

    ///<summary>
    ///Whether the terms for payment of interest can be renegotiated during the life of the loan.
    ///<see cref="http://schema.org/renegotiableLoan"/>
    ///</summary>
    public static readonly Property renegotiableLoan = new Property(new Uri("http://schema.org/renegotiableLoan"));    

    ///<summary>
    ///Defines the number of times a recurring <a class="localLink" href="http://schema.org/Event">Event</a> will take place
    ///<see cref="http://schema.org/repeatCount"/>
    ///</summary>
    public static readonly Property repeatCount = new Property(new Uri("http://schema.org/repeatCount"));    

    ///<summary>
    ///Defines the frequency at which <a class="localLink" href="http://schema.org/Events">Events</a> will occur according to a schedule <a class="localLink" href="http://schema.org/Schedule">Schedule</a>. The intervals between
    ///      events should be defined as a <a class="localLink" href="http://schema.org/Duration">Duration</a> of time.
    ///<see cref="http://schema.org/repeatFrequency"/>
    ///</summary>
    public static readonly Property repeatFrequency = new Property(new Uri("http://schema.org/repeatFrequency"));    

    ///<summary>
    ///Number of times one should repeat the activity.
    ///<see cref="http://schema.org/repetitions"/>
    ///</summary>
    public static readonly Property repetitions = new Property(new Uri("http://schema.org/repetitions"));    

    ///<summary>
    ///A sub property of object. The object that is being replaced.
    ///<see cref="http://schema.org/replacee"/>
    ///</summary>
    public static readonly Property replacee = new Property(new Uri("http://schema.org/replacee"));    

    ///<summary>
    ///A sub property of object. The object that replaces.
    ///<see cref="http://schema.org/replacer"/>
    ///</summary>
    public static readonly Property replacer = new Property(new Uri("http://schema.org/replacer"));    

    ///<summary>
    ///The URL at which a reply may be posted to the specified UserComment.
    ///<see cref="http://schema.org/replyToUrl"/>
    ///</summary>
    public static readonly Property replyToUrl = new Property(new Uri("http://schema.org/replyToUrl"));    

    ///<summary>
    ///The number or other unique designator assigned to a Report by the publishing organization.
    ///<see cref="http://schema.org/reportNumber"/>
    ///</summary>
    public static readonly Property reportNumber = new Property(new Uri("http://schema.org/reportNumber"));    

    ///<summary>
    ///Indicates whether this image is representative of the content of the page.
    ///<see cref="http://schema.org/representativeOfPage"/>
    ///</summary>
    public static readonly Property representativeOfPage = new Property(new Uri("http://schema.org/representativeOfPage"));    

    ///<summary>
    ///Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)
    ///<see cref="http://schema.org/requiredCollateral"/>
    ///</summary>
    public static readonly Property requiredCollateral = new Property(new Uri("http://schema.org/requiredCollateral"));    

    ///<summary>
    ///Audiences defined by a person's gender.
    ///<see cref="http://schema.org/requiredGender"/>
    ///</summary>
    public static readonly Property requiredGender = new Property(new Uri("http://schema.org/requiredGender"));    

    ///<summary>
    ///Audiences defined by a person's maximum age.
    ///<see cref="http://schema.org/requiredMaxAge"/>
    ///</summary>
    public static readonly Property requiredMaxAge = new Property(new Uri("http://schema.org/requiredMaxAge"));    

    ///<summary>
    ///Audiences defined by a person's minimum age.
    ///<see cref="http://schema.org/requiredMinAge"/>
    ///</summary>
    public static readonly Property requiredMinAge = new Property(new Uri("http://schema.org/requiredMinAge"));    

    ///<summary>
    ///The required quantity of the item(s).
    ///<see cref="http://schema.org/requiredQuantity"/>
    ///</summary>
    public static readonly Property requiredQuantity = new Property(new Uri("http://schema.org/requiredQuantity"));    

    ///<summary>
    ///Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
    ///<see cref="http://schema.org/requirements"/>
    ///</summary>
    public static readonly Property requirements = new Property(new Uri("http://schema.org/requirements"));    

    ///<summary>
    ///Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').
    ///<see cref="http://schema.org/requiresSubscription"/>
    ///</summary>
    public static readonly Property requiresSubscription = new Property(new Uri("http://schema.org/requiresSubscription"));    

    ///<summary>
    ///The thing -- flight, event, restaurant,etc. being reserved.
    ///<see cref="http://schema.org/reservationFor"/>
    ///</summary>
    public static readonly Property reservationFor = new Property(new Uri("http://schema.org/reservationFor"));    

    ///<summary>
    ///A unique identifier for the reservation.
    ///<see cref="http://schema.org/reservationId"/>
    ///</summary>
    public static readonly Property reservationId = new Property(new Uri("http://schema.org/reservationId"));    

    ///<summary>
    ///The current status of the reservation.
    ///<see cref="http://schema.org/reservationStatus"/>
    ///</summary>
    public static readonly Property reservationStatus = new Property(new Uri("http://schema.org/reservationStatus"));    

    ///<summary>
    ///A ticket associated with the reservation.
    ///<see cref="http://schema.org/reservedTicket"/>
    ///</summary>
    public static readonly Property reservedTicket = new Property(new Uri("http://schema.org/reservedTicket"));    

    ///<summary>
    ///Responsibilities associated with this role or Occupation.
    ///<see cref="http://schema.org/responsibilities"/>
    ///</summary>
    public static readonly Property responsibilities = new Property(new Uri("http://schema.org/responsibilities"));    

    ///<summary>
    ///How often one should break from the activity.
    ///<see cref="http://schema.org/restPeriods"/>
    ///</summary>
    public static readonly Property restPeriods = new Property(new Uri("http://schema.org/restPeriods"));    

    ///<summary>
    ///A sub property of result. The Comment created or sent as a result of this action.
    ///<see cref="http://schema.org/resultComment"/>
    ///</summary>
    public static readonly Property resultComment = new Property(new Uri("http://schema.org/resultComment"));    

    ///<summary>
    ///A sub property of result. The review that resulted in the performing of the action.
    ///<see cref="http://schema.org/resultReview"/>
    ///</summary>
    public static readonly Property resultReview = new Property(new Uri("http://schema.org/resultReview"));    

    ///<summary>
    ///Indicates (via enumerated options) the return fees policy for a ProductReturnPolicy
    ///<see cref="http://schema.org/returnFees"/>
    ///</summary>
    public static readonly Property returnFees = new Property(new Uri("http://schema.org/returnFees"));    

    ///<summary>
    ///A returnPolicyCategory expresses at most one of several enumerated kinds of return.
    ///<see cref="http://schema.org/returnPolicyCategory"/>
    ///</summary>
    public static readonly Property returnPolicyCategory = new Property(new Uri("http://schema.org/returnPolicyCategory"));    

    ///<summary>
    ///This Review or Rating is relevant to this part or facet of the itemReviewed.
    ///<see cref="http://schema.org/reviewAspect"/>
    ///</summary>
    public static readonly Property reviewAspect = new Property(new Uri("http://schema.org/reviewAspect"));    

    ///<summary>
    ///The actual body of the review.
    ///<see cref="http://schema.org/reviewBody"/>
    ///</summary>
    public static readonly Property reviewBody = new Property(new Uri("http://schema.org/reviewBody"));    

    ///<summary>
    ///The count of total number of reviews.
    ///<see cref="http://schema.org/reviewCount"/>
    ///</summary>
    public static readonly Property reviewCount = new Property(new Uri("http://schema.org/reviewCount"));    

    ///<summary>
    ///The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class="localLink" href="http://schema.org/aggregateRating">aggregateRating</a> property applies to the review itself, as a creative work.
    ///<see cref="http://schema.org/reviewRating"/>
    ///</summary>
    public static readonly Property reviewRating = new Property(new Uri("http://schema.org/reviewRating"));    

    ///<summary>
    ///People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
    ///<see cref="http://schema.org/reviewedBy"/>
    ///</summary>
    public static readonly Property reviewedBy = new Property(new Uri("http://schema.org/reviewedBy"));    

    ///<summary>
    ///Review of the item.
    ///<see cref="http://schema.org/reviews"/>
    ///</summary>
    public static readonly Property reviews = new Property(new Uri("http://schema.org/reviews"));    

    ///<summary>
    ///A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.
    ///<see cref="http://schema.org/riskFactor"/>
    ///</summary>
    public static readonly Property riskFactor = new Property(new Uri("http://schema.org/riskFactor"));    

    ///<summary>
    ///Specific physiologic risks associated to the diet plan.
    ///<see cref="http://schema.org/risks"/>
    ///</summary>
    public static readonly Property risks = new Property(new Uri("http://schema.org/risks"));    

    ///<summary>
    ///The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a></li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/roofLoad"/>
    ///</summary>
    public static readonly Property roofLoad = new Property(new Uri("http://schema.org/roofLoad"));    

    ///<summary>
    ///The response (yes, no, maybe) to the RSVP.
    ///<see cref="http://schema.org/rsvpResponse"/>
    ///</summary>
    public static readonly Property rsvpResponse = new Property(new Uri("http://schema.org/rsvpResponse"));    

    ///<summary>
    ///The vasculature the lymphatic structure runs, or efferents, to.
    ///<see cref="http://schema.org/runsTo"/>
    ///</summary>
    public static readonly Property runsTo = new Property(new Uri("http://schema.org/runsTo"));    

    ///<summary>
    ///Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
    ///<see cref="http://schema.org/runtime"/>
    ///</summary>
    public static readonly Property runtime = new Property(new Uri("http://schema.org/runtime"));    

    ///<summary>
    ///The RxCUI drug identifier from RXNORM.
    ///<see cref="http://schema.org/rxcui"/>
    ///</summary>
    public static readonly Property rxcui = new Property(new Uri("http://schema.org/rxcui"));    

    ///<summary>
    ///Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
    ///<see cref="http://schema.org/safetyConsideration"/>
    ///</summary>
    public static readonly Property safetyConsideration = new Property(new Uri("http://schema.org/safetyConsideration"));    

    ///<summary>
    ///The currency (coded using <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for the main salary information in this job posting or for this employee.
    ///<see cref="http://schema.org/salaryCurrency"/>
    ///</summary>
    public static readonly Property salaryCurrency = new Property(new Uri("http://schema.org/salaryCurrency"));    

    ///<summary>
    ///The expected salary upon completing the training.
    ///<see cref="http://schema.org/salaryUponCompletion"/>
    ///</summary>
    public static readonly Property salaryUponCompletion = new Property(new Uri("http://schema.org/salaryUponCompletion"));    

    ///<summary>
    ///URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
    ///<see cref="http://schema.org/sameAs"/>
    ///</summary>
    public static readonly Property sameAs = new Property(new Uri("http://schema.org/sameAs"));    

    ///<summary>
    ///What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
    ///<see cref="http://schema.org/sampleType"/>
    ///</summary>
    public static readonly Property sampleType = new Property(new Uri("http://schema.org/sampleType"));    

    ///<summary>
    ///The number of grams of saturated fat.
    ///<see cref="http://schema.org/saturatedFatContent"/>
    ///</summary>
    public static readonly Property saturatedFatContent = new Property(new Uri("http://schema.org/saturatedFatContent"));    

    ///<summary>
    ///The date the invoice is scheduled to be paid.
    ///<see cref="http://schema.org/scheduledPaymentDate"/>
    ///</summary>
    public static readonly Property scheduledPaymentDate = new Property(new Uri("http://schema.org/scheduledPaymentDate"));    

    ///<summary>
    ///The time the object is scheduled to.
    ///<see cref="http://schema.org/scheduledTime"/>
    ///</summary>
    public static readonly Property scheduledTime = new Property(new Uri("http://schema.org/scheduledTime"));    

    ///<summary>
    ///Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.
    ///<see cref="http://schema.org/schemaVersion"/>
    ///</summary>
    public static readonly Property schemaVersion = new Property(new Uri("http://schema.org/schemaVersion"));    

    ///<summary>
    ///The number of screens in the movie theater.
    ///<see cref="http://schema.org/screenCount"/>
    ///</summary>
    public static readonly Property screenCount = new Property(new Uri("http://schema.org/screenCount"));    

    ///<summary>
    ///A link to a screenshot image of the app.
    ///<see cref="http://schema.org/screenshot"/>
    ///</summary>
    public static readonly Property screenshot = new Property(new Uri("http://schema.org/screenshot"));    

    ///<summary>
    ///Indicates the date on which the current structured data was generated / published. Typically used alongside <a class="localLink" href="http://schema.org/sdPublisher">sdPublisher</a>
    ///<see cref="http://schema.org/sdDatePublished"/>
    ///</summary>
    public static readonly Property sdDatePublished = new Property(new Uri("http://schema.org/sdDatePublished"));    

    ///<summary>
    ///A license document that applies to this structured data, typically indicated by URL.
    ///<see cref="http://schema.org/sdLicense"/>
    ///</summary>
    public static readonly Property sdLicense = new Property(new Uri("http://schema.org/sdLicense"));    

    ///<summary>
    ///Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The
    ///<a class="localLink" href="http://schema.org/sdPublisher">sdPublisher</a> property helps make such practices more explicit.
    ///<see cref="http://schema.org/sdPublisher"/>
    ///</summary>
    public static readonly Property sdPublisher = new Property(new Uri("http://schema.org/sdPublisher"));    

    ///<summary>
    ///Position of the season within an ordered group of seasons.
    ///<see cref="http://schema.org/seasonNumber"/>
    ///</summary>
    public static readonly Property seasonNumber = new Property(new Uri("http://schema.org/seasonNumber"));    

    ///<summary>
    ///A season in a media series.
    ///<see cref="http://schema.org/seasons"/>
    ///</summary>
    public static readonly Property seasons = new Property(new Uri("http://schema.org/seasons"));    

    ///<summary>
    ///The location of the reserved seat (e.g., 27).
    ///<see cref="http://schema.org/seatNumber"/>
    ///</summary>
    public static readonly Property seatNumber = new Property(new Uri("http://schema.org/seatNumber"));    

    ///<summary>
    ///The row location of the reserved seat (e.g., B).
    ///<see cref="http://schema.org/seatRow"/>
    ///</summary>
    public static readonly Property seatRow = new Property(new Uri("http://schema.org/seatRow"));    

    ///<summary>
    ///The section location of the reserved seat (e.g. Orchestra).
    ///<see cref="http://schema.org/seatSection"/>
    ///</summary>
    public static readonly Property seatSection = new Property(new Uri("http://schema.org/seatSection"));    

    ///<summary>
    ///The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
    ///
    ///Typical unit code(s): C62 for persons
    ///<see cref="http://schema.org/seatingCapacity"/>
    ///</summary>
    public static readonly Property seatingCapacity = new Property(new Uri("http://schema.org/seatingCapacity"));    

    ///<summary>
    ///The type/class of the seat.
    ///<see cref="http://schema.org/seatingType"/>
    ///</summary>
    public static readonly Property seatingType = new Property(new Uri("http://schema.org/seatingType"));    

    ///<summary>
    ///A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.
    ///<see cref="http://schema.org/secondaryPrevention"/>
    ///</summary>
    public static readonly Property secondaryPrevention = new Property(new Uri("http://schema.org/secondaryPrevention"));    

    ///<summary>
    ///The type of security screening the passenger is subject to.
    ///<see cref="http://schema.org/securityScreening"/>
    ///</summary>
    public static readonly Property securityScreening = new Property(new Uri("http://schema.org/securityScreening"));    

    ///<summary>
    ///A pointer to products or services sought by the organization or person (demand).
    ///<see cref="http://schema.org/seeks"/>
    ///</summary>
    public static readonly Property seeks = new Property(new Uri("http://schema.org/seeks"));    

    ///<summary>
    ///A sub property of participant. The participant who is at the sending end of the action.
    ///<see cref="http://schema.org/sender"/>
    ///</summary>
    public static readonly Property sender = new Property(new Uri("http://schema.org/sender"));    

    ///<summary>
    ///The neurological pathway extension that inputs and sends information to the brain or spinal cord.
    ///<see cref="http://schema.org/sensoryUnit"/>
    ///</summary>
    public static readonly Property sensoryUnit = new Property(new Uri("http://schema.org/sensoryUnit"));    

    ///<summary>
    ///A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.
    ///<see cref="http://schema.org/seriousAdverseOutcome"/>
    ///</summary>
    public static readonly Property seriousAdverseOutcome = new Property(new Uri("http://schema.org/seriousAdverseOutcome"));    

    ///<summary>
    ///Status of a game server.
    ///<see cref="http://schema.org/serverStatus"/>
    ///</summary>
    public static readonly Property serverStatus = new Property(new Uri("http://schema.org/serverStatus"));    

    ///<summary>
    ///The cuisine of the restaurant.
    ///<see cref="http://schema.org/servesCuisine"/>
    ///</summary>
    public static readonly Property servesCuisine = new Property(new Uri("http://schema.org/servesCuisine"));    

    ///<summary>
    ///The audience eligible for this service.
    ///<see cref="http://schema.org/serviceAudience"/>
    ///</summary>
    public static readonly Property serviceAudience = new Property(new Uri("http://schema.org/serviceAudience"));    

    ///<summary>
    ///The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
    ///<see cref="http://schema.org/serviceLocation"/>
    ///</summary>
    public static readonly Property serviceLocation = new Property(new Uri("http://schema.org/serviceLocation"));    

    ///<summary>
    ///The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
    ///<see cref="http://schema.org/serviceOperator"/>
    ///</summary>
    public static readonly Property serviceOperator = new Property(new Uri("http://schema.org/serviceOperator"));    

    ///<summary>
    ///The phone number to use to access the service.
    ///<see cref="http://schema.org/servicePhone"/>
    ///</summary>
    public static readonly Property servicePhone = new Property(new Uri("http://schema.org/servicePhone"));    

    ///<summary>
    ///The address for accessing the service by mail.
    ///<see cref="http://schema.org/servicePostalAddress"/>
    ///</summary>
    public static readonly Property servicePostalAddress = new Property(new Uri("http://schema.org/servicePostalAddress"));    

    ///<summary>
    ///The number to access the service by text message.
    ///<see cref="http://schema.org/serviceSmsNumber"/>
    ///</summary>
    public static readonly Property serviceSmsNumber = new Property(new Uri("http://schema.org/serviceSmsNumber"));    

    ///<summary>
    ///The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
    ///<see cref="http://schema.org/serviceType"/>
    ///</summary>
    public static readonly Property serviceType = new Property(new Uri("http://schema.org/serviceType"));    

    ///<summary>
    ///The website to access the service.
    ///<see cref="http://schema.org/serviceUrl"/>
    ///</summary>
    public static readonly Property serviceUrl = new Property(new Uri("http://schema.org/serviceUrl"));    

    ///<summary>
    ///The serving size, in terms of the number of volume or mass.
    ///<see cref="http://schema.org/servingSize"/>
    ///</summary>
    public static readonly Property servingSize = new Property(new Uri("http://schema.org/servingSize"));    

    ///<summary>
    ///A CreativeWork such as an image, video, or audio clip shared as part of this posting.
    ///<see cref="http://schema.org/sharedContent"/>
    ///</summary>
    public static readonly Property sharedContent = new Property(new Uri("http://schema.org/sharedContent"));    

    ///<summary>
    ///A sibling of the person.
    ///<see cref="http://schema.org/siblings"/>
    ///</summary>
    public static readonly Property siblings = new Property(new Uri("http://schema.org/siblings"));    

    ///<summary>
    ///A sign detected by the test.
    ///<see cref="http://schema.org/signDetected"/>
    ///</summary>
    public static readonly Property signDetected = new Property(new Uri("http://schema.org/signDetected"));    

    ///<summary>
    ///A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.
    ///<see cref="http://schema.org/signOrSymptom"/>
    ///</summary>
    public static readonly Property signOrSymptom = new Property(new Uri("http://schema.org/signOrSymptom"));    

    ///<summary>
    ///The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.
    ///<see cref="http://schema.org/significance"/>
    ///</summary>
    public static readonly Property significance = new Property(new Uri("http://schema.org/significance"));    

    ///<summary>
    ///The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
    ///<see cref="http://schema.org/significantLinks"/>
    ///</summary>
    public static readonly Property significantLinks = new Property(new Uri("http://schema.org/significantLinks"));    

    ///<summary>
    ///Skills required to fulfill this role or in this Occupation.
    ///<see cref="http://schema.org/skills"/>
    ///</summary>
    public static readonly Property skills = new Property(new Uri("http://schema.org/skills"));    

    ///<summary>
    ///The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
    ///<see cref="http://schema.org/sku"/>
    ///</summary>
    public static readonly Property sku = new Property(new Uri("http://schema.org/sku"));    

    ///<summary>
    ///A slogan or motto associated with the item.
    ///<see cref="http://schema.org/slogan"/>
    ///</summary>
    public static readonly Property slogan = new Property(new Uri("http://schema.org/slogan"));    

    ///<summary>
    ///Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
    ///<see cref="http://schema.org/smokingAllowed"/>
    ///</summary>
    public static readonly Property smokingAllowed = new Property(new Uri("http://schema.org/smokingAllowed"));    

    ///<summary>
    ///The number of milligrams of sodium.
    ///<see cref="http://schema.org/sodiumContent"/>
    ///</summary>
    public static readonly Property sodiumContent = new Property(new Uri("http://schema.org/sodiumContent"));    

    ///<summary>
    ///Additional content for a software application.
    ///<see cref="http://schema.org/softwareAddOn"/>
    ///</summary>
    public static readonly Property softwareAddOn = new Property(new Uri("http://schema.org/softwareAddOn"));    

    ///<summary>
    ///Software application help.
    ///<see cref="http://schema.org/softwareHelp"/>
    ///</summary>
    public static readonly Property softwareHelp = new Property(new Uri("http://schema.org/softwareHelp"));    

    ///<summary>
    ///Version of the software instance.
    ///<see cref="http://schema.org/softwareVersion"/>
    ///</summary>
    public static readonly Property softwareVersion = new Property(new Uri("http://schema.org/softwareVersion"));    

    ///<summary>
    ///The anatomical or organ system that the artery originates from.
    ///<see cref="http://schema.org/source"/>
    ///</summary>
    public static readonly Property source = new Property(new Uri("http://schema.org/source"));    

    ///<summary>
    ///The Organization on whose behalf the creator was working.
    ///<see cref="http://schema.org/sourceOrganization"/>
    ///</summary>
    public static readonly Property sourceOrganization = new Property(new Uri("http://schema.org/sourceOrganization"));    

    ///<summary>
    ///The neurological pathway that originates the neurons.
    ///<see cref="http://schema.org/sourcedFrom"/>
    ///</summary>
    public static readonly Property sourcedFrom = new Property(new Uri("http://schema.org/sourcedFrom"));    

    ///<summary>
    ///The "spatial" property can be used in cases when more specific properties
    ///(e.g. <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a>, <a class="localLink" href="http://schema.org/spatialCoverage">spatialCoverage</a>, <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>) are not known to be appropriate.
    ///<see cref="http://schema.org/spatial"/>
    ///</summary>
    public static readonly Property spatial = new Property(new Uri("http://schema.org/spatial"));    

    ///<summary>
    ///Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.<br/><br/>
    ///
    ///The <em>speakable</em> property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:<br/><br/>
    ///
    ///1.) <em>id-value</em> URL references - uses <em>id-value</em> of an element in the page being annotated. The simplest use of <em>speakable</em> has (potentially relative) URL values, referencing identified sections of the document concerned.<br/><br/>
    ///
    ///2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a> property.<br/><br/>
    ///
    ///3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the <a class="localLink" href="http://schema.org/xpath">xpath</a> property.<br/><br/>
    ///
    ///For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
    ///we define a supporting type, <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>  which is defined to be a possible value of the <em>speakable</em> property.
    ///<see cref="http://schema.org/speakable"/>
    ///</summary>
    public static readonly Property speakable = new Property(new Uri("http://schema.org/speakable"));    

    ///<summary>
    ///Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
    ///<see cref="http://schema.org/specialCommitments"/>
    ///</summary>
    public static readonly Property specialCommitments = new Property(new Uri("http://schema.org/specialCommitments"));    

    ///<summary>
    ///The special opening hours of a certain place.<br/><br/>
    ///
    ///Use this to explicitly override general opening hours brought in scope by <a class="localLink" href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a> or <a class="localLink" href="http://schema.org/openingHours">openingHours</a>.
    ///<see cref="http://schema.org/specialOpeningHoursSpecification"/>
    ///</summary>
    public static readonly Property specialOpeningHoursSpecification = new Property(new Uri("http://schema.org/specialOpeningHoursSpecification"));    

    ///<summary>
    ///One of the domain specialities to which this web page's content applies.
    ///<see cref="http://schema.org/specialty"/>
    ///</summary>
    public static readonly Property specialty = new Property(new Uri("http://schema.org/specialty"));    

    ///<summary>
    ///The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by <a class="localLink" href="http://schema.org/maxValue">maxValue</a> should be the maximum speed achievable under regular conditions.<br/><br/>
    ///
    ///Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot<br/><br/>
    ///
    ///*Note 1: Use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate the range. Typically, the minimal value is zero.
    ///* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.
    ///<see cref="http://schema.org/speed"/>
    ///</summary>
    public static readonly Property speed = new Property(new Uri("http://schema.org/speed"));    

    ///<summary>
    ///The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.
    ///<see cref="http://schema.org/spokenByCharacter"/>
    ///</summary>
    public static readonly Property spokenByCharacter = new Property(new Uri("http://schema.org/spokenByCharacter"));    

    ///<summary>
    ///A type of sport (e.g. Baseball).
    ///<see cref="http://schema.org/sport"/>
    ///</summary>
    public static readonly Property sport = new Property(new Uri("http://schema.org/sport"));    

    ///<summary>
    ///A sub property of location. The sports activity location where this action occurred.
    ///<see cref="http://schema.org/sportsActivityLocation"/>
    ///</summary>
    public static readonly Property sportsActivityLocation = new Property(new Uri("http://schema.org/sportsActivityLocation"));    

    ///<summary>
    ///A sub property of location. The sports event where this action occurred.
    ///<see cref="http://schema.org/sportsEvent"/>
    ///</summary>
    public static readonly Property sportsEvent = new Property(new Uri("http://schema.org/sportsEvent"));    

    ///<summary>
    ///A sub property of participant. The sports team that participated on this action.
    ///<see cref="http://schema.org/sportsTeam"/>
    ///</summary>
    public static readonly Property sportsTeam = new Property(new Uri("http://schema.org/sportsTeam"));    

    ///<summary>
    ///The person's spouse.
    ///<see cref="http://schema.org/spouse"/>
    ///</summary>
    public static readonly Property spouse = new Property(new Uri("http://schema.org/spouse"));    

    ///<summary>
    ///The stage of the condition, if applicable.
    ///<see cref="http://schema.org/stage"/>
    ///</summary>
    public static readonly Property stage = new Property(new Uri("http://schema.org/stage"));    

    ///<summary>
    ///The stage represented as a number, e.g. 3.
    ///<see cref="http://schema.org/stageAsNumber"/>
    ///</summary>
    public static readonly Property stageAsNumber = new Property(new Uri("http://schema.org/stageAsNumber"));    

    ///<summary>
    ///An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
    ///<see cref="http://schema.org/starRating"/>
    ///</summary>
    public static readonly Property starRating = new Property(new Uri("http://schema.org/starRating"));    

    ///<summary>
    ///The start date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
    ///<see cref="http://schema.org/startDate"/>
    ///</summary>
    public static readonly Property startDate = new Property(new Uri("http://schema.org/startDate"));    

    ///<summary>
    ///The start time of the clip expressed as the number of seconds from the beginning of the work.
    ///<see cref="http://schema.org/startOffset"/>
    ///</summary>
    public static readonly Property startOffset = new Property(new Uri("http://schema.org/startOffset"));    

    ///<summary>
    ///The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>
    ///
    ///Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    ///<see cref="http://schema.org/startTime"/>
    ///</summary>
    public static readonly Property startTime = new Property(new Uri("http://schema.org/startTime"));    

    ///<summary>
    ///The status of the study (enumerated).
    ///<see cref="http://schema.org/status"/>
    ///</summary>
    public static readonly Property status = new Property(new Uri("http://schema.org/status"));    

    ///<summary>
    ///The position of the steering wheel or similar device (mostly for cars).
    ///<see cref="http://schema.org/steeringPosition"/>
    ///</summary>
    public static readonly Property steeringPosition = new Property(new Uri("http://schema.org/steeringPosition"));    

    ///<summary>
    ///The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
    ///<see cref="http://schema.org/stepValue"/>
    ///</summary>
    public static readonly Property stepValue = new Property(new Uri("http://schema.org/stepValue"));    

    ///<summary>
    ///A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
    ///<see cref="http://schema.org/steps"/>
    ///</summary>
    public static readonly Property steps = new Property(new Uri("http://schema.org/steps"));    

    ///<summary>
    ///Storage requirements (free space required).
    ///<see cref="http://schema.org/storageRequirements"/>
    ///</summary>
    public static readonly Property storageRequirements = new Property(new Uri("http://schema.org/storageRequirements"));    

    ///<summary>
    ///The street address. For example, 1600 Amphitheatre Pkwy.
    ///<see cref="http://schema.org/streetAddress"/>
    ///</summary>
    public static readonly Property streetAddress = new Property(new Uri("http://schema.org/streetAddress"));    

    ///<summary>
    ///The units of an active ingredient's strength, e.g. mg.
    ///<see cref="http://schema.org/strengthUnit"/>
    ///</summary>
    public static readonly Property strengthUnit = new Property(new Uri("http://schema.org/strengthUnit"));    

    ///<summary>
    ///The value of an active ingredient's strength, e.g. 325.
    ///<see cref="http://schema.org/strengthValue"/>
    ///</summary>
    public static readonly Property strengthValue = new Property(new Uri("http://schema.org/strengthValue"));    

    ///<summary>
    ///The name given to how bone physically connects to each other.
    ///<see cref="http://schema.org/structuralClass"/>
    ///</summary>
    public static readonly Property structuralClass = new Property(new Uri("http://schema.org/structuralClass"));    

    ///<summary>
    ///A medical study or trial related to this entity.
    ///<see cref="http://schema.org/study"/>
    ///</summary>
    public static readonly Property study = new Property(new Uri("http://schema.org/study"));    

    ///<summary>
    ///Specifics about the observational study design (enumerated).
    ///<see cref="http://schema.org/studyDesign"/>
    ///</summary>
    public static readonly Property studyDesign = new Property(new Uri("http://schema.org/studyDesign"));    

    ///<summary>
    ///The location in which the study is taking/took place.
    ///<see cref="http://schema.org/studyLocation"/>
    ///</summary>
    public static readonly Property studyLocation = new Property(new Uri("http://schema.org/studyLocation"));    

    ///<summary>
    ///A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.
    ///<see cref="http://schema.org/studySubject"/>
    ///</summary>
    public static readonly Property studySubject = new Property(new Uri("http://schema.org/studySubject"));    

    ///<summary>
    ///This is a StupidProperty! - for testing only
    ///<see cref="http://schema.org/stupidProperty"/>
    ///</summary>
    public static readonly Property stupidProperty = new Property(new Uri("http://schema.org/stupidProperty"));    

    ///<summary>
    ///Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
    ///<see cref="http://schema.org/subEvents"/>
    ///</summary>
    public static readonly Property subEvents = new Property(new Uri("http://schema.org/subEvents"));    

    ///<summary>
    ///The individual reservations included in the package. Typically a repeated property.
    ///<see cref="http://schema.org/subReservation"/>
    ///</summary>
    public static readonly Property subReservation = new Property(new Uri("http://schema.org/subReservation"));    

    ///<summary>
    ///The substage, e.g. 'a' for Stage IIIa.
    ///<see cref="http://schema.org/subStageSuffix"/>
    ///</summary>
    public static readonly Property subStageSuffix = new Property(new Uri("http://schema.org/subStageSuffix"));    

    ///<summary>
    ///Component (sub-)structure(s) that comprise this anatomical structure.
    ///<see cref="http://schema.org/subStructure"/>
    ///</summary>
    public static readonly Property subStructure = new Property(new Uri("http://schema.org/subStructure"));    

    ///<summary>
    ///A component test of the panel.
    ///<see cref="http://schema.org/subTest"/>
    ///</summary>
    public static readonly Property subTest = new Property(new Uri("http://schema.org/subTest"));    

    ///<summary>
    ///Languages in which subtitles/captions are available, in <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard format</a>.
    ///<see cref="http://schema.org/subtitleLanguage"/>
    ///</summary>
    public static readonly Property subtitleLanguage = new Property(new Uri("http://schema.org/subtitleLanguage"));    

    ///<summary>
    ///A more specific type of the condition, where applicable, for example 'Type 1 Diabetes', 'Type 2 Diabetes', or 'Gestational Diabetes' for Diabetes.
    ///<see cref="http://schema.org/subtype"/>
    ///</summary>
    public static readonly Property subtype = new Property(new Uri("http://schema.org/subtype"));    

    ///<summary>
    ///A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
    ///<see cref="http://schema.org/successorOf"/>
    ///</summary>
    public static readonly Property successorOf = new Property(new Uri("http://schema.org/successorOf"));    

    ///<summary>
    ///The number of grams of sugar.
    ///<see cref="http://schema.org/sugarContent"/>
    ///</summary>
    public static readonly Property sugarContent = new Property(new Uri("http://schema.org/sugarContent"));    

    ///<summary>
    ///The gender of the person or audience.
    ///<see cref="http://schema.org/suggestedGender"/>
    ///</summary>
    public static readonly Property suggestedGender = new Property(new Uri("http://schema.org/suggestedGender"));    

    ///<summary>
    ///Maximal age recommended for viewing content.
    ///<see cref="http://schema.org/suggestedMaxAge"/>
    ///</summary>
    public static readonly Property suggestedMaxAge = new Property(new Uri("http://schema.org/suggestedMaxAge"));    

    ///<summary>
    ///Minimal age recommended for viewing content.
    ///<see cref="http://schema.org/suggestedMinAge"/>
    ///</summary>
    public static readonly Property suggestedMinAge = new Property(new Uri("http://schema.org/suggestedMinAge"));    

    ///<summary>
    ///Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
    ///<see cref="http://schema.org/suitableForDiet"/>
    ///</summary>
    public static readonly Property suitableForDiet = new Property(new Uri("http://schema.org/suitableForDiet"));    

    ///<summary>
    ///Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
    ///<see cref="http://schema.org/supersededBy"/>
    ///</summary>
    public static readonly Property supersededBy = new Property(new Uri("http://schema.org/supersededBy"));    

    ///<summary>
    ///The area to which the artery supplies blood.
    ///<see cref="http://schema.org/supplyTo"/>
    ///</summary>
    public static readonly Property supplyTo = new Property(new Uri("http://schema.org/supplyTo"));    

    ///<summary>
    ///Supporting data for a SoftwareApplication.
    ///<see cref="http://schema.org/supportingData"/>
    ///</summary>
    public static readonly Property supportingData = new Property(new Uri("http://schema.org/supportingData"));    

    ///<summary>
    ///A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.
    ///<see cref="http://schema.org/surface"/>
    ///</summary>
    public static readonly Property surface = new Property(new Uri("http://schema.org/surface"));    

    ///<summary>
    ///Indicates a target EntryPoint for an Action.
    ///<see cref="http://schema.org/target"/>
    ///</summary>
    public static readonly Property target = new Property(new Uri("http://schema.org/target"));    

    ///<summary>
    ///The description of a node in an established educational framework.
    ///<see cref="http://schema.org/targetDescription"/>
    ///</summary>
    public static readonly Property targetDescription = new Property(new Uri("http://schema.org/targetDescription"));    

    ///<summary>
    ///The name of a node in an established educational framework.
    ///<see cref="http://schema.org/targetName"/>
    ///</summary>
    public static readonly Property targetName = new Property(new Uri("http://schema.org/targetName"));    

    ///<summary>
    ///Type of app development: phone, Metro style, desktop, XBox, etc.
    ///<see cref="http://schema.org/targetPlatform"/>
    ///</summary>
    public static readonly Property targetPlatform = new Property(new Uri("http://schema.org/targetPlatform"));    

    ///<summary>
    ///Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
    ///<see cref="http://schema.org/targetPopulation"/>
    ///</summary>
    public static readonly Property targetPopulation = new Property(new Uri("http://schema.org/targetPopulation"));    

    ///<summary>
    ///Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
    ///<see cref="http://schema.org/targetProduct"/>
    ///</summary>
    public static readonly Property targetProduct = new Property(new Uri("http://schema.org/targetProduct"));    

    ///<summary>
    ///The URL of a node in an established educational framework.
    ///<see cref="http://schema.org/targetUrl"/>
    ///</summary>
    public static readonly Property targetUrl = new Property(new Uri("http://schema.org/targetUrl"));    

    ///<summary>
    ///The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
    ///<see cref="http://schema.org/taxID"/>
    ///</summary>
    public static readonly Property taxID = new Property(new Uri("http://schema.org/taxID"));    

    ///<summary>
    ///The telephone number.
    ///<see cref="http://schema.org/telephone"/>
    ///</summary>
    public static readonly Property telephone = new Property(new Uri("http://schema.org/telephone"));    

    ///<summary>
    ///The "temporal" property can be used in cases where more specific properties
    ///(e.g. <a class="localLink" href="http://schema.org/temporalCoverage">temporalCoverage</a>, <a class="localLink" href="http://schema.org/dateCreated">dateCreated</a>, <a class="localLink" href="http://schema.org/dateModified">dateModified</a>, <a class="localLink" href="http://schema.org/datePublished">datePublished</a>) are not known to be appropriate.
    ///<see cref="http://schema.org/temporal"/>
    ///</summary>
    public static readonly Property temporal = new Property(new Uri("http://schema.org/temporal"));    

    ///<summary>
    ///Human-readable terms of service documentation.
    ///<see cref="http://schema.org/termsOfService"/>
    ///</summary>
    public static readonly Property termsOfService = new Property(new Uri("http://schema.org/termsOfService"));    

    ///<summary>
    ///The textual content of this CreativeWork.
    ///<see cref="http://schema.org/text"/>
    ///</summary>
    public static readonly Property text = new Property(new Uri("http://schema.org/text"));    

    ///<summary>
    ///Thumbnail image for an image or video.
    ///<see cref="http://schema.org/thumbnail"/>
    ///</summary>
    public static readonly Property thumbnail = new Property(new Uri("http://schema.org/thumbnail"));    

    ///<summary>
    ///A thumbnail image relevant to the Thing.
    ///<see cref="http://schema.org/thumbnailUrl"/>
    ///</summary>
    public static readonly Property thumbnailUrl = new Property(new Uri("http://schema.org/thumbnailUrl"));    

    ///<summary>
    ///The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022.
    ///<see cref="http://schema.org/tickerSymbol"/>
    ///</summary>
    public static readonly Property tickerSymbol = new Property(new Uri("http://schema.org/tickerSymbol"));    

    ///<summary>
    ///The unique identifier for the ticket.
    ///<see cref="http://schema.org/ticketNumber"/>
    ///</summary>
    public static readonly Property ticketNumber = new Property(new Uri("http://schema.org/ticketNumber"));    

    ///<summary>
    ///Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
    ///<see cref="http://schema.org/ticketToken"/>
    ///</summary>
    public static readonly Property ticketToken = new Property(new Uri("http://schema.org/ticketToken"));    

    ///<summary>
    ///The seat associated with the ticket.
    ///<see cref="http://schema.org/ticketedSeat"/>
    ///</summary>
    public static readonly Property ticketedSeat = new Property(new Uri("http://schema.org/ticketedSeat"));    

    ///<summary>
    ///Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'.
    ///<see cref="http://schema.org/timeRequired"/>
    ///</summary>
    public static readonly Property timeRequired = new Property(new Uri("http://schema.org/timeRequired"));    

    ///<summary>
    ///The expected length of time to complete the program if attending full-time.
    ///<see cref="http://schema.org/timeToComplete"/>
    ///</summary>
    public static readonly Property timeToComplete = new Property(new Uri("http://schema.org/timeToComplete"));    

    ///<summary>
    ///The type of tissue sample required for the test.
    ///<see cref="http://schema.org/tissueSample"/>
    ///</summary>
    public static readonly Property tissueSample = new Property(new Uri("http://schema.org/tissueSample"));    

    ///<summary>
    ///The title of the job.
    ///<see cref="http://schema.org/title"/>
    ///</summary>
    public static readonly Property title = new Property(new Uri("http://schema.org/title"));    

    ///<summary>
    ///A sub property of location. The final location of the object or the agent after the action.
    ///<see cref="http://schema.org/toLocation"/>
    ///</summary>
    public static readonly Property toLocation = new Property(new Uri("http://schema.org/toLocation"));    

    ///<summary>
    ///A sub property of recipient. The recipient who was directly sent the message.
    ///<see cref="http://schema.org/toRecipient"/>
    ///</summary>
    public static readonly Property toRecipient = new Property(new Uri("http://schema.org/toRecipient"));    

    ///<summary>
    ///The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR)<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/tongueWeight"/>
    ///</summary>
    public static readonly Property tongueWeight = new Property(new Uri("http://schema.org/tongueWeight"));    

    ///<summary>
    ///A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
    ///<see cref="http://schema.org/tool"/>
    ///</summary>
    public static readonly Property tool = new Property(new Uri("http://schema.org/tool"));    

    ///<summary>
    ///The torque (turning force) of the vehicle's engine.<br/><br/>
    ///
    ///Typical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.</li>
    ///<li>Note 2: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/torque"/>
    ///</summary>
    public static readonly Property torque = new Property(new Uri("http://schema.org/torque"));    

    ///<summary>
    ///The total amount due.
    ///<see cref="http://schema.org/totalPaymentDue"/>
    ///</summary>
    public static readonly Property totalPaymentDue = new Property(new Uri("http://schema.org/totalPaymentDue"));    

    ///<summary>
    ///The total price for the reservation or ticket, including applicable taxes, shipping, etc.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/totalPrice"/>
    ///</summary>
    public static readonly Property totalPrice = new Property(new Uri("http://schema.org/totalPrice"));    

    ///<summary>
    ///The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/totalTime"/>
    ///</summary>
    public static readonly Property totalTime = new Property(new Uri("http://schema.org/totalTime"));    

    ///<summary>
    ///Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc.
    ///<see cref="http://schema.org/touristType"/>
    ///</summary>
    public static readonly Property touristType = new Property(new Uri("http://schema.org/touristType"));    

    ///<summary>
    ///Shipper tracking number.
    ///<see cref="http://schema.org/trackingNumber"/>
    ///</summary>
    public static readonly Property trackingNumber = new Property(new Uri("http://schema.org/trackingNumber"));    

    ///<summary>
    ///Tracking url for the parcel delivery.
    ///<see cref="http://schema.org/trackingUrl"/>
    ///</summary>
    public static readonly Property trackingUrl = new Property(new Uri("http://schema.org/trackingUrl"));    

    ///<summary>
    ///A music recording (track)&#x2014;usually a single song.
    ///<see cref="http://schema.org/tracks"/>
    ///</summary>
    public static readonly Property tracks = new Property(new Uri("http://schema.org/tracks"));    

    ///<summary>
    ///The trailer of a movie or tv/radio series, season, episode, etc.
    ///<see cref="http://schema.org/trailer"/>
    ///</summary>
    public static readonly Property trailer = new Property(new Uri("http://schema.org/trailer"));    

    ///<summary>
    ///The permitted weight of a trailer attached to the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound
    ///* Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.
    ///* Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.
    ///* Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/trailerWeight"/>
    ///</summary>
    public static readonly Property trailerWeight = new Property(new Uri("http://schema.org/trailerWeight"));    

    ///<summary>
    ///The name of the train (e.g. The Orient Express).
    ///<see cref="http://schema.org/trainName"/>
    ///</summary>
    public static readonly Property trainName = new Property(new Uri("http://schema.org/trainName"));    

    ///<summary>
    ///The unique identifier for the train.
    ///<see cref="http://schema.org/trainNumber"/>
    ///</summary>
    public static readonly Property trainNumber = new Property(new Uri("http://schema.org/trainNumber"));    

    ///<summary>
    ///The estimated salary earned while in the program.
    ///<see cref="http://schema.org/trainingSalary"/>
    ///</summary>
    public static readonly Property trainingSalary = new Property(new Uri("http://schema.org/trainingSalary"));    

    ///<summary>
    ///The number of grams of trans fat.
    ///<see cref="http://schema.org/transFatContent"/>
    ///</summary>
    public static readonly Property transFatContent = new Property(new Uri("http://schema.org/transFatContent"));    

    ///<summary>
    ///If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
    ///<see cref="http://schema.org/transcript"/>
    ///</summary>
    public static readonly Property transcript = new Property(new Uri("http://schema.org/transcript"));    

    ///<summary>
    ///Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
    ///<see cref="http://schema.org/translator"/>
    ///</summary>
    public static readonly Property translator = new Property(new Uri("http://schema.org/translator"));    

    ///<summary>
    ///How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.
    ///<see cref="http://schema.org/transmissionMethod"/>
    ///</summary>
    public static readonly Property transmissionMethod = new Property(new Uri("http://schema.org/transmissionMethod"));    

    ///<summary>
    ///Specifics about the trial design (enumerated).
    ///<see cref="http://schema.org/trialDesign"/>
    ///</summary>
    public static readonly Property trialDesign = new Property(new Uri("http://schema.org/trialDesign"));    

    ///<summary>
    ///The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.
    ///<see cref="http://schema.org/tributary"/>
    ///</summary>
    public static readonly Property tributary = new Property(new Uri("http://schema.org/tributary"));    

    ///<summary>
    ///The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.
    ///<see cref="http://schema.org/typeOfBed"/>
    ///</summary>
    public static readonly Property typeOfBed = new Property(new Uri("http://schema.org/typeOfBed"));    

    ///<summary>
    ///The product that this structured value is referring to.
    ///<see cref="http://schema.org/typeOfGood"/>
    ///</summary>
    public static readonly Property typeOfGood = new Property(new Uri("http://schema.org/typeOfGood"));    

    ///<summary>
    ///The typical expected age range, e.g. '7-9', '11-'.
    ///<see cref="http://schema.org/typicalAgeRange"/>
    ///</summary>
    public static readonly Property typicalAgeRange = new Property(new Uri("http://schema.org/typicalAgeRange"));    

    ///<summary>
    ///A medical test typically performed given this condition.
    ///<see cref="http://schema.org/typicalTest"/>
    ///</summary>
    public static readonly Property typicalTest = new Property(new Uri("http://schema.org/typicalTest"));    

    ///<summary>
    ///The person or organization the reservation or ticket is for.
    ///<see cref="http://schema.org/underName"/>
    ///</summary>
    public static readonly Property underName = new Property(new Uri("http://schema.org/underName"));    

    ///<summary>
    ///The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
    ///<see cref="http://schema.org/unitCode"/>
    ///</summary>
    public static readonly Property unitCode = new Property(new Uri("http://schema.org/unitCode"));    

    ///<summary>
    ///A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
    ///<a href='unitCode'>unitCode</a>.
    ///<see cref="http://schema.org/unitText"/>
    ///</summary>
    public static readonly Property unitText = new Property(new Uri("http://schema.org/unitText"));    

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (typically a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a statement about policy on use of unnamed sources and the decision process required.
    ///<see cref="http://schema.org/unnamedSourcesPolicy"/>
    ///</summary>
    public static readonly Property unnamedSourcesPolicy = new Property(new Uri("http://schema.org/unnamedSourcesPolicy"));    

    ///<summary>
    ///The number of grams of unsaturated fat.
    ///<see cref="http://schema.org/unsaturatedFatContent"/>
    ///</summary>
    public static readonly Property unsaturatedFatContent = new Property(new Uri("http://schema.org/unsaturatedFatContent"));    

    ///<summary>
    ///Date when this media object was uploaded to this site.
    ///<see cref="http://schema.org/uploadDate"/>
    ///</summary>
    public static readonly Property uploadDate = new Property(new Uri("http://schema.org/uploadDate"));    

    ///<summary>
    ///The number of upvotes this question, answer or comment has received from the community.
    ///<see cref="http://schema.org/upvoteCount"/>
    ///</summary>
    public static readonly Property upvoteCount = new Property(new Uri("http://schema.org/upvoteCount"));    

    ///<summary>
    ///URL of the item.
    ///<see cref="http://schema.org/url"/>
    ///</summary>
    public static readonly Property url = new Property(new Uri("http://schema.org/url"));    

    ///<summary>
    ///An url template (RFC6570) that will be used to construct the target of the execution of the action.
    ///<see cref="http://schema.org/urlTemplate"/>
    ///</summary>
    public static readonly Property urlTemplate = new Property(new Uri("http://schema.org/urlTemplate"));    

    ///<summary>
    ///A condition the test is used to diagnose.
    ///<see cref="http://schema.org/usedToDiagnose"/>
    ///</summary>
    public static readonly Property usedToDiagnose = new Property(new Uri("http://schema.org/usedToDiagnose"));    

    ///<summary>
    ///The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.
    ///<see cref="http://schema.org/userInteractionCount"/>
    ///</summary>
    public static readonly Property userInteractionCount = new Property(new Uri("http://schema.org/userInteractionCount"));    

    ///<summary>
    ///Device used to perform the test.
    ///<see cref="http://schema.org/usesDevice"/>
    ///</summary>
    public static readonly Property usesDevice = new Property(new Uri("http://schema.org/usesDevice"));    

    ///<summary>
    ///The standard for interpreting thePlan ID. The preferred is "HIOS". See the Centers for Medicare &amp; Medicaid Services for more details.
    ///<see cref="http://schema.org/usesHealthPlanIdStandard"/>
    ///</summary>
    public static readonly Property usesHealthPlanIdStandard = new Property(new Uri("http://schema.org/usesHealthPlanIdStandard"));    

    ///<summary>
    ///The duration of validity of a permit or similar thing.
    ///<see cref="http://schema.org/validFor"/>
    ///</summary>
    public static readonly Property validFor = new Property(new Uri("http://schema.org/validFor"));    

    ///<summary>
    ///The date when the item becomes valid.
    ///<see cref="http://schema.org/validFrom"/>
    ///</summary>
    public static readonly Property validFrom = new Property(new Uri("http://schema.org/validFrom"));    

    ///<summary>
    ///The geographic area where a permit or similar thing is valid.
    ///<see cref="http://schema.org/validIn"/>
    ///</summary>
    public static readonly Property validIn = new Property(new Uri("http://schema.org/validIn"));    

    ///<summary>
    ///The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
    ///<see cref="http://schema.org/validThrough"/>
    ///</summary>
    public static readonly Property validThrough = new Property(new Uri("http://schema.org/validThrough"));    

    ///<summary>
    ///The date when the item is no longer valid.
    ///<see cref="http://schema.org/validUntil"/>
    ///</summary>
    public static readonly Property validUntil = new Property(new Uri("http://schema.org/validUntil"));    

    ///<summary>
    ///The value of the quantitative value or property value node.<br/><br/>
    ///
    ///<ul>
    ///<li>For <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
    ///<li>For <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/value"/>
    ///</summary>
    public static readonly Property value = new Property(new Uri("http://schema.org/value"));    

    ///<summary>
    ///Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
    ///<see cref="http://schema.org/valueAddedTaxIncluded"/>
    ///</summary>
    public static readonly Property valueAddedTaxIncluded = new Property(new Uri("http://schema.org/valueAddedTaxIncluded"));    

    ///<summary>
    ///Specifies the allowed range for number of characters in a literal value.
    ///<see cref="http://schema.org/valueMaxLength"/>
    ///</summary>
    public static readonly Property valueMaxLength = new Property(new Uri("http://schema.org/valueMaxLength"));    

    ///<summary>
    ///Specifies the minimum allowed range for number of characters in a literal value.
    ///<see cref="http://schema.org/valueMinLength"/>
    ///</summary>
    public static readonly Property valueMinLength = new Property(new Uri("http://schema.org/valueMinLength"));    

    ///<summary>
    ///Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
    ///<see cref="http://schema.org/valueName"/>
    ///</summary>
    public static readonly Property valueName = new Property(new Uri("http://schema.org/valueName"));    

    ///<summary>
    ///Specifies a regular expression for testing literal values according to the HTML spec.
    ///<see cref="http://schema.org/valuePattern"/>
    ///</summary>
    public static readonly Property valuePattern = new Property(new Uri("http://schema.org/valuePattern"));    

    ///<summary>
    ///A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
    ///<see cref="http://schema.org/valueReference"/>
    ///</summary>
    public static readonly Property valueReference = new Property(new Uri("http://schema.org/valueReference"));    

    ///<summary>
    ///Whether the property must be filled in to complete the action.  Default is false.
    ///<see cref="http://schema.org/valueRequired"/>
    ///</summary>
    public static readonly Property valueRequired = new Property(new Uri("http://schema.org/valueRequired"));    

    ///<summary>
    ///The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.
    ///<see cref="http://schema.org/variableMeasured"/>
    ///</summary>
    public static readonly Property variableMeasured = new Property(new Uri("http://schema.org/variableMeasured"));    

    ///<summary>
    ///Originally named <a class="localLink" href="http://schema.org/variablesMeasured">variablesMeasured</a>, The <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.
    ///<see cref="http://schema.org/variablesMeasured"/>
    ///</summary>
    public static readonly Property variablesMeasured = new Property(new Uri("http://schema.org/variablesMeasured"));    

    ///<summary>
    ///A description of the variant cover
    ///    for the issue, if the issue is a variant printing. For example, "Bryan Hitch
    ///    Variant Cover" or "2nd Printing Variant".
    ///<see cref="http://schema.org/variantCover"/>
    ///</summary>
    public static readonly Property variantCover = new Property(new Uri("http://schema.org/variantCover"));    

    ///<summary>
    ///The Value-added Tax ID of the organization or person.
    ///<see cref="http://schema.org/vatID"/>
    ///</summary>
    public static readonly Property vatID = new Property(new Uri("http://schema.org/vatID"));    

    ///<summary>
    ///A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
    ///<see cref="http://schema.org/vehicleConfiguration"/>
    ///</summary>
    public static readonly Property vehicleConfiguration = new Property(new Uri("http://schema.org/vehicleConfiguration"));    

    ///<summary>
    ///Information about the engine or engines of the vehicle.
    ///<see cref="http://schema.org/vehicleEngine"/>
    ///</summary>
    public static readonly Property vehicleEngine = new Property(new Uri("http://schema.org/vehicleEngine"));    

    ///<summary>
    ///The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
    ///<see cref="http://schema.org/vehicleIdentificationNumber"/>
    ///</summary>
    public static readonly Property vehicleIdentificationNumber = new Property(new Uri("http://schema.org/vehicleIdentificationNumber"));    

    ///<summary>
    ///The color or color combination of the interior of the vehicle.
    ///<see cref="http://schema.org/vehicleInteriorColor"/>
    ///</summary>
    public static readonly Property vehicleInteriorColor = new Property(new Uri("http://schema.org/vehicleInteriorColor"));    

    ///<summary>
    ///The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
    ///<see cref="http://schema.org/vehicleInteriorType"/>
    ///</summary>
    public static readonly Property vehicleInteriorType = new Property(new Uri("http://schema.org/vehicleInteriorType"));    

    ///<summary>
    ///The release date of a vehicle model (often used to differentiate versions of the same make and model).
    ///<see cref="http://schema.org/vehicleModelDate"/>
    ///</summary>
    public static readonly Property vehicleModelDate = new Property(new Uri("http://schema.org/vehicleModelDate"));    

    ///<summary>
    ///The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
    ///
    ///Typical unit code(s): C62 for persons.
    ///<see cref="http://schema.org/vehicleSeatingCapacity"/>
    ///</summary>
    public static readonly Property vehicleSeatingCapacity = new Property(new Uri("http://schema.org/vehicleSeatingCapacity"));    

    ///<summary>
    ///Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.
    ///<see cref="http://schema.org/vehicleSpecialUsage"/>
    ///</summary>
    public static readonly Property vehicleSpecialUsage = new Property(new Uri("http://schema.org/vehicleSpecialUsage"));    

    ///<summary>
    ///The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
    ///<see cref="http://schema.org/vehicleTransmission"/>
    ///</summary>
    public static readonly Property vehicleTransmission = new Property(new Uri("http://schema.org/vehicleTransmission"));    

    ///<summary>
    ///'vendor' is an earlier term for 'seller'.
    ///<see cref="http://schema.org/vendor"/>
    ///</summary>
    public static readonly Property vendor = new Property(new Uri("http://schema.org/vendor"));    

    ///<summary>
    ///Disclosure about verification and fact-checking processes for a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other fact-checking <a class="localLink" href="http://schema.org/Organization">Organization</a>.
    ///<see cref="http://schema.org/verificationFactCheckingPolicy"/>
    ///</summary>
    public static readonly Property verificationFactCheckingPolicy = new Property(new Uri("http://schema.org/verificationFactCheckingPolicy"));    

    ///<summary>
    ///The version of the CreativeWork embodied by a specified resource.
    ///<see cref="http://schema.org/version"/>
    ///</summary>
    public static readonly Property version = new Property(new Uri("http://schema.org/version"));    

    ///<summary>
    ///An embedded video object.
    ///<see cref="http://schema.org/video"/>
    ///</summary>
    public static readonly Property video = new Property(new Uri("http://schema.org/video"));    

    ///<summary>
    ///The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).
    ///<see cref="http://schema.org/videoFormat"/>
    ///</summary>
    public static readonly Property videoFormat = new Property(new Uri("http://schema.org/videoFormat"));    

    ///<summary>
    ///The frame size of the video.
    ///<see cref="http://schema.org/videoFrameSize"/>
    ///</summary>
    public static readonly Property videoFrameSize = new Property(new Uri("http://schema.org/videoFrameSize"));    

    ///<summary>
    ///The quality of the video.
    ///<see cref="http://schema.org/videoQuality"/>
    ///</summary>
    public static readonly Property videoQuality = new Property(new Uri("http://schema.org/videoQuality"));    

    ///<summary>
    ///Identifies the volume of publication or multi-part work; for example, "iii" or "2".
    ///<see cref="http://schema.org/volumeNumber"/>
    ///</summary>
    public static readonly Property volumeNumber = new Property(new Uri("http://schema.org/volumeNumber"));    

    ///<summary>
    ///Any FDA or other warnings about the drug (text or URL).
    ///<see cref="http://schema.org/warning"/>
    ///</summary>
    public static readonly Property warning = new Property(new Uri("http://schema.org/warning"));    

    ///<summary>
    ///The warranty promise(s) included in the offer.
    ///<see cref="http://schema.org/warrantyPromise"/>
    ///</summary>
    public static readonly Property warrantyPromise = new Property(new Uri("http://schema.org/warrantyPromise"));    

    ///<summary>
    ///The scope of the warranty promise.
    ///<see cref="http://schema.org/warrantyScope"/>
    ///</summary>
    public static readonly Property warrantyScope = new Property(new Uri("http://schema.org/warrantyScope"));    

    ///<summary>
    ///The time when a passenger can check into the flight online.
    ///<see cref="http://schema.org/webCheckinTime"/>
    ///</summary>
    public static readonly Property webCheckinTime = new Property(new Uri("http://schema.org/webCheckinTime"));    

    ///<summary>
    ///The weight of the product or person.
    ///<see cref="http://schema.org/weight"/>
    ///</summary>
    public static readonly Property weight = new Property(new Uri("http://schema.org/weight"));    

    ///<summary>
    ///The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/weightTotal"/>
    ///</summary>
    public static readonly Property weightTotal = new Property(new Uri("http://schema.org/weightTotal"));    

    ///<summary>
    ///The distance between the centers of the front and rear wheels.<br/><br/>
    ///
    ///Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    ///<see cref="http://schema.org/wheelbase"/>
    ///</summary>
    public static readonly Property wheelbase = new Property(new Uri("http://schema.org/wheelbase"));    

    ///<summary>
    ///The width of the item.
    ///<see cref="http://schema.org/width"/>
    ///</summary>
    public static readonly Property width = new Property(new Uri("http://schema.org/width"));    

    ///<summary>
    ///A sub property of participant. The winner of the action.
    ///<see cref="http://schema.org/winner"/>
    ///</summary>
    public static readonly Property winner = new Property(new Uri("http://schema.org/winner"));    

    ///<summary>
    ///The number of words in the text of the Article.
    ///<see cref="http://schema.org/wordCount"/>
    ///</summary>
    public static readonly Property wordCount = new Property(new Uri("http://schema.org/wordCount"));    

    ///<summary>
    ///The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
    ///<see cref="http://schema.org/workHours"/>
    ///</summary>
    public static readonly Property workHours = new Property(new Uri("http://schema.org/workHours"));    

    ///<summary>
    ///A contact location for a person's place of work.
    ///<see cref="http://schema.org/workLocation"/>
    ///</summary>
    public static readonly Property workLocation = new Property(new Uri("http://schema.org/workLocation"));    

    ///<summary>
    ///A work performed in some event, for example a play performed in a TheaterEvent.
    ///<see cref="http://schema.org/workPerformed"/>
    ///</summary>
    public static readonly Property workPerformed = new Property(new Uri("http://schema.org/workPerformed"));    

    ///<summary>
    ///The movie presented during this event.
    ///<see cref="http://schema.org/workPresented"/>
    ///</summary>
    public static readonly Property workPresented = new Property(new Uri("http://schema.org/workPresented"));    

    ///<summary>
    ///Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.
    ///<see cref="http://schema.org/workload"/>
    ///</summary>
    public static readonly Property workload = new Property(new Uri("http://schema.org/workload"));    

    ///<summary>
    ///Organizations that the person works for.
    ///<see cref="http://schema.org/worksFor"/>
    ///</summary>
    public static readonly Property worksFor = new Property(new Uri("http://schema.org/worksFor"));    

    ///<summary>
    ///The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.
    ///<see cref="http://schema.org/worstRating"/>
    ///</summary>
    public static readonly Property worstRating = new Property(new Uri("http://schema.org/worstRating"));    

    ///<summary>
    ///An XPath, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
    ///<see cref="http://schema.org/xpath"/>
    ///</summary>
    public static readonly Property xpath = new Property(new Uri("http://schema.org/xpath"));    

    ///<summary>
    ///The size of the business in annual revenue.
    ///<see cref="http://schema.org/yearlyRevenue"/>
    ///</summary>
    public static readonly Property yearlyRevenue = new Property(new Uri("http://schema.org/yearlyRevenue"));    

    ///<summary>
    ///The age of the business.
    ///<see cref="http://schema.org/yearsInOperation"/>
    ///</summary>
    public static readonly Property yearsInOperation = new Property(new Uri("http://schema.org/yearsInOperation"));    

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.
    ///<see cref="http://schema.org/Dermatology"/>
    ///</summary>
    public static readonly Resource Dermatology = new Resource(new Uri("http://schema.org/Dermatology"));    

    ///<summary>
    ///An application that can complete the request.
    ///<see cref="http://schema.org/actionApplication"/>
    ///</summary>
    public static readonly Property actionApplication = new Property(new Uri("http://schema.org/actionApplication"));    

    ///<summary>
    ///A sub property of object. The options subject to this action.
    ///<see cref="http://schema.org/actionOption"/>
    ///</summary>
    public static readonly Property actionOption = new Property(new Uri("http://schema.org/actionOption"));    

    ///<summary>
    ///A music album.
    ///<see cref="http://schema.org/album"/>
    ///</summary>
    public static readonly Property album = new Property(new Uri("http://schema.org/album"));    

    ///<summary>
    ///A release of this album.
    ///<see cref="http://schema.org/albumRelease"/>
    ///</summary>
    public static readonly Property albumRelease = new Property(new Uri("http://schema.org/albumRelease"));    

    ///<summary>
    ///Alumni of an organization.
    ///<see cref="http://schema.org/alumni"/>
    ///</summary>
    public static readonly Property alumni = new Property(new Uri("http://schema.org/alumni"));    

    ///<summary>
    ///An organization that the person is an alumni of.
    ///<see cref="http://schema.org/alumniOf"/>
    ///</summary>
    public static readonly Property alumniOf = new Property(new Uri("http://schema.org/alumniOf"));    

    ///<summary>
    ///Collection, <a href="https://en.wikipedia.org/wiki/Fonds">fonds</a>, or item held, kept or maintained by an <a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a>.
    ///<see cref="http://schema.org/archiveHeld"/>
    ///</summary>
    public static readonly Property archiveHeld = new Property(new Uri("http://schema.org/archiveHeld"));    

    ///<summary>
    ///The branches that comprise the arterial structure.
    ///<see cref="http://schema.org/arterialBranch"/>
    ///</summary>
    public static readonly Property arterialBranch = new Property(new Uri("http://schema.org/arterialBranch"));    

    ///<summary>
    ///The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.
    ///<see cref="http://schema.org/artworkSurface"/>
    ///</summary>
    public static readonly Property artworkSurface = new Property(new Uri("http://schema.org/artworkSurface"));    

    ///<summary>
    ///A person or organization attending the event.
    ///<see cref="http://schema.org/attendee"/>
    ///</summary>
    public static readonly Property attendee = new Property(new Uri("http://schema.org/attendee"));    

    ///<summary>
    ///An intended audience, i.e. a group for whom something was created.
    ///<see cref="http://schema.org/audience"/>
    ///</summary>
    public static readonly Property audience = new Property(new Uri("http://schema.org/audience"));    

    ///<summary>
    ///Device required to run the application. Used in cases where a specific make/model is required to run the application.
    ///<see cref="http://schema.org/availableOnDevice"/>
    ///</summary>
    public static readonly Property availableOnDevice = new Property(new Uri("http://schema.org/availableOnDevice"));    

    ///<summary>
    ///An award won by or for this item.
    ///<see cref="http://schema.org/award"/>
    ///</summary>
    public static readonly Property award = new Property(new Uri("http://schema.org/award"));    

    ///<summary>
    ///A posting that is part of this blog.
    ///<see cref="http://schema.org/blogPost"/>
    ///</summary>
    public static readonly Property blogPost = new Property(new Uri("http://schema.org/blogPost"));    

    ///<summary>
    ///An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
    ///<see cref="http://schema.org/broker"/>
    ///</summary>
    public static readonly Property broker = new Property(new Uri("http://schema.org/broker"));    

    ///<summary>
    ///Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
    ///<see cref="http://schema.org/clinicalPharmacology"/>
    ///</summary>
    public static readonly Property clinicalPharmacology = new Property(new Uri("http://schema.org/clinicalPharmacology"));    

    ///<summary>
    ///What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
    ///<see cref="http://schema.org/codeSampleType"/>
    ///</summary>
    public static readonly Property codeSampleType = new Property(new Uri("http://schema.org/codeSampleType"));    

    ///<summary>
    ///A colleague of the person.
    ///<see cref="http://schema.org/colleague"/>
    ///</summary>
    public static readonly Property colleague = new Property(new Uri("http://schema.org/colleague"));    

    ///<summary>
    ///A contact point for a person or organization.
    ///<see cref="http://schema.org/contactPoint"/>
    ///</summary>
    public static readonly Property contactPoint = new Property(new Uri("http://schema.org/contactPoint"));    

    ///<summary>
    ///The basic containment relation between a place and another that it contains.
    ///<see cref="http://schema.org/containsPlace"/>
    ///</summary>
    public static readonly Property containsPlace = new Property(new Uri("http://schema.org/containsPlace"));    

    ///<summary>
    ///A season that is part of the media series.
    ///<see cref="http://schema.org/containsSeason"/>
    ///</summary>
    public static readonly Property containsSeason = new Property(new Uri("http://schema.org/containsSeason"));    

    ///<summary>
    ///The location depicted or described in the content. For example, the location in a photograph or painting.
    ///<see cref="http://schema.org/contentLocation"/>
    ///</summary>
    public static readonly Property contentLocation = new Property(new Uri("http://schema.org/contentLocation"));    

    ///<summary>
    ///The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
    ///<see cref="http://schema.org/creator"/>
    ///</summary>
    public static readonly Property creator = new Property(new Uri("http://schema.org/creator"));    

    ///<summary>
    ///A dataset contained in this catalog.
    ///<see cref="http://schema.org/dataset"/>
    ///</summary>
    public static readonly Property dataset = new Property(new Uri("http://schema.org/dataset"));    

    ///<summary>
    ///The date on which the CreativeWork was created or the item was added to a DataFeed.
    ///<see cref="http://schema.org/dateCreated"/>
    ///</summary>
    public static readonly Property dateCreated = new Property(new Uri("http://schema.org/dateCreated"));    

    ///<summary>
    ///A description of the item.
    ///<see cref="http://schema.org/description"/>
    ///</summary>
    public static readonly Property description = new Property(new Uri("http://schema.org/description"));    

    ///<summary>
    ///A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/director"/>
    ///</summary>
    public static readonly Property director = new Property(new Uri("http://schema.org/director"));    

    ///<summary>
    ///The duration of the item (movie, audio recording, event, etc.) in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
    ///<see cref="http://schema.org/duration"/>
    ///</summary>
    public static readonly Property duration = new Property(new Uri("http://schema.org/duration"));    

    ///<summary>
    ///Someone working for this organization.
    ///<see cref="http://schema.org/employee"/>
    ///</summary>
    public static readonly Property employee = new Property(new Uri("http://schema.org/employee"));    

    ///<summary>
    ///The CreativeWork encoded by this media object.
    ///<see cref="http://schema.org/encodesCreativeWork"/>
    ///</summary>
    public static readonly Property encodesCreativeWork = new Property(new Uri("http://schema.org/encodesCreativeWork"));    

    ///<summary>
    ///Media type typically expressed using a MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>
    ///
    ///In cases where a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> has several media type representations, <a class="localLink" href="http://schema.org/encoding">encoding</a> can be used to indicate each <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a> alongside particular <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> information.<br/><br/>
    ///
    ///Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.
    ///<see cref="http://schema.org/encodingFormat"/>
    ///</summary>
    public static readonly Property encodingFormat = new Property(new Uri("http://schema.org/encodingFormat"));    

    ///<summary>
    ///An episode of a tv, radio or game media within a series or season.
    ///<see cref="http://schema.org/episode"/>
    ///</summary>
    public static readonly Property episode = new Property(new Uri("http://schema.org/episode"));    

    ///<summary>
    ///Upcoming or past event associated with this place, organization, or action.
    ///<see cref="http://schema.org/event"/>
    ///</summary>
    public static readonly Property _event = new Property(new Uri("http://schema.org/event"));    

    ///<summary>
    ///A creative work that this work is an example/instance/realization/derivation of.
    ///<see cref="http://schema.org/exampleOfWork"/>
    ///</summary>
    public static readonly Property exampleOfWork = new Property(new Uri("http://schema.org/exampleOfWork"));    

    ///<summary>
    ///Library file name e.g., mscorlib.dll, system.web.dll.
    ///<see cref="http://schema.org/executableLibraryName"/>
    ///</summary>
    public static readonly Property executableLibraryName = new Property(new Uri("http://schema.org/executableLibraryName"));    

    ///<summary>
    ///A sub property of location. The course where this action was taken.
    ///<see cref="http://schema.org/exerciseCourse"/>
    ///</summary>
    public static readonly Property exerciseCourse = new Property(new Uri("http://schema.org/exerciseCourse"));    

    ///<summary>
    ///A person who founded this organization.
    ///<see cref="http://schema.org/founder"/>
    ///</summary>
    public static readonly Property founder = new Property(new Uri("http://schema.org/founder"));    

    ///<summary>
    ///How often the dose is taken, e.g. 'daily'.
    ///<see cref="http://schema.org/frequency"/>
    ///</summary>
    public static readonly Property frequency = new Property(new Uri("http://schema.org/frequency"));    

    ///<summary>
    ///Video game which is played on this server.
    ///<see cref="http://schema.org/game"/>
    ///</summary>
    public static readonly Property game = new Property(new Uri("http://schema.org/game"));    

    ///<summary>
    ///The server on which  it is possible to play the game.
    ///<see cref="http://schema.org/gameServer"/>
    ///</summary>
    public static readonly Property gameServer = new Property(new Uri("http://schema.org/gameServer"));    

    ///<summary>
    ///Genre of the creative work, broadcast channel or group.
    ///<see cref="http://schema.org/genre"/>
    ///</summary>
    public static readonly Property genre = new Property(new Uri("http://schema.org/genre"));    

    ///<summary>
    ///A broadcast channel of a broadcast service.
    ///<see cref="http://schema.org/hasBroadcastChannel"/>
    ///</summary>
    public static readonly Property hasBroadcastChannel = new Property(new Uri("http://schema.org/hasBroadcastChannel"));    

    ///<summary>
    ///A Defined Term contained in this term set.
    ///<see cref="http://schema.org/hasDefinedTerm"/>
    ///</summary>
    public static readonly Property hasDefinedTerm = new Property(new Uri("http://schema.org/hasDefinedTerm"));    

    ///<summary>
    ///Either the actual menu as a structured representation, as text, or a URL of the menu.
    ///<see cref="http://schema.org/hasMenu"/>
    ///</summary>
    public static readonly Property hasMenu = new Property(new Uri("http://schema.org/hasMenu"));    

    ///<summary>
    ///<a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a> that holds, keeps or maintains the <a class="localLink" href="http://schema.org/ArchiveComponent">ArchiveComponent</a>.
    ///<see cref="http://schema.org/holdingArchive"/>
    ///</summary>
    public static readonly Property holdingArchive = new Property(new Uri("http://schema.org/holdingArchive"));    

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/DefinedTermSet">DefinedTermSet</a> that contains this term.
    ///<see cref="http://schema.org/inDefinedTermSet"/>
    ///</summary>
    public static readonly Property inDefinedTermSet = new Property(new Uri("http://schema.org/inDefinedTermSet"));    

    ///<summary>
    ///The language of the content or performance or used in an action. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/availableLanguage">availableLanguage</a>.
    ///<see cref="http://schema.org/inLanguage"/>
    ///</summary>
    public static readonly Property inLanguage = new Property(new Uri("http://schema.org/inLanguage"));    

    ///<summary>
    ///Description of bonus and commission compensation aspects of the job.
    ///<see cref="http://schema.org/incentiveCompensation"/>
    ///</summary>
    public static readonly Property incentiveCompensation = new Property(new Uri("http://schema.org/incentiveCompensation"));    

    ///<summary>
    ///The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
    ///<see cref="http://schema.org/interactionStatistic"/>
    ///</summary>
    public static readonly Property interactionStatistic = new Property(new Uri("http://schema.org/interactionStatistic"));    

    ///<summary>
    ///A flag to signal that the item, event, or place is accessible for free.
    ///<see cref="http://schema.org/isAccessibleForFree"/>
    ///</summary>
    public static readonly Property isAccessibleForFree = new Property(new Uri("http://schema.org/isAccessibleForFree"));    

    ///<summary>
    ///A resource from which this work is derived or from which it is a modification or adaption.
    ///<see cref="http://schema.org/isBasedOn"/>
    ///</summary>
    public static readonly Property isBasedOn = new Property(new Uri("http://schema.org/isBasedOn"));    

    ///<summary>
    ///Description of benefits associated with the job.
    ///<see cref="http://schema.org/jobBenefits"/>
    ///</summary>
    public static readonly Property jobBenefits = new Property(new Uri("http://schema.org/jobBenefits"));    

    ///<summary>
    ///Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href="/legislationTransposes">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state "applies" the consolidated version of the European Directive implemented in it.
    ///<see cref="http://schema.org/legislationApplies"/>
    ///</summary>
    public static readonly Property legislationApplies = new Property(new Uri("http://schema.org/legislationApplies"));    

    ///<summary>
    ///Indicates if this web page element is the main subject of the page.
    ///<see cref="http://schema.org/mainContentOfPage"/>
    ///</summary>
    public static readonly Property mainContentOfPage = new Property(new Uri("http://schema.org/mainContentOfPage"));    

    ///<summary>
    ///Indicates the primary entity described in some page or other CreativeWork.
    ///<see cref="http://schema.org/mainEntity"/>
    ///</summary>
    public static readonly Property mainEntity = new Property(new Uri("http://schema.org/mainEntity"));    

    ///<summary>
    ///Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href="/docs/datamodel.html#mainEntityBackground">background notes</a> for details.
    ///<see cref="http://schema.org/mainEntityOfPage"/>
    ///</summary>
    public static readonly Property mainEntityOfPage = new Property(new Uri("http://schema.org/mainEntityOfPage"));    

    ///<summary>
    ///A pointer to products or services offered by the organization or person.
    ///<see cref="http://schema.org/makesOffer"/>
    ///</summary>
    public static readonly Property makesOffer = new Property(new Uri("http://schema.org/makesOffer"));    

    ///<summary>
    ///A pointer to the organization or person making the offer.
    ///<see cref="http://schema.org/offeredBy"/>
    ///</summary>
    public static readonly Property offeredBy = new Property(new Uri("http://schema.org/offeredBy"));    

    ///<summary>
    ///A parent of this person.
    ///<see cref="http://schema.org/parent"/>
    ///</summary>
    public static readonly Property parent = new Property(new Uri("http://schema.org/parent"));    

    ///<summary>
    ///The series to which this episode or season belongs.
    ///<see cref="http://schema.org/partOfSeries"/>
    ///</summary>
    public static readonly Property partOfSeries = new Property(new Uri("http://schema.org/partOfSeries"));    

    ///<summary>
    ///Identifies that this <a class="localLink" href="http://schema.org/Trip">Trip</a> is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
    ///<see cref="http://schema.org/partOfTrip"/>
    ///</summary>
    public static readonly Property partOfTrip = new Property(new Uri("http://schema.org/partOfTrip"));    

    ///<summary>
    ///The date that payment is due.
    ///<see cref="http://schema.org/paymentDueDate"/>
    ///</summary>
    public static readonly Property paymentDueDate = new Property(new Uri("http://schema.org/paymentDueDate"));    

    ///<summary>
    ///The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/performTime"/>
    ///</summary>
    public static readonly Property performTime = new Property(new Uri("http://schema.org/performTime"));    

    ///<summary>
    ///A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
    ///<see cref="http://schema.org/performer"/>
    ///</summary>
    public static readonly Property performer = new Property(new Uri("http://schema.org/performer"));    

    ///<summary>
    ///A photograph of this place.
    ///<see cref="http://schema.org/photo"/>
    ///</summary>
    public static readonly Property photo = new Property(new Uri("http://schema.org/photo"));    

    ///<summary>
    ///The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
    ///<see cref="http://schema.org/provider"/>
    ///</summary>
    public static readonly Property provider = new Property(new Uri("http://schema.org/provider"));    

    ///<summary>
    ///The BroadcastService offered on this channel.
    ///<see cref="http://schema.org/providesBroadcastService"/>
    ///</summary>
    public static readonly Property providesBroadcastService = new Property(new Uri("http://schema.org/providesBroadcastService"));    

    ///<summary>
    ///A single ingredient used in the recipe, e.g. sugar, flour or garlic.
    ///<see cref="http://schema.org/recipeIngredient"/>
    ///</summary>
    public static readonly Property recipeIngredient = new Property(new Uri("http://schema.org/recipeIngredient"));    

    ///<summary>
    ///An audio recording of the work.
    ///<see cref="http://schema.org/recordedAs"/>
    ///</summary>
    public static readonly Property recordedAs = new Property(new Uri("http://schema.org/recordedAs"));    

    ///<summary>
    ///The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
    ///<see cref="http://schema.org/recordedAt"/>
    ///</summary>
    public static readonly Property recordedAt = new Property(new Uri("http://schema.org/recordedAt"));    

    ///<summary>
    ///The CreativeWork that captured all or part of this Event.
    ///<see cref="http://schema.org/recordedIn"/>
    ///</summary>
    public static readonly Property recordedIn = new Property(new Uri("http://schema.org/recordedIn"));    

    ///<summary>
    ///The composition this track is a recording of.
    ///<see cref="http://schema.org/recordingOf"/>
    ///</summary>
    public static readonly Property recordingOf = new Property(new Uri("http://schema.org/recordingOf"));    

    ///<summary>
    ///The album this is a release of.
    ///<see cref="http://schema.org/releaseOf"/>
    ///</summary>
    public static readonly Property releaseOf = new Property(new Uri("http://schema.org/releaseOf"));    

    ///<summary>
    ///A review of the item.
    ///<see cref="http://schema.org/review"/>
    ///</summary>
    public static readonly Property review = new Property(new Uri("http://schema.org/review"));    

    ///<summary>
    ///A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.
    ///<see cref="http://schema.org/roleName"/>
    ///</summary>
    public static readonly Property roleName = new Property(new Uri("http://schema.org/roleName"));    

    ///<summary>
    ///Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
    ///<see cref="http://schema.org/runtimePlatform"/>
    ///</summary>
    public static readonly Property runtimePlatform = new Property(new Uri("http://schema.org/runtimePlatform"));    

    ///<summary>
    ///A season in a media series.
    ///<see cref="http://schema.org/season"/>
    ///</summary>
    public static readonly Property season = new Property(new Uri("http://schema.org/season"));    

    ///<summary>
    ///The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
    ///<see cref="http://schema.org/serialNumber"/>
    ///</summary>
    public static readonly Property serialNumber = new Property(new Uri("http://schema.org/serialNumber"));    

    ///<summary>
    ///The geographic area where the service is provided.
    ///<see cref="http://schema.org/serviceArea"/>
    ///</summary>
    public static readonly Property serviceArea = new Property(new Uri("http://schema.org/serviceArea"));    

    ///<summary>
    ///The tangible thing generated by the service, e.g. a passport, permit, etc.
    ///<see cref="http://schema.org/serviceOutput"/>
    ///</summary>
    public static readonly Property serviceOutput = new Property(new Uri("http://schema.org/serviceOutput"));    

    ///<summary>
    ///A sibling of the person.
    ///<see cref="http://schema.org/sibling"/>
    ///</summary>
    public static readonly Property sibling = new Property(new Uri("http://schema.org/sibling"));    

    ///<summary>
    ///One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
    ///<see cref="http://schema.org/significantLink"/>
    ///</summary>
    public static readonly Property significantLink = new Property(new Uri("http://schema.org/significantLink"));    

    ///<summary>
    ///Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
    ///<see cref="http://schema.org/softwareRequirements"/>
    ///</summary>
    public static readonly Property softwareRequirements = new Property(new Uri("http://schema.org/softwareRequirements"));    

    ///<summary>
    ///The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
    ///      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
    ///      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
    ///<see cref="http://schema.org/spatialCoverage"/>
    ///</summary>
    public static readonly Property spatialCoverage = new Property(new Uri("http://schema.org/spatialCoverage"));    

    ///<summary>
    ///A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
    ///<see cref="http://schema.org/sponsor"/>
    ///</summary>
    public static readonly Property sponsor = new Property(new Uri("http://schema.org/sponsor"));    

    ///<summary>
    ///A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
    ///<see cref="http://schema.org/subOrganization"/>
    ///</summary>
    public static readonly Property subOrganization = new Property(new Uri("http://schema.org/subOrganization"));    

    ///<summary>
    ///Identifies a <a class="localLink" href="http://schema.org/Trip">Trip</a> that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
    ///<see cref="http://schema.org/subTrip"/>
    ///</summary>
    public static readonly Property subTrip = new Property(new Uri("http://schema.org/subTrip"));    

    ///<summary>
    ///A CreativeWork or Event about this Thing.
    ///<see cref="http://schema.org/subjectOf"/>
    ///</summary>
    public static readonly Property subjectOf = new Property(new Uri("http://schema.org/subjectOf"));    

    ///<summary>
    ///An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
    ///<see cref="http://schema.org/suggestedAnswer"/>
    ///</summary>
    public static readonly Property suggestedAnswer = new Property(new Uri("http://schema.org/suggestedAnswer"));    

    ///<summary>
    ///An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
    ///<see cref="http://schema.org/superEvent"/>
    ///</summary>
    public static readonly Property superEvent = new Property(new Uri("http://schema.org/superEvent"));    

    ///<summary>
    ///A sub property of object. The collection target of the action.
    ///<see cref="http://schema.org/targetCollection"/>
    ///</summary>
    public static readonly Property targetCollection = new Property(new Uri("http://schema.org/targetCollection"));    

    ///<summary>
    ///The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601 time interval format</a>. In
    ///      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
    ///      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".<br/><br/>
    ///
    ///Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.
    ///<see cref="http://schema.org/temporalCoverage"/>
    ///</summary>
    public static readonly Property temporalCoverage = new Property(new Uri("http://schema.org/temporalCoverage"));    

    ///<summary>
    ///A code that identifies this <a class="localLink" href="http://schema.org/DefinedTerm">DefinedTerm</a> within a <a class="localLink" href="http://schema.org/DefinedTermSet">DefinedTermSet</a>
    ///<see cref="http://schema.org/termCode"/>
    ///</summary>
    public static readonly Property termCode = new Property(new Uri("http://schema.org/termCode"));    

    ///<summary>
    ///A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.
    ///<see cref="http://schema.org/track"/>
    ///</summary>
    public static readonly Property track = new Property(new Uri("http://schema.org/track"));    

    ///<summary>
    ///The work that this work has been translated from. e.g. 物种起源 is a translationOf “On the Origin of Species”
    ///<see cref="http://schema.org/translationOfWork"/>
    ///</summary>
    public static readonly Property translationOfWork = new Property(new Uri("http://schema.org/translationOfWork"));    

    ///<summary>
    ///The warranty promise(s) included in the offer.
    ///<see cref="http://schema.org/warranty"/>
    ///</summary>
    public static readonly Property warranty = new Property(new Uri("http://schema.org/warranty"));    

    ///<summary>
    ///A work that is a translation of the content of this work. e.g. 西遊記 has an English workTranslation “Journey to the West”,a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation Tây du ký bình khảo.
    ///<see cref="http://schema.org/workTranslation"/>
    ///</summary>
    public static readonly Property workTranslation = new Property(new Uri("http://schema.org/workTranslation"));    

    ///<summary>
    ///The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
    ///<see cref="http://schema.org/yield"/>
    ///</summary>
    public static readonly Property yield = new Property(new Uri("http://schema.org/yield"));    

    ///<summary>
    ///The subject matter of the content.
    ///<see cref="http://schema.org/about"/>
    ///</summary>
    public static readonly Property about = new Property(new Uri("http://schema.org/about"));    

    ///<summary>
    ///An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/actor"/>
    ///</summary>
    public static readonly Property actor = new Property(new Uri("http://schema.org/actor"));    

    ///<summary>
    ///A competitor in a sports event.
    ///<see cref="http://schema.org/competitor"/>
    ///</summary>
    public static readonly Property competitor = new Property(new Uri("http://schema.org/competitor"));    

    ///<summary>
    ///The basic containment relation between a place and one that contains it.
    ///<see cref="http://schema.org/containedInPlace"/>
    ///</summary>
    public static readonly Property containedInPlace = new Property(new Uri("http://schema.org/containedInPlace"));    

    ///<summary>
    ///A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
    ///<see cref="http://schema.org/encoding"/>
    ///</summary>
    public static readonly Property encoding = new Property(new Uri("http://schema.org/encoding"));    

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/hasMap"/>
    ///</summary>
    public static readonly Property hasMap = new Property(new Uri("http://schema.org/hasMap"));    

    ///<summary>
    ///An image of the item. This can be a <a class="localLink" href="http://schema.org/URL">URL</a> or a fully described <a class="localLink" href="http://schema.org/ImageObject">ImageObject</a>.
    ///<see cref="http://schema.org/image"/>
    ///</summary>
    public static readonly Property image = new Property(new Uri("http://schema.org/image"));    

    ///<summary>
    ///A material that something is made from, e.g. leather, wool, cotton, paper.
    ///<see cref="http://schema.org/material"/>
    ///</summary>
    public static readonly Property material = new Property(new Uri("http://schema.org/material"));    

    ///<summary>
    ///An Organization (or ProgramMembership) to which this Person or Organization belongs.
    ///<see cref="http://schema.org/memberOf"/>
    ///</summary>
    public static readonly Property memberOf = new Property(new Uri("http://schema.org/memberOf"));    

    ///<summary>
    ///The larger organization that this organization is a <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a> of, if any.
    ///<see cref="http://schema.org/parentOrganization"/>
    ///</summary>
    public static readonly Property parentOrganization = new Property(new Uri("http://schema.org/parentOrganization"));    

    ///<summary>
    ///The result produced in the action. e.g. John wrote <em>a book</em>.
    ///<see cref="http://schema.org/result"/>
    ///</summary>
    public static readonly Property result = new Property(new Uri("http://schema.org/result"));    

    ///<summary>
    ///An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
    ///<see cref="http://schema.org/seller"/>
    ///</summary>
    public static readonly Property seller = new Property(new Uri("http://schema.org/seller"));    

    ///<summary>
    ///A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
    ///<see cref="http://schema.org/step"/>
    ///</summary>
    public static readonly Property step = new Property(new Uri("http://schema.org/step"));    

    ///<summary>
    ///An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
    ///<see cref="http://schema.org/subEvent"/>
    ///</summary>
    public static readonly Property subEvent = new Property(new Uri("http://schema.org/subEvent"));    

    ///<summary>
    ///A sub-property of instrument. A supply consumed when performing instructions or a direction.
    ///<see cref="http://schema.org/supply"/>
    ///</summary>
    public static readonly Property supply = new Property(new Uri("http://schema.org/supply"));    

    ///<summary>
    ///A work featured in some event, e.g. exhibited in an ExhibitionEvent.
    ///       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
    ///<see cref="http://schema.org/workFeatured"/>
    ///</summary>
    public static readonly Property workFeatured = new Property(new Uri("http://schema.org/workFeatured"));    

    ///<summary>
    ///The geographic area where a service or offered item is provided.
    ///<see cref="http://schema.org/areaServed"/>
    ///</summary>
    public static readonly Property areaServed = new Property(new Uri("http://schema.org/areaServed"));    

    ///<summary>
    ///A data catalog which contains this dataset.
    ///<see cref="http://schema.org/includedInDataCatalog"/>
    ///</summary>
    public static readonly Property includedInDataCatalog = new Property(new Uri("http://schema.org/includedInDataCatalog"));    

    ///<summary>
    ///A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
    ///<see cref="http://schema.org/member"/>
    ///</summary>
    public static readonly Property member = new Property(new Uri("http://schema.org/member"));    

    ///<summary>
    ///A sub property of participant. The participant who is at the receiving end of the action.
    ///<see cref="http://schema.org/recipient"/>
    ///</summary>
    public static readonly Property recipient = new Property(new Uri("http://schema.org/recipient"));    

    ///<summary>
    ///Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.
    ///<see cref="http://schema.org/workExample"/>
    ///</summary>
    public static readonly Property workExample = new Property(new Uri("http://schema.org/workExample"));    

    ///<summary>
    ///A Global Trade Item Number (<a href="https://www.gs1.org/standards/id-keys/gtin">GTIN</a>). GTINs identify trade items, including products and services, using numeric identification codes. The <a class="localLink" href="http://schema.org/gtin">gtin</a> property generalizes the earlier <a class="localLink" href="http://schema.org/gtin8">gtin8</a>, <a class="localLink" href="http://schema.org/gtin12">gtin12</a>, <a class="localLink" href="http://schema.org/gtin13">gtin13</a>, and <a class="localLink" href="http://schema.org/gtin14">gtin14</a> properties. The GS1 <a href="https://www.gs1.org/standards/Digital-Link/">digital link specifications</a> express GTINs as URLs. A correct <a class="localLink" href="http://schema.org/gtin">gtin</a> value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a <a href="https://www.gs1.org/services/check-digit-calculator">valid GS1 check digit</a> and meet the other rules for valid GTINs. See also <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1's GTIN Summary</a> and <a href="https://en.wikipedia.org/wiki/Global_Trade_Item_Number">Wikipedia</a> for more details. Left-padding of the gtin values is not required or encouraged.
    ///<see cref="http://schema.org/gtin"/>
    ///</summary>
    public static readonly Property gtin = new Property(new Uri("http://schema.org/gtin"));    

    ///<summary>
    ///Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
    ///<see cref="http://schema.org/hasPart"/>
    ///</summary>
    public static readonly Property hasPart = new Property(new Uri("http://schema.org/hasPart"));    

    ///<summary>
    ///The position of an item in a series or sequence of items.
    ///<see cref="http://schema.org/position"/>
    ///</summary>
    public static readonly Property position = new Property(new Uri("http://schema.org/position"));    

    ///<summary>
    ///Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
    ///<see cref="http://schema.org/isPartOf"/>
    ///</summary>
    public static readonly Property isPartOf = new Property(new Uri("http://schema.org/isPartOf"));    

    ///<summary>
    ///The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.
    ///<see cref="http://schema.org/instrument"/>
    ///</summary>
    public static readonly Property instrument = new Property(new Uri("http://schema.org/instrument"));    

    ///<summary>
    ///The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.
    ///<see cref="http://schema.org/object"/>
    ///</summary>
    public static readonly Property _object = new Property(new Uri("http://schema.org/object"));    

    ///<summary>
    ///The publishingPrinciples property indicates (typically via <a class="localLink" href="http://schema.org/URL">URL</a>) a document describing the editorial principles of an <a class="localLink" href="http://schema.org/Organization">Organization</a> (or individual e.g. a <a class="localLink" href="http://schema.org/Person">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>
    ///
    ///While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class="localLink" href="http://schema.org/funder">funder</a>) can be expressed using schema.org terminology.
    ///<see cref="http://schema.org/publishingPrinciples"/>
    ///</summary>
    public static readonly Property publishingPrinciples = new Property(new Uri("http://schema.org/publishingPrinciples"));    

    ///<summary>
    ///The location of for example where the event is happening, an organization is located, or where an action takes place.
    ///<see cref="http://schema.org/location"/>
    ///</summary>
    public static readonly Property location = new Property(new Uri("http://schema.org/location"));    

    ///<summary>
    ///Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.
    ///<see cref="http://schema.org/participant"/>
    ///</summary>
    public static readonly Property participant = new Property(new Uri("http://schema.org/participant"));    

    ///<summary>
    ///The identifier property represents any kind of identifier for any kind of <a class="localLink" href="http://schema.org/Thing">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href="/docs/datamodel.html#identifierBg">background notes</a> for more details.
    ///<see cref="http://schema.org/identifier"/>
    ///</summary>
    public static readonly Property identifier = new Property(new Uri("http://schema.org/identifier"));
}
///<summary>
///
///
///</summary>
public static class SCHEMA
{
    public static readonly Uri Namespace = new Uri("http://schema.org/");
    public static Uri GetNamespace() { return Namespace; }
    
    public static readonly string Prefix = "SCHEMA";
    public static string GetPrefix() { return Prefix; } 

    ///<summary>
    ///A 3D model represents some kind of 3D content, which may have <a class="localLink" href="http://schema.org/encoding">encoding</a>s in one or more <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a>s. Many 3D formats are available (e.g. see <a href="https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats">Wikipedia</a>); specific encoding formats can be represented using the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> property applied to the relevant <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a>. For the
    ///case of a single file published after Zip compression, the convention of appending '+zip' to the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using <a class="localLink" href="http://schema.org/3DModel">3DModel</a>.
    ///<see cref="http://schema.org/3DModel"/>
    ///</summary>
    public const string _3DModel = "http://schema.org/3DModel";

    ///<summary>
    ///A radio channel that uses AM.
    ///<see cref="http://schema.org/AMRadioChannel"/>
    ///</summary>
    public const string AMRadioChannel = "http://schema.org/AMRadioChannel";

    ///<summary>
    ///Reference documentation for application programming interfaces (APIs).
    ///<see cref="http://schema.org/APIReference"/>
    ///</summary>
    public const string APIReference = "http://schema.org/APIReference";

    ///<summary>
    ///Web page type: About page.
    ///<see cref="http://schema.org/AboutPage"/>
    ///</summary>
    public const string AboutPage = "http://schema.org/AboutPage";

    ///<summary>
    ///The act of committing to/adopting an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RejectAction">RejectAction</a>: The antonym of AcceptAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/AcceptAction"/>
    ///</summary>
    public const string AcceptAction = "http://schema.org/AcceptAction";

    ///<summary>
    ///An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.
    ///For more specific types of accommodations not defined in schema.org, one can use additionalType with external vocabularies.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Accommodation"/>
    ///</summary>
    public const string Accommodation = "http://schema.org/Accommodation";

    ///<summary>
    ///Accountancy business.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/AccountingService"/>
    ///</summary>
    public const string AccountingService = "http://schema.org/AccountingService";

    ///<summary>
    ///The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.
    ///<see cref="http://schema.org/AchieveAction"/>
    ///</summary>
    public const string AchieveAction = "http://schema.org/AchieveAction";

    ///<summary>
    ///An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog post</a> and <a href="http://schema.org/docs/actions.html">Actions overview document</a>.
    ///<see cref="http://schema.org/Action"/>
    ///</summary>
    public const string Action = "http://schema.org/Action";

    ///<summary>
    ///A set of requirements that a must be fulfilled in order to perform an Action.
    ///<see cref="http://schema.org/ActionAccessSpecification"/>
    ///</summary>
    public const string ActionAccessSpecification = "http://schema.org/ActionAccessSpecification";

    ///<summary>
    ///The status of an Action.
    ///<see cref="http://schema.org/ActionStatusType"/>
    ///</summary>
    public const string ActionStatusType = "http://schema.org/ActionStatusType";

    ///<summary>
    ///The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).
    ///<see cref="http://schema.org/ActivateAction"/>
    ///</summary>
    public const string ActivateAction = "http://schema.org/ActivateAction";

    ///<summary>
    ///The act of editing by adding an object to a collection.
    ///<see cref="http://schema.org/AddAction"/>
    ///</summary>
    public const string AddAction = "http://schema.org/AddAction";

    ///<summary>
    ///A geographical region, typically under the jurisdiction of a particular government.
    ///<see cref="http://schema.org/AdministrativeArea"/>
    ///</summary>
    public const string AdministrativeArea = "http://schema.org/AdministrativeArea";

    ///<summary>
    ///An adult entertainment establishment.
    ///<see cref="http://schema.org/AdultEntertainment"/>
    ///</summary>
    public const string AdultEntertainment = "http://schema.org/AdultEntertainment";

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/Article">Article</a> that an external entity has paid to place or to produce to its specifications. Includes <a href="https://en.wikipedia.org/wiki/Advertorial">advertorials</a>, sponsored content, native advertising and other paid content.
    ///<see cref="http://schema.org/AdvertiserContentArticle"/>
    ///</summary>
    public const string AdvertiserContentArticle = "http://schema.org/AdvertiserContentArticle";

    ///<summary>
    ///When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.
    ///<see cref="http://schema.org/AggregateOffer"/>
    ///</summary>
    public const string AggregateOffer = "http://schema.org/AggregateOffer";

    ///<summary>
    ///The average rating based on multiple ratings or reviews.
    ///<see cref="http://schema.org/AggregateRating"/>
    ///</summary>
    public const string AggregateRating = "http://schema.org/AggregateRating";

    ///<summary>
    ///The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/AgreeAction"/>
    ///</summary>
    public const string AgreeAction = "http://schema.org/AgreeAction";

    ///<summary>
    ///An organization that provides flights for passengers.
    ///<see cref="http://schema.org/Airline"/>
    ///</summary>
    public const string Airline = "http://schema.org/Airline";

    ///<summary>
    ///An airport.
    ///<see cref="http://schema.org/Airport"/>
    ///</summary>
    public const string Airport = "http://schema.org/Airport";

    ///<summary>
    ///An intangible item that describes an alignment between a learning resource and a node in an educational framework.
    ///<see cref="http://schema.org/AlignmentObject"/>
    ///</summary>
    public const string AlignmentObject = "http://schema.org/AlignmentObject";

    ///<summary>
    ///The act of organizing tasks/objects/events by associating resources to it.
    ///<see cref="http://schema.org/AllocateAction"/>
    ///</summary>
    public const string AllocateAction = "http://schema.org/AllocateAction";

    ///<summary>
    ///An amusement park.
    ///<see cref="http://schema.org/AmusementPark"/>
    ///</summary>
    public const string AmusementPark = "http://schema.org/AmusementPark";

    ///<summary>
    ///An AnalysisNewsArticle is a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.
    ///<see cref="http://schema.org/AnalysisNewsArticle"/>
    ///</summary>
    public const string AnalysisNewsArticle = "http://schema.org/AnalysisNewsArticle";

    ///<summary>
    ///Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.
    ///<see cref="http://schema.org/AnatomicalStructure"/>
    ///</summary>
    public const string AnatomicalStructure = "http://schema.org/AnatomicalStructure";

    ///<summary>
    ///An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can includes circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.
    ///<see cref="http://schema.org/AnatomicalSystem"/>
    ///</summary>
    public const string AnatomicalSystem = "http://schema.org/AnatomicalSystem";

    ///<summary>
    ///Animal shelter.
    ///<see cref="http://schema.org/AnimalShelter"/>
    ///</summary>
    public const string AnimalShelter = "http://schema.org/AnimalShelter";

    ///<summary>
    ///An answer offered to a question; perhaps correct, perhaps opinionated or wrong.
    ///<see cref="http://schema.org/Answer"/>
    ///</summary>
    public const string Answer = "http://schema.org/Answer";

    ///<summary>
    ///An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
    ///<see cref="http://schema.org/Apartment"/>
    ///</summary>
    public const string Apartment = "http://schema.org/Apartment";

    ///<summary>
    ///Residence type: Apartment complex.
    ///<see cref="http://schema.org/ApartmentComplex"/>
    ///</summary>
    public const string ApartmentComplex = "http://schema.org/ApartmentComplex";

    ///<summary>
    ///The act of inserting at the end if an ordered collection.
    ///<see cref="http://schema.org/AppendAction"/>
    ///</summary>
    public const string AppendAction = "http://schema.org/AppendAction";

    ///<summary>
    ///The act of registering to an organization/service without the guarantee to receive it.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ApplyAction"/>
    ///</summary>
    public const string ApplyAction = "http://schema.org/ApplyAction";

    ///<summary>
    ///An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.
    ///<see cref="http://schema.org/ApprovedIndication"/>
    ///</summary>
    public const string ApprovedIndication = "http://schema.org/ApprovedIndication";

    ///<summary>
    ///Aquarium.
    ///<see cref="http://schema.org/Aquarium"/>
    ///</summary>
    public const string Aquarium = "http://schema.org/Aquarium";

    ///<summary>
    ///An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections.
    ///<see cref="http://schema.org/ArchiveComponent"/>
    ///</summary>
    public const string ArchiveComponent = "http://schema.org/ArchiveComponent";

    ///<summary>
    ///An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public.
    ///<see cref="http://schema.org/ArchiveOrganization"/>
    ///</summary>
    public const string ArchiveOrganization = "http://schema.org/ArchiveOrganization";

    ///<summary>
    ///The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.
    ///<see cref="http://schema.org/ArriveAction"/>
    ///</summary>
    public const string ArriveAction = "http://schema.org/ArriveAction";

    ///<summary>
    ///An art gallery.
    ///<see cref="http://schema.org/ArtGallery"/>
    ///</summary>
    public const string ArtGallery = "http://schema.org/ArtGallery";

    ///<summary>
    ///A type of blood vessel that specifically carries blood away from the heart.
    ///<see cref="http://schema.org/Artery"/>
    ///</summary>
    public const string Artery = "http://schema.org/Artery";

    ///<summary>
    ///An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/Article"/>
    ///</summary>
    public const string Article = "http://schema.org/Article";

    ///<summary>
    ///The act of posing a question / favor to someone.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a response to AskAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/AskAction"/>
    ///</summary>
    public const string AskAction = "http://schema.org/AskAction";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> expressing an open call by a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.
    ///<see cref="http://schema.org/AskPublicNewsArticle"/>
    ///</summary>
    public const string AskPublicNewsArticle = "http://schema.org/AskPublicNewsArticle";

    ///<summary>
    ///The act of forming one's opinion, reaction or sentiment.
    ///<see cref="http://schema.org/AssessAction"/>
    ///</summary>
    public const string AssessAction = "http://schema.org/AssessAction";

    ///<summary>
    ///The act of allocating an action/event/task to some destination (someone or something).
    ///<see cref="http://schema.org/AssignAction"/>
    ///</summary>
    public const string AssignAction = "http://schema.org/AssignAction";

    ///<summary>
    ///A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.
    ///<see cref="http://schema.org/Atlas"/>
    ///</summary>
    public const string Atlas = "http://schema.org/Atlas";

    ///<summary>
    ///Professional service: Attorney. <br/><br/>
    ///
    ///This type is deprecated - <a class="localLink" href="http://schema.org/LegalService">LegalService</a> is more inclusive and less ambiguous.
    ///<see cref="http://schema.org/Attorney"/>
    ///</summary>
    public const string Attorney = "http://schema.org/Attorney";

    ///<summary>
    ///Intended audience for an item, i.e. the group for whom the item was created.
    ///<see cref="http://schema.org/Audience"/>
    ///</summary>
    public const string Audience = "http://schema.org/Audience";

    ///<summary>
    ///An audio file.
    ///<see cref="http://schema.org/AudioObject"/>
    ///</summary>
    public const string AudioObject = "http://schema.org/AudioObject";

    ///<summary>
    ///An audiobook.
    ///<see cref="http://schema.org/Audiobook"/>
    ///</summary>
    public const string Audiobook = "http://schema.org/Audiobook";

    ///<summary>
    ///The act of granting permission to an object.
    ///<see cref="http://schema.org/AuthorizeAction"/>
    ///</summary>
    public const string AuthorizeAction = "http://schema.org/AuthorizeAction";

    ///<summary>
    ///Auto body shop.
    ///<see cref="http://schema.org/AutoBodyShop"/>
    ///</summary>
    public const string AutoBodyShop = "http://schema.org/AutoBodyShop";

    ///<summary>
    ///An car dealership.
    ///<see cref="http://schema.org/AutoDealer"/>
    ///</summary>
    public const string AutoDealer = "http://schema.org/AutoDealer";

    ///<summary>
    ///An auto parts store.
    ///<see cref="http://schema.org/AutoPartsStore"/>
    ///</summary>
    public const string AutoPartsStore = "http://schema.org/AutoPartsStore";

    ///<summary>
    ///A car rental business.
    ///<see cref="http://schema.org/AutoRental"/>
    ///</summary>
    public const string AutoRental = "http://schema.org/AutoRental";

    ///<summary>
    ///Car repair business.
    ///<see cref="http://schema.org/AutoRepair"/>
    ///</summary>
    public const string AutoRepair = "http://schema.org/AutoRepair";

    ///<summary>
    ///A car wash business.
    ///<see cref="http://schema.org/AutoWash"/>
    ///</summary>
    public const string AutoWash = "http://schema.org/AutoWash";

    ///<summary>
    ///ATM/cash machine.
    ///<see cref="http://schema.org/AutomatedTeller"/>
    ///</summary>
    public const string AutomatedTeller = "http://schema.org/AutomatedTeller";

    ///<summary>
    ///Car repair, sales, or parts.
    ///<see cref="http://schema.org/AutomotiveBusiness"/>
    ///</summary>
    public const string AutomotiveBusiness = "http://schema.org/AutomotiveBusiness";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> providing historical context, definition and detail on a specific topic (aka "explainer" or "backgrounder"). For example, an in-depth article or frequently-asked-questions (<a href="https://en.wikipedia.org/wiki/FAQ">FAQ</a>) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using <a class="localLink" href="http://schema.org/Book">Book</a> or <a class="localLink" href="http://schema.org/Article">Article</a>, in particular <a class="localLink" href="http://schema.org/ScholarlyArticle">ScholarlyArticle</a>. See also <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> for related vocabulary from a learning/education perspective.
    ///<see cref="http://schema.org/BackgroundNewsArticle"/>
    ///</summary>
    public const string BackgroundNewsArticle = "http://schema.org/BackgroundNewsArticle";

    ///<summary>
    ///A bakery.
    ///<see cref="http://schema.org/Bakery"/>
    ///</summary>
    public const string Bakery = "http://schema.org/Bakery";

    ///<summary>
    ///A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.
    ///<see cref="http://schema.org/BankAccount"/>
    ///</summary>
    public const string BankAccount = "http://schema.org/BankAccount";

    ///<summary>
    ///Bank or credit union.
    ///<see cref="http://schema.org/BankOrCreditUnion"/>
    ///</summary>
    public const string BankOrCreditUnion = "http://schema.org/BankOrCreditUnion";

    ///<summary>
    ///A bar or pub.
    ///<see cref="http://schema.org/BarOrPub"/>
    ///</summary>
    public const string BarOrPub = "http://schema.org/BarOrPub";

    ///<summary>
    ///An image of a visual machine-readable code such as a barcode or QR code.
    ///<see cref="http://schema.org/Barcode"/>
    ///</summary>
    public const string Barcode = "http://schema.org/Barcode";

    ///<summary>
    ///Beach.
    ///<see cref="http://schema.org/Beach"/>
    ///</summary>
    public const string Beach = "http://schema.org/Beach";

    ///<summary>
    ///Beauty salon.
    ///<see cref="http://schema.org/BeautySalon"/>
    ///</summary>
    public const string BeautySalon = "http://schema.org/BeautySalon";

    ///<summary>
    ///Bed and breakfast.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/BedAndBreakfast"/>
    ///</summary>
    public const string BedAndBreakfast = "http://schema.org/BedAndBreakfast";

    ///<summary>
    ///An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also <a class="localLink" href="http://schema.org/BedType">BedType</a> (under development).
    ///<see cref="http://schema.org/BedDetails"/>
    ///</summary>
    public const string BedDetails = "http://schema.org/BedDetails";

    ///<summary>
    ///A type of bed. This is used for indicating the bed or beds available in an accommodation.
    ///<see cref="http://schema.org/BedType"/>
    ///</summary>
    public const string BedType = "http://schema.org/BedType";

    ///<summary>
    ///The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BefriendAction"/>
    ///</summary>
    public const string BefriendAction = "http://schema.org/BefriendAction";

    ///<summary>
    ///A bike store.
    ///<see cref="http://schema.org/BikeStore"/>
    ///</summary>
    public const string BikeStore = "http://schema.org/BikeStore";

    ///<summary>
    ///A blog.
    ///<see cref="http://schema.org/Blog"/>
    ///</summary>
    public const string Blog = "http://schema.org/Blog";

    ///<summary>
    ///A blog post.
    ///<see cref="http://schema.org/BlogPosting"/>
    ///</summary>
    public const string BlogPosting = "http://schema.org/BlogPosting";

    ///<summary>
    ///A medical test performed on a sample of a patient's blood.
    ///<see cref="http://schema.org/BloodTest"/>
    ///</summary>
    public const string BloodTest = "http://schema.org/BloodTest";

    ///<summary>
    ///A type of boarding policy used by an airline.
    ///<see cref="http://schema.org/BoardingPolicyType"/>
    ///</summary>
    public const string BoardingPolicyType = "http://schema.org/BoardingPolicyType";

    ///<summary>
    ///A body of water, such as a sea, ocean, or lake.
    ///<see cref="http://schema.org/BodyOfWater"/>
    ///</summary>
    public const string BodyOfWater = "http://schema.org/BodyOfWater";

    ///<summary>
    ///Rigid connective tissue that comprises up the skeletal structure of the human body.
    ///<see cref="http://schema.org/Bone"/>
    ///</summary>
    public const string Bone = "http://schema.org/Bone";

    ///<summary>
    ///A book.
    ///<see cref="http://schema.org/Book"/>
    ///</summary>
    public const string Book = "http://schema.org/Book";

    ///<summary>
    ///The publication format of the book.
    ///<see cref="http://schema.org/BookFormatType"/>
    ///</summary>
    public const string BookFormatType = "http://schema.org/BookFormatType";

    ///<summary>
    ///A series of books. Included books can be indicated with the hasPart property.
    ///<see cref="http://schema.org/BookSeries"/>
    ///</summary>
    public const string BookSeries = "http://schema.org/BookSeries";

    ///<summary>
    ///A bookstore.
    ///<see cref="http://schema.org/BookStore"/>
    ///</summary>
    public const string BookStore = "http://schema.org/BookStore";

    ///<summary>
    ///An agent bookmarks/flags/labels/tags/marks an object.
    ///<see cref="http://schema.org/BookmarkAction"/>
    ///</summary>
    public const string BookmarkAction = "http://schema.org/BookmarkAction";

    ///<summary>
    ///Boolean: True or False.
    ///<see cref="http://schema.org/Boolean"/>
    ///</summary>
    public const string Boolean = "http://schema.org/Boolean";

    ///<summary>
    ///The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>: Reciprocal of BorrowAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BorrowAction"/>
    ///</summary>
    public const string BorrowAction = "http://schema.org/BorrowAction";

    ///<summary>
    ///A bowling alley.
    ///<see cref="http://schema.org/BowlingAlley"/>
    ///</summary>
    public const string BowlingAlley = "http://schema.org/BowlingAlley";

    ///<summary>
    ///Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.
    ///<see cref="http://schema.org/BrainStructure"/>
    ///</summary>
    public const string BrainStructure = "http://schema.org/BrainStructure";

    ///<summary>
    ///A brand is a name used by an organization or business person for labeling a product, product group, or similar.
    ///<see cref="http://schema.org/Brand"/>
    ///</summary>
    public const string Brand = "http://schema.org/Brand";

    ///<summary>
    ///A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.<br/><br/>
    ///
    ///The <a class="localLink" href="http://schema.org/position">position</a> property is used to reconstruct the order of the items in a BreadcrumbList The convention is that a breadcrumb list has an <a class="localLink" href="http://schema.org/itemListOrder">itemListOrder</a> of <a class="localLink" href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a> (lower values listed first), and that the first items in this list correspond to the "top" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.
    ///<see cref="http://schema.org/BreadcrumbList"/>
    ///</summary>
    public const string BreadcrumbList = "http://schema.org/BreadcrumbList";

    ///<summary>
    ///Brewery.
    ///<see cref="http://schema.org/Brewery"/>
    ///</summary>
    public const string Brewery = "http://schema.org/Brewery";

    ///<summary>
    ///A bridge.
    ///<see cref="http://schema.org/Bridge"/>
    ///</summary>
    public const string Bridge = "http://schema.org/Bridge";

    ///<summary>
    ///A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/BroadcastChannel"/>
    ///</summary>
    public const string BroadcastChannel = "http://schema.org/BroadcastChannel";

    ///<summary>
    ///An over the air or online broadcast event.
    ///<see cref="http://schema.org/BroadcastEvent"/>
    ///</summary>
    public const string BroadcastEvent = "http://schema.org/BroadcastEvent";

    ///<summary>
    ///The frequency in MHz and the modulation used for a particular BroadcastService.
    ///<see cref="http://schema.org/BroadcastFrequencySpecification"/>
    ///</summary>
    public const string BroadcastFrequencySpecification = "http://schema.org/BroadcastFrequencySpecification";

    ///<summary>
    ///A delivery service through which content is provided via broadcast over the air or online.
    ///<see cref="http://schema.org/BroadcastService"/>
    ///</summary>
    public const string BroadcastService = "http://schema.org/BroadcastService";

    ///<summary>
    ///An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.
    ///<see cref="http://schema.org/BrokerageAccount"/>
    ///</summary>
    public const string BrokerageAccount = "http://schema.org/BrokerageAccount";

    ///<summary>
    ///A Buddhist temple.
    ///<see cref="http://schema.org/BuddhistTemple"/>
    ///</summary>
    public const string BuddhistTemple = "http://schema.org/BuddhistTemple";

    ///<summary>
    ///A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury busses, usually in service for long distance travel.
    ///<see cref="http://schema.org/BusOrCoach"/>
    ///</summary>
    public const string BusOrCoach = "http://schema.org/BusOrCoach";

    ///<summary>
    ///A reservation for bus travel. <br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/BusReservation"/>
    ///</summary>
    public const string BusReservation = "http://schema.org/BusReservation";

    ///<summary>
    ///A bus station.
    ///<see cref="http://schema.org/BusStation"/>
    ///</summary>
    public const string BusStation = "http://schema.org/BusStation";

    ///<summary>
    ///A bus stop.
    ///<see cref="http://schema.org/BusStop"/>
    ///</summary>
    public const string BusStop = "http://schema.org/BusStop";

    ///<summary>
    ///A trip on a commercial bus line.
    ///<see cref="http://schema.org/BusTrip"/>
    ///</summary>
    public const string BusTrip = "http://schema.org/BusTrip";

    ///<summary>
    ///A set of characteristics belonging to businesses, e.g. who compose an item's target audience.
    ///<see cref="http://schema.org/BusinessAudience"/>
    ///</summary>
    public const string BusinessAudience = "http://schema.org/BusinessAudience";

    ///<summary>
    ///A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#Business</li>
    ///<li>http://purl.org/goodrelations/v1#Enduser</li>
    ///<li>http://purl.org/goodrelations/v1#PublicInstitution</li>
    ///<li>http://purl.org/goodrelations/v1#Reseller</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BusinessEntityType"/>
    ///</summary>
    public const string BusinessEntityType = "http://schema.org/BusinessEntityType";

    ///<summary>
    ///Event type: Business event.
    ///<see cref="http://schema.org/BusinessEvent"/>
    ///</summary>
    public const string BusinessEvent = "http://schema.org/BusinessEvent";

    ///<summary>
    ///The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>
    ///<li>http://purl.org/goodrelations/v1#Dispose</li>
    ///<li>http://purl.org/goodrelations/v1#LeaseOut</li>
    ///<li>http://purl.org/goodrelations/v1#Maintain</li>
    ///<li>http://purl.org/goodrelations/v1#ProvideService</li>
    ///<li>http://purl.org/goodrelations/v1#Repair</li>
    ///<li>http://purl.org/goodrelations/v1#Sell</li>
    ///<li>http://purl.org/goodrelations/v1#Buy</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/BusinessFunction"/>
    ///</summary>
    public const string BusinessFunction = "http://schema.org/BusinessFunction";

    ///<summary>
    ///The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.
    ///<see cref="http://schema.org/BuyAction"/>
    ///</summary>
    public const string BuyAction = "http://schema.org/BuyAction";

    ///<summary>
    ///A service which provides access to media programming like TV or radio. Access may be via cable or satellite.
    ///<see cref="http://schema.org/CableOrSatelliteService"/>
    ///</summary>
    public const string CableOrSatelliteService = "http://schema.org/CableOrSatelliteService";

    ///<summary>
    ///A cafe or coffee shop.
    ///<see cref="http://schema.org/CafeOrCoffeeShop"/>
    ///</summary>
    public const string CafeOrCoffeeShop = "http://schema.org/CafeOrCoffeeShop";

    ///<summary>
    ///A camping site, campsite, or <a class="localLink" href="http://schema.org/Campground">Campground</a> is a place used for overnight stay in the outdoors, typically containing individual <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> locations. <br/><br/>
    ///
    ///In British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
    ///
    ///See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Campground"/>
    ///</summary>
    public const string Campground = "http://schema.org/Campground";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CampingPitch">CampingPitch</a> is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or <a class="localLink" href="http://schema.org/Campground">Campground</a>.<br/><br/>
    ///
    ///In British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.
    ///(Source: Wikipedia see <a href="https://en.wikipedia.org/wiki/Campsite">https://en.wikipedia.org/wiki/Campsite</a>).<br/><br/>
    ///
    ///See also the dedicated <a href="/docs/hotels.html">document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/CampingPitch"/>
    ///</summary>
    public const string CampingPitch = "http://schema.org/CampingPitch";

    ///<summary>
    ///A canal, like the Panama Canal.
    ///<see cref="http://schema.org/Canal"/>
    ///</summary>
    public const string Canal = "http://schema.org/Canal";

    ///<summary>
    ///The act of asserting that a future event/action is no longer going to happen.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of CancelAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CancelAction"/>
    ///</summary>
    public const string CancelAction = "http://schema.org/CancelAction";

    ///<summary>
    ///A car is a wheeled, self-powered motor vehicle used for transportation.
    ///<see cref="http://schema.org/Car"/>
    ///</summary>
    public const string Car = "http://schema.org/Car";

    ///<summary>
    ///A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.
    ///<see cref="http://schema.org/CarUsageType"/>
    ///</summary>
    public const string CarUsageType = "http://schema.org/CarUsageType";

    ///<summary>
    ///A casino.
    ///<see cref="http://schema.org/Casino"/>
    ///</summary>
    public const string Casino = "http://schema.org/Casino";

    ///<summary>
    ///A Category Code.
    ///<see cref="http://schema.org/CategoryCode"/>
    ///</summary>
    public const string CategoryCode = "http://schema.org/CategoryCode";

    ///<summary>
    ///A set of Category Code values.
    ///<see cref="http://schema.org/CategoryCodeSet"/>
    ///</summary>
    public const string CategoryCodeSet = "http://schema.org/CategoryCodeSet";

    ///<summary>
    ///A Catholic church.
    ///<see cref="http://schema.org/CatholicChurch"/>
    ///</summary>
    public const string CatholicChurch = "http://schema.org/CatholicChurch";

    ///<summary>
    ///A graveyard.
    ///<see cref="http://schema.org/Cemetery"/>
    ///</summary>
    public const string Cemetery = "http://schema.org/Cemetery";

    ///<summary>
    ///One of the sections into which a book is divided. A chapter usually has a section number or a name.
    ///<see cref="http://schema.org/Chapter"/>
    ///</summary>
    public const string Chapter = "http://schema.org/Chapter";

    ///<summary>
    ///An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.
    ///<see cref="http://schema.org/CheckAction"/>
    ///</summary>
    public const string CheckAction = "http://schema.org/CheckAction";

    ///<summary>
    ///The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of CheckInAction.</li>
    ///<li><a class="localLink" href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.</li>
    ///<li><a class="localLink" href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the <em>start</em> of a previously reserved service rather than its validity/existence.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CheckInAction"/>
    ///</summary>
    public const string CheckInAction = "http://schema.org/CheckInAction";

    ///<summary>
    ///The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check in) or place (e.g. hotel).<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of CheckOutAction.</li>
    ///<li><a class="localLink" href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
    ///<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CheckOutAction"/>
    ///</summary>
    public const string CheckOutAction = "http://schema.org/CheckOutAction";

    ///<summary>
    ///Web page type: Checkout page.
    ///<see cref="http://schema.org/CheckoutPage"/>
    ///</summary>
    public const string CheckoutPage = "http://schema.org/CheckoutPage";

    ///<summary>
    ///A Childcare center.
    ///<see cref="http://schema.org/ChildCare"/>
    ///</summary>
    public const string ChildCare = "http://schema.org/ChildCare";

    ///<summary>
    ///Event type: Children's event.
    ///<see cref="http://schema.org/ChildrensEvent"/>
    ///</summary>
    public const string ChildrensEvent = "http://schema.org/ChildrensEvent";

    ///<summary>
    ///The act of expressing a preference from a set of options or a large or unbounded set of choices/options.
    ///<see cref="http://schema.org/ChooseAction"/>
    ///</summary>
    public const string ChooseAction = "http://schema.org/ChooseAction";

    ///<summary>
    ///A church.
    ///<see cref="http://schema.org/Church"/>
    ///</summary>
    public const string Church = "http://schema.org/Church";

    ///<summary>
    ///A city or town.
    ///<see cref="http://schema.org/City"/>
    ///</summary>
    public const string City = "http://schema.org/City";

    ///<summary>
    ///A city hall.
    ///<see cref="http://schema.org/CityHall"/>
    ///</summary>
    public const string CityHall = "http://schema.org/CityHall";

    ///<summary>
    ///A public structure, such as a town hall or concert hall.
    ///<see cref="http://schema.org/CivicStructure"/>
    ///</summary>
    public const string CivicStructure = "http://schema.org/CivicStructure";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/Claim">Claim</a> in Schema.org represents a specific, factually-oriented claim that could be the <a class="localLink" href="http://schema.org/itemReviewed">itemReviewed</a> in a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>. The content of a claim can be summarized with the <a class="localLink" href="http://schema.org/text">text</a> property. Variations on well known claims can have their common identity indicated via <a class="localLink" href="http://schema.org/sameAs">sameAs</a> links, and summarized with a <a class="localLink" href="http://schema.org/name">name</a>. Ideally, a <a class="localLink" href="http://schema.org/Claim">Claim</a> description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.<br/><br/>
    ///
    ///Beyond <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>, the Claim type can be associated with related creative works - for example a <a class="localLink" href="http://schema.org/ScholaryArticle">ScholaryArticle</a> or <a class="localLink" href="http://schema.org/Question">Question</a> might be <a class="localLink" href="http://schema.org/about">about</a> some <a class="localLink" href="http://schema.org/Claim">Claim</a>.<br/><br/>
    ///
    ///At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.
    ///<see cref="http://schema.org/Claim"/>
    ///</summary>
    public const string Claim = "http://schema.org/Claim";

    ///<summary>
    ///A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).
    ///<see cref="http://schema.org/ClaimReview"/>
    ///</summary>
    public const string ClaimReview = "http://schema.org/ClaimReview";

    ///<summary>
    ///A class, also often called a 'Type'; equivalent to rdfs:Class.
    ///<see cref="http://schema.org/Class"/>
    ///</summary>
    public const string Class = "http://schema.org/Class";

    ///<summary>
    ///A short TV or radio program or a segment/part of a program.
    ///<see cref="http://schema.org/Clip"/>
    ///</summary>
    public const string Clip = "http://schema.org/Clip";

    ///<summary>
    ///A clothing store.
    ///<see cref="http://schema.org/ClothingStore"/>
    ///</summary>
    public const string ClothingStore = "http://schema.org/ClothingStore";

    ///<summary>
    ///Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
    ///<see cref="http://schema.org/Code"/>
    ///</summary>
    public const string Code = "http://schema.org/Code";

    ///<summary>
    ///A created collection of Creative Works or other artefacts.
    ///<see cref="http://schema.org/Collection"/>
    ///</summary>
    public const string Collection = "http://schema.org/Collection";

    ///<summary>
    ///Web page type: Collection page.
    ///<see cref="http://schema.org/CollectionPage"/>
    ///</summary>
    public const string CollectionPage = "http://schema.org/CollectionPage";

    ///<summary>
    ///A college, university, or other third-level educational institution.
    ///<see cref="http://schema.org/CollegeOrUniversity"/>
    ///</summary>
    public const string CollegeOrUniversity = "http://schema.org/CollegeOrUniversity";

    ///<summary>
    ///A comedy club.
    ///<see cref="http://schema.org/ComedyClub"/>
    ///</summary>
    public const string ComedyClub = "http://schema.org/ComedyClub";

    ///<summary>
    ///Event type: Comedy event.
    ///<see cref="http://schema.org/ComedyEvent"/>
    ///</summary>
    public const string ComedyEvent = "http://schema.org/ComedyEvent";

    ///<summary>
    ///The artwork on the cover of a comic.
    ///<see cref="http://schema.org/ComicCoverArt"/>
    ///</summary>
    public const string ComicCoverArt = "http://schema.org/ComicCoverArt";

    ///<summary>
    ///Individual comic issues are serially published as
    ///    part of a larger series. For the sake of consistency, even one-shot issues
    ///    belong to a series comprised of a single issue. All comic issues can be
    ///    uniquely identified by: the combination of the name and volume number of the
    ///    series to which the issue belongs; the issue number; and the variant
    ///    description of the issue (if any).
    ///<see cref="http://schema.org/ComicIssue"/>
    ///</summary>
    public const string ComicIssue = "http://schema.org/ComicIssue";

    ///<summary>
    ///A sequential publication of comic stories under a
    ///    unifying title, for example "The Amazing Spider-Man" or "Groo the
    ///    Wanderer".
    ///<see cref="http://schema.org/ComicSeries"/>
    ///</summary>
    public const string ComicSeries = "http://schema.org/ComicSeries";

    ///<summary>
    ///The term "story" is any indivisible, re-printable
    ///    unit of a comic, including the interior stories, covers, and backmatter. Most
    ///    comics have at least two stories: a cover (ComicCoverArt) and an interior story.
    ///<see cref="http://schema.org/ComicStory"/>
    ///</summary>
    public const string ComicStory = "http://schema.org/ComicStory";

    ///<summary>
    ///A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class="localLink" href="http://schema.org/text">text</a> property, and its topic via <a class="localLink" href="http://schema.org/about">about</a>, properties shared with all CreativeWorks.
    ///<see cref="http://schema.org/Comment"/>
    ///</summary>
    public const string Comment = "http://schema.org/Comment";

    ///<summary>
    ///The act of generating a comment about a subject.
    ///<see cref="http://schema.org/CommentAction"/>
    ///</summary>
    public const string CommentAction = "http://schema.org/CommentAction";

    ///<summary>
    ///The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.
    ///<see cref="http://schema.org/CommunicateAction"/>
    ///</summary>
    public const string CommunicateAction = "http://schema.org/CommunicateAction";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CompleteDataFeed">CompleteDataFeed</a> is a <a class="localLink" href="http://schema.org/DataFeed">DataFeed</a> whose standard representation includes content for every item currently in the feed.<br/><br/>
    ///
    ///This is the equivalent of Atom's element as defined in Feed Paging and Archiving <a href="https://tools.ietf.org/html/rfc5005">RFC 5005</a>, For example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. "Top Twenty Records") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.
    ///<see cref="http://schema.org/CompleteDataFeed"/>
    ///</summary>
    public const string CompleteDataFeed = "http://schema.org/CompleteDataFeed";

    ///<summary>
    ///A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. "electricity" or "final cleaning").
    ///<see cref="http://schema.org/CompoundPriceSpecification"/>
    ///</summary>
    public const string CompoundPriceSpecification = "http://schema.org/CompoundPriceSpecification";

    ///<summary>
    ///This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the <a class="localLink" href="http://schema.org/Language">Language</a> type.
    ///<see cref="http://schema.org/ComputerLanguage"/>
    ///</summary>
    public const string ComputerLanguage = "http://schema.org/ComputerLanguage";

    ///<summary>
    ///A computer store.
    ///<see cref="http://schema.org/ComputerStore"/>
    ///</summary>
    public const string ComputerStore = "http://schema.org/ComputerStore";

    ///<summary>
    ///The act of notifying someone that a future event/action is going to happen as expected.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/CancelAction">CancelAction</a>: The antonym of ConfirmAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ConfirmAction"/>
    ///</summary>
    public const string ConfirmAction = "http://schema.org/ConfirmAction";

    ///<summary>
    ///A Consortium is a membership <a class="localLink" href="http://schema.org/Organization">Organization</a> whose members are typically Organizations.
    ///<see cref="http://schema.org/Consortium"/>
    ///</summary>
    public const string Consortium = "http://schema.org/Consortium";

    ///<summary>
    ///The act of ingesting information/resources/food.
    ///<see cref="http://schema.org/ConsumeAction"/>
    ///</summary>
    public const string ConsumeAction = "http://schema.org/ConsumeAction";

    ///<summary>
    ///Web page type: Contact page.
    ///<see cref="http://schema.org/ContactPage"/>
    ///</summary>
    public const string ContactPage = "http://schema.org/ContactPage";

    ///<summary>
    ///A contact point&#x2014;for example, a Customer Complaints department.
    ///<see cref="http://schema.org/ContactPoint"/>
    ///</summary>
    public const string ContactPoint = "http://schema.org/ContactPoint";

    ///<summary>
    ///Enumerated options related to a ContactPoint.
    ///<see cref="http://schema.org/ContactPointOption"/>
    ///</summary>
    public const string ContactPointOption = "http://schema.org/ContactPointOption";

    ///<summary>
    ///One of the continents (for example, Europe or Africa).
    ///<see cref="http://schema.org/Continent"/>
    ///</summary>
    public const string Continent = "http://schema.org/Continent";

    ///<summary>
    ///An agent controls a device or application.
    ///<see cref="http://schema.org/ControlAction"/>
    ///</summary>
    public const string ControlAction = "http://schema.org/ControlAction";

    ///<summary>
    ///A convenience store.
    ///<see cref="http://schema.org/ConvenienceStore"/>
    ///</summary>
    public const string ConvenienceStore = "http://schema.org/ConvenienceStore";

    ///<summary>
    ///One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.
    ///<see cref="http://schema.org/Conversation"/>
    ///</summary>
    public const string Conversation = "http://schema.org/Conversation";

    ///<summary>
    ///The act of producing/preparing food.
    ///<see cref="http://schema.org/CookAction"/>
    ///</summary>
    public const string CookAction = "http://schema.org/CookAction";

    ///<summary>
    ///Organization: A business corporation.
    ///<see cref="http://schema.org/Corporation"/>
    ///</summary>
    public const string Corporation = "http://schema.org/Corporation";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/comment">comment</a> that corrects <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/CorrectionComment"/>
    ///</summary>
    public const string CorrectionComment = "http://schema.org/CorrectionComment";

    ///<summary>
    ///A country.
    ///<see cref="http://schema.org/Country"/>
    ///</summary>
    public const string Country = "http://schema.org/Country";

    ///<summary>
    ///A description of an educational course which may be offered as distinct instances at which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.
    ///<see cref="http://schema.org/Course"/>
    ///</summary>
    public const string Course = "http://schema.org/Course";

    ///<summary>
    ///An instance of a <a class="localLink" href="http://schema.org/Course">Course</a> which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.
    ///<see cref="http://schema.org/CourseInstance"/>
    ///</summary>
    public const string CourseInstance = "http://schema.org/CourseInstance";

    ///<summary>
    ///A courthouse.
    ///<see cref="http://schema.org/Courthouse"/>
    ///</summary>
    public const string Courthouse = "http://schema.org/Courthouse";

    ///<summary>
    ///The artwork on the outer surface of a CreativeWork.
    ///<see cref="http://schema.org/CoverArt"/>
    ///</summary>
    public const string CoverArt = "http://schema.org/CoverArt";

    ///<summary>
    ///The act of deliberately creating/producing/generating/building a result out of the agent.
    ///<see cref="http://schema.org/CreateAction"/>
    ///</summary>
    public const string CreateAction = "http://schema.org/CreateAction";

    ///<summary>
    ///The most generic kind of creative work, including books, movies, photographs, software programs, etc.
    ///<see cref="http://schema.org/CreativeWork"/>
    ///</summary>
    public const string CreativeWork = "http://schema.org/CreativeWork";

    ///<summary>
    ///A media season e.g. tv, radio, video game etc.
    ///<see cref="http://schema.org/CreativeWorkSeason"/>
    ///</summary>
    public const string CreativeWorkSeason = "http://schema.org/CreativeWorkSeason";

    ///<summary>
    ///A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike <a class="localLink" href="http://schema.org/ItemList">ItemList</a> which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as tv, radio and games).<br/><br/>
    ///
    ///Specific subtypes are available for describing <a class="localLink" href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink" href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink" href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink" href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink" href="http://schema.org/Periodical">Periodical</a> and <a class="localLink" href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case, the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.<br/><br/>
    ///
    ///It is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.
    ///<see cref="http://schema.org/CreativeWorkSeries"/>
    ///</summary>
    public const string CreativeWorkSeries = "http://schema.org/CreativeWorkSeries";

    ///<summary>
    ///A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#AmericanExpress</li>
    ///<li>http://purl.org/goodrelations/v1#DinersClub</li>
    ///<li>http://purl.org/goodrelations/v1#Discover</li>
    ///<li>http://purl.org/goodrelations/v1#JCB</li>
    ///<li>http://purl.org/goodrelations/v1#MasterCard</li>
    ///<li>http://purl.org/goodrelations/v1#VISA</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/CreditCard"/>
    ///</summary>
    public const string CreditCard = "http://schema.org/CreditCard";

    ///<summary>
    ///A crematorium.
    ///<see cref="http://schema.org/Crematorium"/>
    ///</summary>
    public const string Crematorium = "http://schema.org/Crematorium";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a> is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a>s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the <a class="localLink" href="http://schema.org/UserReview">UserReview</a> type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.
    ///<see cref="http://schema.org/CriticReview"/>
    ///</summary>
    public const string CriticReview = "http://schema.org/CriticReview";

    ///<summary>
    ///Text representing a CSS selector.
    ///<see cref="http://schema.org/CssSelectorType"/>
    ///</summary>
    public const string CssSelectorType = "http://schema.org/CssSelectorType";

    ///<summary>
    ///A service to convert funds from one currency to another currency.
    ///<see cref="http://schema.org/CurrencyConversionService"/>
    ///</summary>
    public const string CurrencyConversionService = "http://schema.org/CurrencyConversionService";

    ///<summary>
    ///An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.
    ///<see cref="http://schema.org/DDxElement"/>
    ///</summary>
    public const string DDxElement = "http://schema.org/DDxElement";

    ///<summary>
    ///Event type: A social dance.
    ///<see cref="http://schema.org/DanceEvent"/>
    ///</summary>
    public const string DanceEvent = "http://schema.org/DanceEvent";

    ///<summary>
    ///A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.
    ///<see cref="http://schema.org/DanceGroup"/>
    ///</summary>
    public const string DanceGroup = "http://schema.org/DanceGroup";

    ///<summary>
    ///A collection of datasets.
    ///<see cref="http://schema.org/DataCatalog"/>
    ///</summary>
    public const string DataCatalog = "http://schema.org/DataCatalog";

    ///<summary>
    ///A dataset in downloadable form.
    ///<see cref="http://schema.org/DataDownload"/>
    ///</summary>
    public const string DataDownload = "http://schema.org/DataDownload";

    ///<summary>
    ///A single feed providing structured information about one or more entities or topics.
    ///<see cref="http://schema.org/DataFeed"/>
    ///</summary>
    public const string DataFeed = "http://schema.org/DataFeed";

    ///<summary>
    ///A single item within a larger data feed.
    ///<see cref="http://schema.org/DataFeedItem"/>
    ///</summary>
    public const string DataFeedItem = "http://schema.org/DataFeedItem";

    ///<summary>
    ///The basic data types such as Integers, Strings, etc.
    ///<see cref="http://schema.org/DataType"/>
    ///</summary>
    public const string DataType = "http://schema.org/DataType";

    ///<summary>
    ///A body of structured information describing some topic(s) of interest.
    ///<see cref="http://schema.org/Dataset"/>
    ///</summary>
    public const string Dataset = "http://schema.org/Dataset";

    ///<summary>
    ///A date value in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
    ///<see cref="http://schema.org/Date"/>
    ///</summary>
    public const string Date = "http://schema.org/Date";

    ///<summary>
    ///A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).
    ///<see cref="http://schema.org/DateTime"/>
    ///</summary>
    public const string DateTime = "http://schema.org/DateTime";

    ///<summary>
    ///A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. <strong>Note:</strong> This type has been superseded by <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type is recommended
    ///<see cref="http://schema.org/DatedMoneySpecification"/>
    ///</summary>
    public const string DatedMoneySpecification = "http://schema.org/DatedMoneySpecification";

    ///<summary>
    ///The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>
    ///
    ///Originally, URLs from <a href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a class="localLink" href="http://schema.org/Monday">Monday</a>, <a class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a class="localLink" href="http://schema.org/Friday">Friday</a>, <a class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special entry for <a class="localLink" href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now been integrated directly into schema.org.
    ///<see cref="http://schema.org/DayOfWeek"/>
    ///</summary>
    public const string DayOfWeek = "http://schema.org/DayOfWeek";

    ///<summary>
    ///A day spa.
    ///<see cref="http://schema.org/DaySpa"/>
    ///</summary>
    public const string DaySpa = "http://schema.org/DaySpa";

    ///<summary>
    ///The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).
    ///<see cref="http://schema.org/DeactivateAction"/>
    ///</summary>
    public const string DeactivateAction = "http://schema.org/DeactivateAction";

    ///<summary>
    ///A defence establishment, such as an army or navy base.
    ///<see cref="http://schema.org/DefenceEstablishment"/>
    ///</summary>
    public const string DefenceEstablishment = "http://schema.org/DefenceEstablishment";

    ///<summary>
    ///A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.
    ///<see cref="http://schema.org/DefinedTerm"/>
    ///</summary>
    public const string DefinedTerm = "http://schema.org/DefinedTerm";

    ///<summary>
    ///A set of defined terms for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.
    ///<see cref="http://schema.org/DefinedTermSet"/>
    ///</summary>
    public const string DefinedTermSet = "http://schema.org/DefinedTermSet";

    ///<summary>
    ///The act of editing a recipient by removing one of its objects.
    ///<see cref="http://schema.org/DeleteAction"/>
    ///</summary>
    public const string DeleteAction = "http://schema.org/DeleteAction";

    ///<summary>
    ///The price for the delivery of an offer using a particular delivery method.
    ///<see cref="http://schema.org/DeliveryChargeSpecification"/>
    ///</summary>
    public const string DeliveryChargeSpecification = "http://schema.org/DeliveryChargeSpecification";

    ///<summary>
    ///An event involving the delivery of an item.
    ///<see cref="http://schema.org/DeliveryEvent"/>
    ///</summary>
    public const string DeliveryEvent = "http://schema.org/DeliveryEvent";

    ///<summary>
    ///A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>
    ///<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>
    ///<li>http://purl.org/goodrelations/v1#DHL</li>
    ///<li>http://purl.org/goodrelations/v1#FederalExpress</li>
    ///<li>http://purl.org/goodrelations/v1#UPS</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/DeliveryMethod"/>
    ///</summary>
    public const string DeliveryMethod = "http://schema.org/DeliveryMethod";

    ///<summary>
    ///A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.
    ///<see cref="http://schema.org/Demand"/>
    ///</summary>
    public const string Demand = "http://schema.org/Demand";

    ///<summary>
    ///A dentist.
    ///<see cref="http://schema.org/Dentist"/>
    ///</summary>
    public const string Dentist = "http://schema.org/Dentist";

    ///<summary>
    ///The act of  departing from a place. An agent departs from an fromLocation for a destination, optionally with participants.
    ///<see cref="http://schema.org/DepartAction"/>
    ///</summary>
    public const string DepartAction = "http://schema.org/DepartAction";

    ///<summary>
    ///A department store.
    ///<see cref="http://schema.org/DepartmentStore"/>
    ///</summary>
    public const string DepartmentStore = "http://schema.org/DepartmentStore";

    ///<summary>
    ///A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.
    ///<see cref="http://schema.org/DepositAccount"/>
    ///</summary>
    public const string DepositAccount = "http://schema.org/DepositAccount";

    ///<summary>
    ///A medical laboratory that offers on-site or off-site diagnostic services.
    ///<see cref="http://schema.org/DiagnosticLab"/>
    ///</summary>
    public const string DiagnosticLab = "http://schema.org/DiagnosticLab";

    ///<summary>
    ///A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.
    ///<see cref="http://schema.org/DiagnosticProcedure"/>
    ///</summary>
    public const string DiagnosticProcedure = "http://schema.org/DiagnosticProcedure";

    ///<summary>
    ///A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.
    ///<see cref="http://schema.org/Diet"/>
    ///</summary>
    public const string Diet = "http://schema.org/Diet";

    ///<summary>
    ///A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.
    ///<see cref="http://schema.org/DietarySupplement"/>
    ///</summary>
    public const string DietarySupplement = "http://schema.org/DietarySupplement";

    ///<summary>
    ///An electronic file or document.
    ///<see cref="http://schema.org/DigitalDocument"/>
    ///</summary>
    public const string DigitalDocument = "http://schema.org/DigitalDocument";

    ///<summary>
    ///A permission for a particular person or group to access a particular file.
    ///<see cref="http://schema.org/DigitalDocumentPermission"/>
    ///</summary>
    public const string DigitalDocumentPermission = "http://schema.org/DigitalDocumentPermission";

    ///<summary>
    ///A type of permission which can be granted for accessing a digital document.
    ///<see cref="http://schema.org/DigitalDocumentPermissionType"/>
    ///</summary>
    public const string DigitalDocumentPermissionType = "http://schema.org/DigitalDocumentPermissionType";

    ///<summary>
    ///The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/DisagreeAction"/>
    ///</summary>
    public const string DisagreeAction = "http://schema.org/DisagreeAction";

    ///<summary>
    ///The act of discovering/finding an object.
    ///<see cref="http://schema.org/DiscoverAction"/>
    ///</summary>
    public const string DiscoverAction = "http://schema.org/DiscoverAction";

    ///<summary>
    ///A posting to a discussion forum.
    ///<see cref="http://schema.org/DiscussionForumPosting"/>
    ///</summary>
    public const string DiscussionForumPosting = "http://schema.org/DiscussionForumPosting";

    ///<summary>
    ///The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/DislikeAction"/>
    ///</summary>
    public const string DislikeAction = "http://schema.org/DislikeAction";

    ///<summary>
    ///Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.
    ///<see cref="http://schema.org/Distance"/>
    ///</summary>
    public const string Distance = "http://schema.org/Distance";

    ///<summary>
    ///A distillery.
    ///<see cref="http://schema.org/Distillery"/>
    ///</summary>
    public const string Distillery = "http://schema.org/Distillery";

    ///<summary>
    ///The act of providing goods, services, or money without compensation, often for philanthropic reasons.
    ///<see cref="http://schema.org/DonateAction"/>
    ///</summary>
    public const string DonateAction = "http://schema.org/DonateAction";

    ///<summary>
    ///A specific dosing schedule for a drug or supplement.
    ///<see cref="http://schema.org/DoseSchedule"/>
    ///</summary>
    public const string DoseSchedule = "http://schema.org/DoseSchedule";

    ///<summary>
    ///The act of downloading an object.
    ///<see cref="http://schema.org/DownloadAction"/>
    ///</summary>
    public const string DownloadAction = "http://schema.org/DownloadAction";

    ///<summary>
    ///The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.
    ///<see cref="http://schema.org/DrawAction"/>
    ///</summary>
    public const string DrawAction = "http://schema.org/DrawAction";

    ///<summary>
    ///A picture or diagram made with a pencil, pen, or crayon rather than paint.
    ///<see cref="http://schema.org/Drawing"/>
    ///</summary>
    public const string Drawing = "http://schema.org/Drawing";

    ///<summary>
    ///The act of swallowing liquids.
    ///<see cref="http://schema.org/DrinkAction"/>
    ///</summary>
    public const string DrinkAction = "http://schema.org/DrinkAction";

    ///<summary>
    ///A value indicating which roadwheels will receive torque.
    ///<see cref="http://schema.org/DriveWheelConfigurationValue"/>
    ///</summary>
    public const string DriveWheelConfigurationValue = "http://schema.org/DriveWheelConfigurationValue";

    ///<summary>
    ///A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge make a clear difference between them.
    ///<see cref="http://schema.org/Drug"/>
    ///</summary>
    public const string Drug = "http://schema.org/Drug";

    ///<summary>
    ///A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.
    ///<see cref="http://schema.org/DrugClass"/>
    ///</summary>
    public const string DrugClass = "http://schema.org/DrugClass";

    ///<summary>
    ///The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.
    ///<see cref="http://schema.org/DrugCost"/>
    ///</summary>
    public const string DrugCost = "http://schema.org/DrugCost";

    ///<summary>
    ///Enumerated categories of medical drug costs.
    ///<see cref="http://schema.org/DrugCostCategory"/>
    ///</summary>
    public const string DrugCostCategory = "http://schema.org/DrugCostCategory";

    ///<summary>
    ///The legal availability status of a medical drug.
    ///<see cref="http://schema.org/DrugLegalStatus"/>
    ///</summary>
    public const string DrugLegalStatus = "http://schema.org/DrugLegalStatus";

    ///<summary>
    ///Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.
    ///<see cref="http://schema.org/DrugPregnancyCategory"/>
    ///</summary>
    public const string DrugPregnancyCategory = "http://schema.org/DrugPregnancyCategory";

    ///<summary>
    ///Indicates whether this drug is available by prescription or over-the-counter.
    ///<see cref="http://schema.org/DrugPrescriptionStatus"/>
    ///</summary>
    public const string DrugPrescriptionStatus = "http://schema.org/DrugPrescriptionStatus";

    ///<summary>
    ///A specific strength in which a medical drug is available in a specific country.
    ///<see cref="http://schema.org/DrugStrength"/>
    ///</summary>
    public const string DrugStrength = "http://schema.org/DrugStrength";

    ///<summary>
    ///A dry-cleaning business.
    ///<see cref="http://schema.org/DryCleaningOrLaundry"/>
    ///</summary>
    public const string DryCleaningOrLaundry = "http://schema.org/DryCleaningOrLaundry";

    ///<summary>
    ///Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>).
    ///<see cref="http://schema.org/Duration"/>
    ///</summary>
    public const string Duration = "http://schema.org/Duration";

    ///<summary>
    ///The act of swallowing solid objects.
    ///<see cref="http://schema.org/EatAction"/>
    ///</summary>
    public const string EatAction = "http://schema.org/EatAction";

    ///<summary>
    ///Event type: Education event.
    ///<see cref="http://schema.org/EducationEvent"/>
    ///</summary>
    public const string EducationEvent = "http://schema.org/EducationEvent";

    ///<summary>
    ///An EducationalAudience.
    ///<see cref="http://schema.org/EducationalAudience"/>
    ///</summary>
    public const string EducationalAudience = "http://schema.org/EducationalAudience";

    ///<summary>
    ///An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.
    ///<see cref="http://schema.org/EducationalOccupationalCredential"/>
    ///</summary>
    public const string EducationalOccupationalCredential = "http://schema.org/EducationalOccupationalCredential";

    ///<summary>
    ///A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).
    ///<see cref="http://schema.org/EducationalOccupationalProgram"/>
    ///</summary>
    public const string EducationalOccupationalProgram = "http://schema.org/EducationalOccupationalProgram";

    ///<summary>
    ///An educational organization.
    ///<see cref="http://schema.org/EducationalOrganization"/>
    ///</summary>
    public const string EducationalOrganization = "http://schema.org/EducationalOrganization";

    ///<summary>
    ///An electrician.
    ///<see cref="http://schema.org/Electrician"/>
    ///</summary>
    public const string Electrician = "http://schema.org/Electrician";

    ///<summary>
    ///An electronics store.
    ///<see cref="http://schema.org/ElectronicsStore"/>
    ///</summary>
    public const string ElectronicsStore = "http://schema.org/ElectronicsStore";

    ///<summary>
    ///An elementary school.
    ///<see cref="http://schema.org/ElementarySchool"/>
    ///</summary>
    public const string ElementarySchool = "http://schema.org/ElementarySchool";

    ///<summary>
    ///An email message.
    ///<see cref="http://schema.org/EmailMessage"/>
    ///</summary>
    public const string EmailMessage = "http://schema.org/EmailMessage";

    ///<summary>
    ///An embassy.
    ///<see cref="http://schema.org/Embassy"/>
    ///</summary>
    public const string Embassy = "http://schema.org/Embassy";

    ///<summary>
    ///An emergency service, such as a fire station or ER.
    ///<see cref="http://schema.org/EmergencyService"/>
    ///</summary>
    public const string EmergencyService = "http://schema.org/EmergencyService";

    ///<summary>
    ///A subclass of OrganizationRole used to describe employee relationships.
    ///<see cref="http://schema.org/EmployeeRole"/>
    ///</summary>
    public const string EmployeeRole = "http://schema.org/EmployeeRole";

    ///<summary>
    ///An aggregate rating of an Organization related to its role as an employer.
    ///<see cref="http://schema.org/EmployerAggregateRating"/>
    ///</summary>
    public const string EmployerAggregateRating = "http://schema.org/EmployerAggregateRating";

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/EmployerReview">EmployerReview</a> is a review of an <a class="localLink" href="http://schema.org/Organization">Organization</a> regarding its role as an employer, written by a current or former employee of that organization.
    ///<see cref="http://schema.org/EmployerReview"/>
    ///</summary>
    public const string EmployerReview = "http://schema.org/EmployerReview";

    ///<summary>
    ///An employment agency.
    ///<see cref="http://schema.org/EmploymentAgency"/>
    ///</summary>
    public const string EmploymentAgency = "http://schema.org/EmploymentAgency";

    ///<summary>
    ///An agent approves/certifies/likes/supports/sanction an object.
    ///<see cref="http://schema.org/EndorseAction"/>
    ///</summary>
    public const string EndorseAction = "http://schema.org/EndorseAction";

    ///<summary>
    ///An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a "critic's pick" blog, a
    ///"Like" or "+1" on a social network. It can be considered the <a class="localLink" href="http://schema.org/result">result</a> of an <a class="localLink" href="http://schema.org/EndorseAction">EndorseAction</a> in which the <a class="localLink" href="http://schema.org/object">object</a> of the action is rated positively by
    ///some <a class="localLink" href="http://schema.org/agent">agent</a>. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the <a class="localLink" href="http://schema.org/Action">Action</a>.<br/><br/>
    ///
    ///An <a class="localLink" href="http://schema.org/EndorsementRating">EndorsementRating</a> may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,
    ///endorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.
    ///<see cref="http://schema.org/EndorsementRating"/>
    ///</summary>
    public const string EndorsementRating = "http://schema.org/EndorsementRating";

    ///<summary>
    ///Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.
    ///<see cref="http://schema.org/Energy"/>
    ///</summary>
    public const string Energy = "http://schema.org/Energy";

    ///<summary>
    ///Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.
    ///<see cref="http://schema.org/EngineSpecification"/>
    ///</summary>
    public const string EngineSpecification = "http://schema.org/EngineSpecification";

    ///<summary>
    ///A business providing entertainment.
    ///<see cref="http://schema.org/EntertainmentBusiness"/>
    ///</summary>
    public const string EntertainmentBusiness = "http://schema.org/EntertainmentBusiness";

    ///<summary>
    ///An entry point, within some Web-based protocol.
    ///<see cref="http://schema.org/EntryPoint"/>
    ///</summary>
    public const string EntryPoint = "http://schema.org/EntryPoint";

    ///<summary>
    ///Lists or enumerations—for example, a list of cuisines or music genres, etc.
    ///<see cref="http://schema.org/Enumeration"/>
    ///</summary>
    public const string Enumeration = "http://schema.org/Enumeration";

    ///<summary>
    ///A media episode (e.g. TV, radio, video game) which can be part of a series or season.
    ///<see cref="http://schema.org/Episode"/>
    ///</summary>
    public const string Episode = "http://schema.org/Episode";

    ///<summary>
    ///An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class="localLink" href="http://schema.org/offers">offers</a> property. Repeated events may be structured as separate Event objects.
    ///<see cref="http://schema.org/Event"/>
    ///</summary>
    public const string Event = "http://schema.org/Event";

    ///<summary>
    ///A reservation for an event like a concert, sporting event, or lecture.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/EventReservation"/>
    ///</summary>
    public const string EventReservation = "http://schema.org/EventReservation";

    ///<summary>
    ///A series of <a class="localLink" href="http://schema.org/Event">Event</a>s. Included events can relate with the series using the <a class="localLink" href="http://schema.org/superEvent">superEvent</a> property.<br/><br/>
    ///
    ///An EventSeries is a collection of events that share some unifying characteristic. For example, "The Olympic Games" is a series, which
    ///is repeated regularly. The "2012 London Olympics" can be presented both as an <a class="localLink" href="http://schema.org/Event">Event</a> in the series "Olympic Games", and as an
    ///<a class="localLink" href="http://schema.org/EventSeries">EventSeries</a> that included a number of sporting competitions as Events.<br/><br/>
    ///
    ///The nature of the association between the events in an <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a> can vary, but typical examples could
    ///include a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.<br/><br/>
    ///
    ///EventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without
    ///worrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries
    ///may seem more Event-like when the period of time is compact and when aspects such as location are fixed, but
    ///it may also sometimes prove useful to describe a longer-term series as an Event.
    ///<see cref="http://schema.org/EventSeries"/>
    ///</summary>
    public const string EventSeries = "http://schema.org/EventSeries";

    ///<summary>
    ///EventStatusType is an enumeration type whose instances represent several states that an Event may be in.
    ///<see cref="http://schema.org/EventStatusType"/>
    ///</summary>
    public const string EventStatusType = "http://schema.org/EventStatusType";

    ///<summary>
    ///An event venue.
    ///<see cref="http://schema.org/EventVenue"/>
    ///</summary>
    public const string EventVenue = "http://schema.org/EventVenue";

    ///<summary>
    ///A structured value representing exchange rate.
    ///<see cref="http://schema.org/ExchangeRateSpecification"/>
    ///</summary>
    public const string ExchangeRateSpecification = "http://schema.org/ExchangeRateSpecification";

    ///<summary>
    ///The act of participating in exertive activity for the purposes of improving health and fitness.
    ///<see cref="http://schema.org/ExerciseAction"/>
    ///</summary>
    public const string ExerciseAction = "http://schema.org/ExerciseAction";

    ///<summary>
    ///A gym.
    ///<see cref="http://schema.org/ExerciseGym"/>
    ///</summary>
    public const string ExerciseGym = "http://schema.org/ExerciseGym";

    ///<summary>
    ///Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.
    ///<see cref="http://schema.org/ExercisePlan"/>
    ///</summary>
    public const string ExercisePlan = "http://schema.org/ExercisePlan";

    ///<summary>
    ///Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...
    ///<see cref="http://schema.org/ExhibitionEvent"/>
    ///</summary>
    public const string ExhibitionEvent = "http://schema.org/ExhibitionEvent";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/FAQPage">FAQPage</a> is a <a class="localLink" href="http://schema.org/WebPage">WebPage</a> presenting one or more "<a href="https://en.wikipedia.org/wiki/FAQ">Frequently asked questions</a>" (see also <a class="localLink" href="http://schema.org/QAPage">QAPage</a>).
    ///<see cref="http://schema.org/FAQPage"/>
    ///</summary>
    public const string FAQPage = "http://schema.org/FAQPage";

    ///<summary>
    ///A radio channel that uses FM.
    ///<see cref="http://schema.org/FMRadioChannel"/>
    ///</summary>
    public const string FMRadioChannel = "http://schema.org/FMRadioChannel";

    ///<summary>
    ///A fast-food restaurant.
    ///<see cref="http://schema.org/FastFoodRestaurant"/>
    ///</summary>
    public const string FastFoodRestaurant = "http://schema.org/FastFoodRestaurant";

    ///<summary>
    ///Event type: Festival.
    ///<see cref="http://schema.org/Festival"/>
    ///</summary>
    public const string Festival = "http://schema.org/Festival";

    ///<summary>
    ///The act of capturing sound and moving images on film, video, or digitally.
    ///<see cref="http://schema.org/FilmAction"/>
    ///</summary>
    public const string FilmAction = "http://schema.org/FilmAction";

    ///<summary>
    ///A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.
    ///<see cref="http://schema.org/FinancialProduct"/>
    ///</summary>
    public const string FinancialProduct = "http://schema.org/FinancialProduct";

    ///<summary>
    ///Financial services business.
    ///<see cref="http://schema.org/FinancialService"/>
    ///</summary>
    public const string FinancialService = "http://schema.org/FinancialService";

    ///<summary>
    ///The act of finding an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/SearchAction">SearchAction</a>: FindAction is generally lead by a SearchAction, but not necessarily.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/FindAction"/>
    ///</summary>
    public const string FindAction = "http://schema.org/FindAction";

    ///<summary>
    ///A fire station. With firemen.
    ///<see cref="http://schema.org/FireStation"/>
    ///</summary>
    public const string FireStation = "http://schema.org/FireStation";

    ///<summary>
    ///An airline flight.
    ///<see cref="http://schema.org/Flight"/>
    ///</summary>
    public const string Flight = "http://schema.org/Flight";

    ///<summary>
    ///A reservation for air travel.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/FlightReservation"/>
    ///</summary>
    public const string FlightReservation = "http://schema.org/FlightReservation";

    ///<summary>
    ///Data type: Floating number.
    ///<see cref="http://schema.org/Float"/>
    ///</summary>
    public const string Float = "http://schema.org/Float";

    ///<summary>
    ///A florist.
    ///<see cref="http://schema.org/Florist"/>
    ///</summary>
    public const string Florist = "http://schema.org/Florist";

    ///<summary>
    ///The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike BefriendAction, FollowAction implies that the connection is <em>not</em> necessarily reciprocal.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.</li>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/FollowAction"/>
    ///</summary>
    public const string FollowAction = "http://schema.org/FollowAction";

    ///<summary>
    ///A food-related business.
    ///<see cref="http://schema.org/FoodEstablishment"/>
    ///</summary>
    public const string FoodEstablishment = "http://schema.org/FoodEstablishment";

    ///<summary>
    ///A reservation to dine at a food-related business.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/FoodEstablishmentReservation"/>
    ///</summary>
    public const string FoodEstablishmentReservation = "http://schema.org/FoodEstablishmentReservation";

    ///<summary>
    ///Event type: Food event.
    ///<see cref="http://schema.org/FoodEvent"/>
    ///</summary>
    public const string FoodEvent = "http://schema.org/FoodEvent";

    ///<summary>
    ///A food service, like breakfast, lunch, or dinner.
    ///<see cref="http://schema.org/FoodService"/>
    ///</summary>
    public const string FoodService = "http://schema.org/FoodService";

    ///<summary>
    ///A FundingAgency is an organization that implements one or more <a class="localLink" href="http://schema.org/FundingScheme">FundingScheme</a>s and manages
    ///    the granting process (via <a class="localLink" href="http://schema.org/Grant">Grant</a>s, typically <a class="localLink" href="http://schema.org/MonetaryGrant">MonetaryGrant</a>s).
    ///    A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.<br/><br/>
    ///
    ///<pre><code>Examples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation...
    ///</code></pre>
    ///
    ///<see cref="http://schema.org/FundingAgency"/>
    ///</summary>
    public const string FundingAgency = "http://schema.org/FundingAgency";

    ///<summary>
    ///A FundingScheme combines organizational, project and policy aspects of grant-based funding
    ///    that sets guidelines, principles and mechanisms to support other kinds of projects and activities.
    ///    Funding is typically organized via <a class="localLink" href="http://schema.org/Grant">Grant</a> funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - <a class="localLink" href="http://schema.org/FundingAgency">FundingAgency</a>s such as ERC, REA, ...
    ///<see cref="http://schema.org/FundingScheme"/>
    ///</summary>
    public const string FundingScheme = "http://schema.org/FundingScheme";

    ///<summary>
    ///A furniture store.
    ///<see cref="http://schema.org/FurnitureStore"/>
    ///</summary>
    public const string FurnitureStore = "http://schema.org/FurnitureStore";

    ///<summary>
    ///The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.
    ///<see cref="http://schema.org/Game"/>
    ///</summary>
    public const string Game = "http://schema.org/Game";

    ///<summary>
    ///Indicates whether this game is multi-player, co-op or single-player.
    ///<see cref="http://schema.org/GamePlayMode"/>
    ///</summary>
    public const string GamePlayMode = "http://schema.org/GamePlayMode";

    ///<summary>
    ///Server that provides game interaction in a multiplayer game.
    ///<see cref="http://schema.org/GameServer"/>
    ///</summary>
    public const string GameServer = "http://schema.org/GameServer";

    ///<summary>
    ///Status of a game server.
    ///<see cref="http://schema.org/GameServerStatus"/>
    ///</summary>
    public const string GameServerStatus = "http://schema.org/GameServerStatus";

    ///<summary>
    ///A garden store.
    ///<see cref="http://schema.org/GardenStore"/>
    ///</summary>
    public const string GardenStore = "http://schema.org/GardenStore";

    ///<summary>
    ///A gas station.
    ///<see cref="http://schema.org/GasStation"/>
    ///</summary>
    public const string GasStation = "http://schema.org/GasStation";

    ///<summary>
    ///Residence type: Gated community.
    ///<see cref="http://schema.org/GatedResidenceCommunity"/>
    ///</summary>
    public const string GatedResidenceCommunity = "http://schema.org/GatedResidenceCommunity";

    ///<summary>
    ///An enumeration of genders.
    ///<see cref="http://schema.org/GenderType"/>
    ///</summary>
    public const string GenderType = "http://schema.org/GenderType";

    ///<summary>
    ///A general contractor.
    ///<see cref="http://schema.org/GeneralContractor"/>
    ///</summary>
    public const string GeneralContractor = "http://schema.org/GeneralContractor";

    ///<summary>
    ///A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape
    ///          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
    ///          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
    ///<see cref="http://schema.org/GeoCircle"/>
    ///</summary>
    public const string GeoCircle = "http://schema.org/GeoCircle";

    ///<summary>
    ///The geographic coordinates of a place or event.
    ///<see cref="http://schema.org/GeoCoordinates"/>
    ///</summary>
    public const string GeoCoordinates = "http://schema.org/GeoCoordinates";

    ///<summary>
    ///The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.
    ///<see cref="http://schema.org/GeoShape"/>
    ///</summary>
    public const string GeoShape = "http://schema.org/GeoShape";

    ///<summary>
    ///(Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.
    ///<see cref="http://schema.org/GeospatialGeometry"/>
    ///</summary>
    public const string GeospatialGeometry = "http://schema.org/GeospatialGeometry";

    ///<summary>
    ///The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Reciprocal of GiveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/GiveAction"/>
    ///</summary>
    public const string GiveAction = "http://schema.org/GiveAction";

    ///<summary>
    ///A golf course.
    ///<see cref="http://schema.org/GolfCourse"/>
    ///</summary>
    public const string GolfCourse = "http://schema.org/GolfCourse";

    ///<summary>
    ///A government building.
    ///<see cref="http://schema.org/GovernmentBuilding"/>
    ///</summary>
    public const string GovernmentBuilding = "http://schema.org/GovernmentBuilding";

    ///<summary>
    ///A government office&#x2014;for example, an IRS or DMV office.
    ///<see cref="http://schema.org/GovernmentOffice"/>
    ///</summary>
    public const string GovernmentOffice = "http://schema.org/GovernmentOffice";

    ///<summary>
    ///A governmental organization or agency.
    ///<see cref="http://schema.org/GovernmentOrganization"/>
    ///</summary>
    public const string GovernmentOrganization = "http://schema.org/GovernmentOrganization";

    ///<summary>
    ///A permit issued by a government agency.
    ///<see cref="http://schema.org/GovernmentPermit"/>
    ///</summary>
    public const string GovernmentPermit = "http://schema.org/GovernmentPermit";

    ///<summary>
    ///A service provided by a government organization, e.g. food stamps, veterans benefits, etc.
    ///<see cref="http://schema.org/GovernmentService"/>
    ///</summary>
    public const string GovernmentService = "http://schema.org/GovernmentService";

    ///<summary>
    ///A grant, typically financial or otherwise quantifiable, of resources. Typically a <a class="localLink" href="http://schema.org/funder">funder</a> sponsors some <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to an <a class="localLink" href="http://schema.org/Organization">Organization</a> or <a class="localLink" href="http://schema.org/Person">Person</a>,
    ///    sometimes not necessarily via a dedicated or long-lived <a class="localLink" href="http://schema.org/Project">Project</a>, resulting in one or more outputs, or <a class="localLink" href="http://schema.org/fundedItem">fundedItem</a>s. For financial sponsorship, indicate the <a class="localLink" href="http://schema.org/funder">funder</a> of a <a class="localLink" href="http://schema.org/MonetaryGrant">MonetaryGrant</a>. For non-financial support, indicate <a class="localLink" href="http://schema.org/sponsor">sponsor</a> of <a class="localLink" href="http://schema.org/Grant">Grant</a>s of resources (e.g. office space).<br/><br/>
    ///
    ///Grants support  activities directed towards some agreed collective goals, often but not always organized as <a class="localLink" href="http://schema.org/Project">Project</a>s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.<br/><br/>
    ///
    ///The amount of a <a class="localLink" href="http://schema.org/Grant">Grant</a> is represented using <a class="localLink" href="http://schema.org/amount">amount</a> as a <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>.
    ///<see cref="http://schema.org/Grant"/>
    ///</summary>
    public const string Grant = "http://schema.org/Grant";

    ///<summary>
    ///A grocery store.
    ///<see cref="http://schema.org/GroceryStore"/>
    ///</summary>
    public const string GroceryStore = "http://schema.org/GroceryStore";

    ///<summary>
    ///A business that provide Heating, Ventilation and Air Conditioning services.
    ///<see cref="http://schema.org/HVACBusiness"/>
    ///</summary>
    public const string HVACBusiness = "http://schema.org/HVACBusiness";

    ///<summary>
    ///A hair salon.
    ///<see cref="http://schema.org/HairSalon"/>
    ///</summary>
    public const string HairSalon = "http://schema.org/HairSalon";

    ///<summary>
    ///A hardware store.
    ///<see cref="http://schema.org/HardwareStore"/>
    ///</summary>
    public const string HardwareStore = "http://schema.org/HardwareStore";

    ///<summary>
    ///Health and beauty.
    ///<see cref="http://schema.org/HealthAndBeautyBusiness"/>
    ///</summary>
    public const string HealthAndBeautyBusiness = "http://schema.org/HealthAndBeautyBusiness";

    ///<summary>
    ///A health club.
    ///<see cref="http://schema.org/HealthClub"/>
    ///</summary>
    public const string HealthClub = "http://schema.org/HealthClub";

    ///<summary>
    ///A US-style health insurance plan, including PPOs, EPOs, and HMOs.
    ///<see cref="http://schema.org/HealthInsurancePlan"/>
    ///</summary>
    public const string HealthInsurancePlan = "http://schema.org/HealthInsurancePlan";

    ///<summary>
    ///A description of costs to the patient under a given network or formulary.
    ///<see cref="http://schema.org/HealthPlanCostSharingSpecification"/>
    ///</summary>
    public const string HealthPlanCostSharingSpecification = "http://schema.org/HealthPlanCostSharingSpecification";

    ///<summary>
    ///For a given health insurance plan, the specification for costs and coverage of prescription drugs.
    ///<see cref="http://schema.org/HealthPlanFormulary"/>
    ///</summary>
    public const string HealthPlanFormulary = "http://schema.org/HealthPlanFormulary";

    ///<summary>
    ///A US-style health insurance plan network.
    ///<see cref="http://schema.org/HealthPlanNetwork"/>
    ///</summary>
    public const string HealthPlanNetwork = "http://schema.org/HealthPlanNetwork";

    ///<summary>
    ///A high school.
    ///<see cref="http://schema.org/HighSchool"/>
    ///</summary>
    public const string HighSchool = "http://schema.org/HighSchool";

    ///<summary>
    ///A Hindu temple.
    ///<see cref="http://schema.org/HinduTemple"/>
    ///</summary>
    public const string HinduTemple = "http://schema.org/HinduTemple";

    ///<summary>
    ///A store that sells materials useful or necessary for various hobbies.
    ///<see cref="http://schema.org/HobbyShop"/>
    ///</summary>
    public const string HobbyShop = "http://schema.org/HobbyShop";

    ///<summary>
    ///A construction business.<br/><br/>
    ///
    ///A HomeAndConstructionBusiness is a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides services around homes and buildings.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/HomeAndConstructionBusiness"/>
    ///</summary>
    public const string HomeAndConstructionBusiness = "http://schema.org/HomeAndConstructionBusiness";

    ///<summary>
    ///A home goods store.
    ///<see cref="http://schema.org/HomeGoodsStore"/>
    ///</summary>
    public const string HomeGoodsStore = "http://schema.org/HomeGoodsStore";

    ///<summary>
    ///A hospital.
    ///<see cref="http://schema.org/Hospital"/>
    ///</summary>
    public const string Hospital = "http://schema.org/Hospital";

    ///<summary>
    ///A hostel - cheap accommodation, often in shared dormitories.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Hostel"/>
    ///</summary>
    public const string Hostel = "http://schema.org/Hostel";

    ///<summary>
    ///A hotel is an establishment that provides lodging paid on a short-term basis (Source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Hotel"/>
    ///</summary>
    public const string Hotel = "http://schema.org/Hotel";

    ///<summary>
    ///A hotel room is a single room in a hotel.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/HotelRoom"/>
    ///</summary>
    public const string HotelRoom = "http://schema.org/HotelRoom";

    ///<summary>
    ///A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
    ///<see cref="http://schema.org/House"/>
    ///</summary>
    public const string House = "http://schema.org/House";

    ///<summary>
    ///A house painting service.
    ///<see cref="http://schema.org/HousePainter"/>
    ///</summary>
    public const string HousePainter = "http://schema.org/HousePainter";

    ///<summary>
    ///Instructions that explain how to achieve a result by performing a sequence of steps.
    ///<see cref="http://schema.org/HowTo"/>
    ///</summary>
    public const string HowTo = "http://schema.org/HowTo";

    ///<summary>
    ///A direction indicating a single action to do in the instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToDirection"/>
    ///</summary>
    public const string HowToDirection = "http://schema.org/HowToDirection";

    ///<summary>
    ///An item used as either a tool or supply when performing the instructions for how to to achieve a result.
    ///<see cref="http://schema.org/HowToItem"/>
    ///</summary>
    public const string HowToItem = "http://schema.org/HowToItem";

    ///<summary>
    ///A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).
    ///<see cref="http://schema.org/HowToSection"/>
    ///</summary>
    public const string HowToSection = "http://schema.org/HowToSection";

    ///<summary>
    ///A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.
    ///<see cref="http://schema.org/HowToStep"/>
    ///</summary>
    public const string HowToStep = "http://schema.org/HowToStep";

    ///<summary>
    ///A supply consumed when performing the instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToSupply"/>
    ///</summary>
    public const string HowToSupply = "http://schema.org/HowToSupply";

    ///<summary>
    ///An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).
    ///<see cref="http://schema.org/HowToTip"/>
    ///</summary>
    public const string HowToTip = "http://schema.org/HowToTip";

    ///<summary>
    ///A tool used (but not consumed) when performing instructions for how to achieve a result.
    ///<see cref="http://schema.org/HowToTool"/>
    ///</summary>
    public const string HowToTool = "http://schema.org/HowToTool";

    ///<summary>
    ///An ice cream shop.
    ///<see cref="http://schema.org/IceCreamShop"/>
    ///</summary>
    public const string IceCreamShop = "http://schema.org/IceCreamShop";

    ///<summary>
    ///The act of intentionally disregarding the object. An agent ignores an object.
    ///<see cref="http://schema.org/IgnoreAction"/>
    ///</summary>
    public const string IgnoreAction = "http://schema.org/IgnoreAction";

    ///<summary>
    ///Web page type: Image gallery page.
    ///<see cref="http://schema.org/ImageGallery"/>
    ///</summary>
    public const string ImageGallery = "http://schema.org/ImageGallery";

    ///<summary>
    ///An image file.
    ///<see cref="http://schema.org/ImageObject"/>
    ///</summary>
    public const string ImageObject = "http://schema.org/ImageObject";

    ///<summary>
    ///Any medical imaging modality typically used for diagnostic purposes.
    ///<see cref="http://schema.org/ImagingTest"/>
    ///</summary>
    public const string ImagingTest = "http://schema.org/ImagingTest";

    ///<summary>
    ///A single, identifiable product instance (e.g. a laptop with a particular serial number).
    ///<see cref="http://schema.org/IndividualProduct"/>
    ///</summary>
    public const string IndividualProduct = "http://schema.org/IndividualProduct";

    ///<summary>
    ///Classes of agents or pathogens that transmit infectious diseases. Enumerated type.
    ///<see cref="http://schema.org/InfectiousAgentClass"/>
    ///</summary>
    public const string InfectiousAgentClass = "http://schema.org/InfectiousAgentClass";

    ///<summary>
    ///An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.
    ///<see cref="http://schema.org/InfectiousDisease"/>
    ///</summary>
    public const string InfectiousDisease = "http://schema.org/InfectiousDisease";

    ///<summary>
    ///The act of notifying someone of information pertinent to them, with no expectation of a response.
    ///<see cref="http://schema.org/InformAction"/>
    ///</summary>
    public const string InformAction = "http://schema.org/InformAction";

    ///<summary>
    ///The act of adding at a specific location in an ordered collection.
    ///<see cref="http://schema.org/InsertAction"/>
    ///</summary>
    public const string InsertAction = "http://schema.org/InsertAction";

    ///<summary>
    ///The act of installing an application.
    ///<see cref="http://schema.org/InstallAction"/>
    ///</summary>
    public const string InstallAction = "http://schema.org/InstallAction";

    ///<summary>
    ///An Insurance agency.
    ///<see cref="http://schema.org/InsuranceAgency"/>
    ///</summary>
    public const string InsuranceAgency = "http://schema.org/InsuranceAgency";

    ///<summary>
    ///A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
    ///<see cref="http://schema.org/Intangible"/>
    ///</summary>
    public const string Intangible = "http://schema.org/Intangible";

    ///<summary>
    ///Data type: Integer.
    ///<see cref="http://schema.org/Integer"/>
    ///</summary>
    public const string Integer = "http://schema.org/Integer";

    ///<summary>
    ///The act of interacting with another person or organization.
    ///<see cref="http://schema.org/InteractAction"/>
    ///</summary>
    public const string InteractAction = "http://schema.org/InteractAction";

    ///<summary>
    ///A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.
    ///<see cref="http://schema.org/InteractionCounter"/>
    ///</summary>
    public const string InteractionCounter = "http://schema.org/InteractionCounter";

    ///<summary>
    ///An internet cafe.
    ///<see cref="http://schema.org/InternetCafe"/>
    ///</summary>
    public const string InternetCafe = "http://schema.org/InternetCafe";

    ///<summary>
    ///A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.
    ///<see cref="http://schema.org/InvestmentFund"/>
    ///</summary>
    public const string InvestmentFund = "http://schema.org/InvestmentFund";

    ///<summary>
    ///A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.
    ///<see cref="http://schema.org/InvestmentOrDeposit"/>
    ///</summary>
    public const string InvestmentOrDeposit = "http://schema.org/InvestmentOrDeposit";

    ///<summary>
    ///The act of asking someone to attend an event. Reciprocal of RsvpAction.
    ///<see cref="http://schema.org/InviteAction"/>
    ///</summary>
    public const string InviteAction = "http://schema.org/InviteAction";

    ///<summary>
    ///A statement of the money due for goods or services; a bill.
    ///<see cref="http://schema.org/Invoice"/>
    ///</summary>
    public const string Invoice = "http://schema.org/Invoice";

    ///<summary>
    ///A list of possible product availability options.
    ///<see cref="http://schema.org/ItemAvailability"/>
    ///</summary>
    public const string ItemAvailability = "http://schema.org/ItemAvailability";

    ///<summary>
    ///A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.
    ///<see cref="http://schema.org/ItemList"/>
    ///</summary>
    public const string ItemList = "http://schema.org/ItemList";

    ///<summary>
    ///Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.
    ///<see cref="http://schema.org/ItemListOrderType"/>
    ///</summary>
    public const string ItemListOrderType = "http://schema.org/ItemListOrderType";

    ///<summary>
    ///A page devoted to a single item, such as a particular product or hotel.
    ///<see cref="http://schema.org/ItemPage"/>
    ///</summary>
    public const string ItemPage = "http://schema.org/ItemPage";

    ///<summary>
    ///A jewelry store.
    ///<see cref="http://schema.org/JewelryStore"/>
    ///</summary>
    public const string JewelryStore = "http://schema.org/JewelryStore";

    ///<summary>
    ///A listing that describes a job opening in a certain organization.
    ///<see cref="http://schema.org/JobPosting"/>
    ///</summary>
    public const string JobPosting = "http://schema.org/JobPosting";

    ///<summary>
    ///An agent joins an event/group with participants/friends at a location.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, JoinAction refers to joining a group/team of people.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.</li>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/JoinAction"/>
    ///</summary>
    public const string JoinAction = "http://schema.org/JoinAction";

    ///<summary>
    ///The anatomical location at which two or more bones make contact.
    ///<see cref="http://schema.org/Joint"/>
    ///</summary>
    public const string Joint = "http://schema.org/Joint";

    ///<summary>
    ///A lake (for example, Lake Pontrachain).
    ///<see cref="http://schema.org/LakeBodyOfWater"/>
    ///</summary>
    public const string LakeBodyOfWater = "http://schema.org/LakeBodyOfWater";

    ///<summary>
    ///A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.
    ///<see cref="http://schema.org/Landform"/>
    ///</summary>
    public const string Landform = "http://schema.org/Landform";

    ///<summary>
    ///An historical landmark or building.
    ///<see cref="http://schema.org/LandmarksOrHistoricalBuildings"/>
    ///</summary>
    public const string LandmarksOrHistoricalBuildings = "http://schema.org/LandmarksOrHistoricalBuildings";

    ///<summary>
    ///Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be used via the <a class="localLink" href="http://schema.org/alternateName">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class="localLink" href="http://schema.org/ComputerLanguage">ComputerLanguage</a>.
    ///<see cref="http://schema.org/Language"/>
    ///</summary>
    public const string Language = "http://schema.org/Language";

    ///<summary>
    ///An agent leaves an event / group with participants/friends at a location.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: The antonym of LeaveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/LeaveAction"/>
    ///</summary>
    public const string LeaveAction = "http://schema.org/LeaveAction";

    ///<summary>
    ///A list of possible statuses for the legal force of a legislation.
    ///<see cref="http://schema.org/LegalForceStatus"/>
    ///</summary>
    public const string LegalForceStatus = "http://schema.org/LegalForceStatus";

    ///<summary>
    ///A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.<br/><br/>
    ///
    ///As a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described as a <a class="localLink" href="http://schema.org/provider">provider</a> of one or more <a class="localLink" href="http://schema.org/Service">Service</a>(s).
    ///<see cref="http://schema.org/LegalService"/>
    ///</summary>
    public const string LegalService = "http://schema.org/LegalService";

    ///<summary>
    ///A list of possible levels for the legal validity of a legislation.
    ///<see cref="http://schema.org/LegalValueLevel"/>
    ///</summary>
    public const string LegalValueLevel = "http://schema.org/LegalValueLevel";

    ///<summary>
    ///A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).
    ///<see cref="http://schema.org/Legislation"/>
    ///</summary>
    public const string Legislation = "http://schema.org/Legislation";

    ///<summary>
    ///A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.
    ///<see cref="http://schema.org/LegislationObject"/>
    ///</summary>
    public const string LegislationObject = "http://schema.org/LegislationObject";

    ///<summary>
    ///A legislative building&#x2014;for example, the state capitol.
    ///<see cref="http://schema.org/LegislativeBuilding"/>
    ///</summary>
    public const string LegislativeBuilding = "http://schema.org/LegislativeBuilding";

    ///<summary>
    ///The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of LendAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/LendAction"/>
    ///</summary>
    public const string LendAction = "http://schema.org/LendAction";

    ///<summary>
    ///A library.
    ///<see cref="http://schema.org/Library"/>
    ///</summary>
    public const string Library = "http://schema.org/Library";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/LibrarySystem">LibrarySystem</a> is a collaborative system amongst several libraries.
    ///<see cref="http://schema.org/LibrarySystem"/>
    ///</summary>
    public const string LibrarySystem = "http://schema.org/LibrarySystem";

    ///<summary>
    ///A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.
    ///<see cref="http://schema.org/LifestyleModification"/>
    ///</summary>
    public const string LifestyleModification = "http://schema.org/LifestyleModification";

    ///<summary>
    ///A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.
    ///<see cref="http://schema.org/Ligament"/>
    ///</summary>
    public const string Ligament = "http://schema.org/Ligament";

    ///<summary>
    ///The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.
    ///<see cref="http://schema.org/LikeAction"/>
    ///</summary>
    public const string LikeAction = "http://schema.org/LikeAction";

    ///<summary>
    ///A Role that represents a Web link e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.
    ///<see cref="http://schema.org/LinkRole"/>
    ///</summary>
    public const string LinkRole = "http://schema.org/LinkRole";

    ///<summary>
    ///A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.
    ///<see cref="http://schema.org/LiquorStore"/>
    ///</summary>
    public const string LiquorStore = "http://schema.org/LiquorStore";

    ///<summary>
    ///An list item, e.g. a step in a checklist or how-to description.
    ///<see cref="http://schema.org/ListItem"/>
    ///</summary>
    public const string ListItem = "http://schema.org/ListItem";

    ///<summary>
    ///The act of consuming audio content.
    ///<see cref="http://schema.org/ListenAction"/>
    ///</summary>
    public const string ListenAction = "http://schema.org/ListenAction";

    ///<summary>
    ///Event type: Literary event.
    ///<see cref="http://schema.org/LiteraryEvent"/>
    ///</summary>
    public const string LiteraryEvent = "http://schema.org/LiteraryEvent";

    ///<summary>
    ///A blog post intended to provide a rolling textual coverage of an ongoing event through continuous updates.
    ///<see cref="http://schema.org/LiveBlogPosting"/>
    ///</summary>
    public const string LiveBlogPosting = "http://schema.org/LiveBlogPosting";

    ///<summary>
    ///A financial product for the loaning of an amount of money under agreed terms and charges.
    ///<see cref="http://schema.org/LoanOrCredit"/>
    ///</summary>
    public const string LoanOrCredit = "http://schema.org/LoanOrCredit";

    ///<summary>
    ///A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
    ///<see cref="http://schema.org/LocalBusiness"/>
    ///</summary>
    public const string LocalBusiness = "http://schema.org/LocalBusiness";

    ///<summary>
    ///Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.
    ///<see cref="http://schema.org/LocationFeatureSpecification"/>
    ///</summary>
    public const string LocationFeatureSpecification = "http://schema.org/LocationFeatureSpecification";

    ///<summary>
    ///A DeliveryMethod in which an item is made available via locker.
    ///<see cref="http://schema.org/LockerDelivery"/>
    ///</summary>
    public const string LockerDelivery = "http://schema.org/LockerDelivery";

    ///<summary>
    ///A locksmith.
    ///<see cref="http://schema.org/Locksmith"/>
    ///</summary>
    public const string Locksmith = "http://schema.org/Locksmith";

    ///<summary>
    ///A lodging business, such as a motel, hotel, or inn.
    ///<see cref="http://schema.org/LodgingBusiness"/>
    ///</summary>
    public const string LodgingBusiness = "http://schema.org/LodgingBusiness";

    ///<summary>
    ///A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/LodgingReservation"/>
    ///</summary>
    public const string LodgingReservation = "http://schema.org/LodgingReservation";

    ///<summary>
    ///The act of being defeated in a competitive activity.
    ///<see cref="http://schema.org/LoseAction"/>
    ///</summary>
    public const string LoseAction = "http://schema.org/LoseAction";

    ///<summary>
    ///A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.
    ///<see cref="http://schema.org/LymphaticVessel"/>
    ///</summary>
    public const string LymphaticVessel = "http://schema.org/LymphaticVessel";

    ///<summary>
    ///A book, document, or piece of music written by hand rather than typed or printed.
    ///<see cref="http://schema.org/Manuscript"/>
    ///</summary>
    public const string Manuscript = "http://schema.org/Manuscript";

    ///<summary>
    ///A map.
    ///<see cref="http://schema.org/Map"/>
    ///</summary>
    public const string Map = "http://schema.org/Map";

    ///<summary>
    ///An enumeration of several kinds of Map.
    ///<see cref="http://schema.org/MapCategoryType"/>
    ///</summary>
    public const string MapCategoryType = "http://schema.org/MapCategoryType";

    ///<summary>
    ///The act of marrying a person.
    ///<see cref="http://schema.org/MarryAction"/>
    ///</summary>
    public const string MarryAction = "http://schema.org/MarryAction";

    ///<summary>
    ///Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.
    ///<see cref="http://schema.org/Mass"/>
    ///</summary>
    public const string Mass = "http://schema.org/Mass";

    ///<summary>
    ///The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
    ///<see cref="http://schema.org/MaximumDoseSchedule"/>
    ///</summary>
    public const string MaximumDoseSchedule = "http://schema.org/MaximumDoseSchedule";

    ///<summary>
    ///A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
    ///<see cref="http://schema.org/MediaObject"/>
    ///</summary>
    public const string MediaObject = "http://schema.org/MediaObject";

    ///<summary>
    ///A subscription which allows a user to access media including audio, video, books, etc.
    ///<see cref="http://schema.org/MediaSubscription"/>
    ///</summary>
    public const string MediaSubscription = "http://schema.org/MediaSubscription";

    ///<summary>
    ///Target audiences for medical web pages. Enumerated type.
    ///<see cref="http://schema.org/MedicalAudience"/>
    ///</summary>
    public const string MedicalAudience = "http://schema.org/MedicalAudience";

    ///<summary>
    ///A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include differents business run by health professionals.
    ///<see cref="http://schema.org/MedicalBusiness"/>
    ///</summary>
    public const string MedicalBusiness = "http://schema.org/MedicalBusiness";

    ///<summary>
    ///The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.
    ///<see cref="http://schema.org/MedicalCause"/>
    ///</summary>
    public const string MedicalCause = "http://schema.org/MedicalCause";

    ///<summary>
    ///A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.
    ///<see cref="http://schema.org/MedicalClinic"/>
    ///</summary>
    public const string MedicalClinic = "http://schema.org/MedicalClinic";

    ///<summary>
    ///A code for a medical entity.
    ///<see cref="http://schema.org/MedicalCode"/>
    ///</summary>
    public const string MedicalCode = "http://schema.org/MedicalCode";

    ///<summary>
    ///Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.
    ///<see cref="http://schema.org/MedicalCondition"/>
    ///</summary>
    public const string MedicalCondition = "http://schema.org/MedicalCondition";

    ///<summary>
    ///A stage of a medical condition, such as 'Stage IIIa'.
    ///<see cref="http://schema.org/MedicalConditionStage"/>
    ///</summary>
    public const string MedicalConditionStage = "http://schema.org/MedicalConditionStage";

    ///<summary>
    ///A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but that these risks may be outweighed by other considerations or mitigated by other measures).
    ///<see cref="http://schema.org/MedicalContraindication"/>
    ///</summary>
    public const string MedicalContraindication = "http://schema.org/MedicalContraindication";

    ///<summary>
    ///Any object used in a medical capacity, such as to diagnose or treat a patient.
    ///<see cref="http://schema.org/MedicalDevice"/>
    ///</summary>
    public const string MedicalDevice = "http://schema.org/MedicalDevice";

    ///<summary>
    ///Categories of medical devices, organized by the purpose or intended use of the device.
    ///<see cref="http://schema.org/MedicalDevicePurpose"/>
    ///</summary>
    public const string MedicalDevicePurpose = "http://schema.org/MedicalDevicePurpose";

    ///<summary>
    ///The most generic type of entity related to health and the practice of medicine.
    ///<see cref="http://schema.org/MedicalEntity"/>
    ///</summary>
    public const string MedicalEntity = "http://schema.org/MedicalEntity";

    ///<summary>
    ///Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.
    ///<see cref="http://schema.org/MedicalEnumeration"/>
    ///</summary>
    public const string MedicalEnumeration = "http://schema.org/MedicalEnumeration";

    ///<summary>
    ///Level of evidence for a medical guideline. Enumerated type.
    ///<see cref="http://schema.org/MedicalEvidenceLevel"/>
    ///</summary>
    public const string MedicalEvidenceLevel = "http://schema.org/MedicalEvidenceLevel";

    ///<summary>
    ///Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.
    ///<see cref="http://schema.org/MedicalGuideline"/>
    ///</summary>
    public const string MedicalGuideline = "http://schema.org/MedicalGuideline";

    ///<summary>
    ///A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.
    ///<see cref="http://schema.org/MedicalGuidelineContraindication"/>
    ///</summary>
    public const string MedicalGuidelineContraindication = "http://schema.org/MedicalGuidelineContraindication";

    ///<summary>
    ///A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.
    ///<see cref="http://schema.org/MedicalGuidelineRecommendation"/>
    ///</summary>
    public const string MedicalGuidelineRecommendation = "http://schema.org/MedicalGuidelineRecommendation";

    ///<summary>
    ///Any medical imaging modality typically used for diagnostic purposes. Enumerated type.
    ///<see cref="http://schema.org/MedicalImagingTechnique"/>
    ///</summary>
    public const string MedicalImagingTechnique = "http://schema.org/MedicalImagingTechnique";

    ///<summary>
    ///A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.
    ///<see cref="http://schema.org/MedicalIndication"/>
    ///</summary>
    public const string MedicalIndication = "http://schema.org/MedicalIndication";

    ///<summary>
    ///A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.
    ///<see cref="http://schema.org/MedicalIntangible"/>
    ///</summary>
    public const string MedicalIntangible = "http://schema.org/MedicalIntangible";

    ///<summary>
    ///An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.
    ///<see cref="http://schema.org/MedicalObservationalStudy"/>
    ///</summary>
    public const string MedicalObservationalStudy = "http://schema.org/MedicalObservationalStudy";

    ///<summary>
    ///Design models for observational medical studies. Enumerated type.
    ///<see cref="http://schema.org/MedicalObservationalStudyDesign"/>
    ///</summary>
    public const string MedicalObservationalStudyDesign = "http://schema.org/MedicalObservationalStudyDesign";

    ///<summary>
    ///A medical organization (physical or not), such as hospital, institution or clinic.
    ///<see cref="http://schema.org/MedicalOrganization"/>
    ///</summary>
    public const string MedicalOrganization = "http://schema.org/MedicalOrganization";

    ///<summary>
    ///A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.
    ///<see cref="http://schema.org/MedicalProcedure"/>
    ///</summary>
    public const string MedicalProcedure = "http://schema.org/MedicalProcedure";

    ///<summary>
    ///An enumeration that describes different types of medical procedures.
    ///<see cref="http://schema.org/MedicalProcedureType"/>
    ///</summary>
    public const string MedicalProcedureType = "http://schema.org/MedicalProcedureType";

    ///<summary>
    ///A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.
    ///<see cref="http://schema.org/MedicalRiskCalculator"/>
    ///</summary>
    public const string MedicalRiskCalculator = "http://schema.org/MedicalRiskCalculator";

    ///<summary>
    ///Any rule set or interactive tool for estimating the risk of developing a complication or condition.
    ///<see cref="http://schema.org/MedicalRiskEstimator"/>
    ///</summary>
    public const string MedicalRiskEstimator = "http://schema.org/MedicalRiskEstimator";

    ///<summary>
    ///A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.
    ///<see cref="http://schema.org/MedicalRiskFactor"/>
    ///</summary>
    public const string MedicalRiskFactor = "http://schema.org/MedicalRiskFactor";

    ///<summary>
    ///A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.
    ///<see cref="http://schema.org/MedicalRiskScore"/>
    ///</summary>
    public const string MedicalRiskScore = "http://schema.org/MedicalRiskScore";

    ///<summary>
    ///A scholarly article in the medical domain.
    ///<see cref="http://schema.org/MedicalScholarlyArticle"/>
    ///</summary>
    public const string MedicalScholarlyArticle = "http://schema.org/MedicalScholarlyArticle";

    ///<summary>
    ///Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.
    ///<see cref="http://schema.org/MedicalSign"/>
    ///</summary>
    public const string MedicalSign = "http://schema.org/MedicalSign";

    ///<summary>
    ///Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.
    ///<see cref="http://schema.org/MedicalSignOrSymptom"/>
    ///</summary>
    public const string MedicalSignOrSymptom = "http://schema.org/MedicalSignOrSymptom";

    ///<summary>
    ///Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.
    ///<see cref="http://schema.org/MedicalSpecialty"/>
    ///</summary>
    public const string MedicalSpecialty = "http://schema.org/MedicalSpecialty";

    ///<summary>
    ///A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.
    ///<see cref="http://schema.org/MedicalStudy"/>
    ///</summary>
    public const string MedicalStudy = "http://schema.org/MedicalStudy";

    ///<summary>
    ///The status of a medical study. Enumerated type.
    ///<see cref="http://schema.org/MedicalStudyStatus"/>
    ///</summary>
    public const string MedicalStudyStatus = "http://schema.org/MedicalStudyStatus";

    ///<summary>
    ///Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.
    ///<see cref="http://schema.org/MedicalSymptom"/>
    ///</summary>
    public const string MedicalSymptom = "http://schema.org/MedicalSymptom";

    ///<summary>
    ///Any medical test, typically performed for diagnostic purposes.
    ///<see cref="http://schema.org/MedicalTest"/>
    ///</summary>
    public const string MedicalTest = "http://schema.org/MedicalTest";

    ///<summary>
    ///Any collection of tests commonly ordered together.
    ///<see cref="http://schema.org/MedicalTestPanel"/>
    ///</summary>
    public const string MedicalTestPanel = "http://schema.org/MedicalTestPanel";

    ///<summary>
    ///Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.
    ///<see cref="http://schema.org/MedicalTherapy"/>
    ///</summary>
    public const string MedicalTherapy = "http://schema.org/MedicalTherapy";

    ///<summary>
    ///A medical trial is a type of medical study that uses scientific process used to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.
    ///<see cref="http://schema.org/MedicalTrial"/>
    ///</summary>
    public const string MedicalTrial = "http://schema.org/MedicalTrial";

    ///<summary>
    ///Design models for medical trials. Enumerated type.
    ///<see cref="http://schema.org/MedicalTrialDesign"/>
    ///</summary>
    public const string MedicalTrialDesign = "http://schema.org/MedicalTrialDesign";

    ///<summary>
    ///A web page that provides medical information.
    ///<see cref="http://schema.org/MedicalWebPage"/>
    ///</summary>
    public const string MedicalWebPage = "http://schema.org/MedicalWebPage";

    ///<summary>
    ///Systems of medical practice.
    ///<see cref="http://schema.org/MedicineSystem"/>
    ///</summary>
    public const string MedicineSystem = "http://schema.org/MedicineSystem";

    ///<summary>
    ///A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/MeetingRoom"/>
    ///</summary>
    public const string MeetingRoom = "http://schema.org/MeetingRoom";

    ///<summary>
    ///A men's clothing store.
    ///<see cref="http://schema.org/MensClothingStore"/>
    ///</summary>
    public const string MensClothingStore = "http://schema.org/MensClothingStore";

    ///<summary>
    ///A structured representation of food or drink items available from a FoodEstablishment.
    ///<see cref="http://schema.org/Menu"/>
    ///</summary>
    public const string Menu = "http://schema.org/Menu";

    ///<summary>
    ///A food or drink item listed in a menu or menu section.
    ///<see cref="http://schema.org/MenuItem"/>
    ///</summary>
    public const string MenuItem = "http://schema.org/MenuItem";

    ///<summary>
    ///A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.
    ///<see cref="http://schema.org/MenuSection"/>
    ///</summary>
    public const string MenuSection = "http://schema.org/MenuSection";

    ///<summary>
    ///A single message from a sender to one or more organizations or people.
    ///<see cref="http://schema.org/Message"/>
    ///</summary>
    public const string Message = "http://schema.org/Message";

    ///<summary>
    ///A middle school (typically for children aged around 11-14, although this varies somewhat).
    ///<see cref="http://schema.org/MiddleSchool"/>
    ///</summary>
    public const string MiddleSchool = "http://schema.org/MiddleSchool";

    ///<summary>
    ///A software application designed specifically to work well on a mobile device such as a telephone.
    ///<see cref="http://schema.org/MobileApplication"/>
    ///</summary>
    public const string MobileApplication = "http://schema.org/MobileApplication";

    ///<summary>
    ///A store that sells mobile phones and related accessories.
    ///<see cref="http://schema.org/MobilePhoneStore"/>
    ///</summary>
    public const string MobilePhoneStore = "http://schema.org/MobilePhoneStore";

    ///<summary>
    ///A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.
    ///<see cref="http://schema.org/MonetaryAmount"/>
    ///</summary>
    public const string MonetaryAmount = "http://schema.org/MonetaryAmount";

    ///<summary>
    ///A statistical distribution of monetary amounts.
    ///<see cref="http://schema.org/MonetaryAmountDistribution"/>
    ///</summary>
    public const string MonetaryAmountDistribution = "http://schema.org/MonetaryAmountDistribution";

    ///<summary>
    ///A monetary grant.
    ///<see cref="http://schema.org/MonetaryGrant"/>
    ///</summary>
    public const string MonetaryGrant = "http://schema.org/MonetaryGrant";

    ///<summary>
    ///The act of transferring money from one place to another place. This may occur electronically or physically.
    ///<see cref="http://schema.org/MoneyTransfer"/>
    ///</summary>
    public const string MoneyTransfer = "http://schema.org/MoneyTransfer";

    ///<summary>
    ///A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)
    ///<see cref="http://schema.org/MortgageLoan"/>
    ///</summary>
    public const string MortgageLoan = "http://schema.org/MortgageLoan";

    ///<summary>
    ///A mosque.
    ///<see cref="http://schema.org/Mosque"/>
    ///</summary>
    public const string Mosque = "http://schema.org/Mosque";

    ///<summary>
    ///A motel.
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Motel"/>
    ///</summary>
    public const string Motel = "http://schema.org/Motel";

    ///<summary>
    ///A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.
    ///<see cref="http://schema.org/Motorcycle"/>
    ///</summary>
    public const string Motorcycle = "http://schema.org/Motorcycle";

    ///<summary>
    ///A motorcycle dealer.
    ///<see cref="http://schema.org/MotorcycleDealer"/>
    ///</summary>
    public const string MotorcycleDealer = "http://schema.org/MotorcycleDealer";

    ///<summary>
    ///A motorcycle repair shop.
    ///<see cref="http://schema.org/MotorcycleRepair"/>
    ///</summary>
    public const string MotorcycleRepair = "http://schema.org/MotorcycleRepair";

    ///<summary>
    ///A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.
    ///<see cref="http://schema.org/MotorizedBicycle"/>
    ///</summary>
    public const string MotorizedBicycle = "http://schema.org/MotorizedBicycle";

    ///<summary>
    ///A mountain, like Mount Whitney or Mount Everest.
    ///<see cref="http://schema.org/Mountain"/>
    ///</summary>
    public const string Mountain = "http://schema.org/Mountain";

    ///<summary>
    ///The act of an agent relocating to a place.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/TransferAction">TransferAction</a>: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/MoveAction"/>
    ///</summary>
    public const string MoveAction = "http://schema.org/MoveAction";

    ///<summary>
    ///A movie.
    ///<see cref="http://schema.org/Movie"/>
    ///</summary>
    public const string Movie = "http://schema.org/Movie";

    ///<summary>
    ///A short segment/part of a movie.
    ///<see cref="http://schema.org/MovieClip"/>
    ///</summary>
    public const string MovieClip = "http://schema.org/MovieClip";

    ///<summary>
    ///A movie rental store.
    ///<see cref="http://schema.org/MovieRentalStore"/>
    ///</summary>
    public const string MovieRentalStore = "http://schema.org/MovieRentalStore";

    ///<summary>
    ///A series of movies. Included movies can be indicated with the hasPart property.
    ///<see cref="http://schema.org/MovieSeries"/>
    ///</summary>
    public const string MovieSeries = "http://schema.org/MovieSeries";

    ///<summary>
    ///A movie theater.
    ///<see cref="http://schema.org/MovieTheater"/>
    ///</summary>
    public const string MovieTheater = "http://schema.org/MovieTheater";

    ///<summary>
    ///A moving company.
    ///<see cref="http://schema.org/MovingCompany"/>
    ///</summary>
    public const string MovingCompany = "http://schema.org/MovingCompany";

    ///<summary>
    ///A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.
    ///<see cref="http://schema.org/Muscle"/>
    ///</summary>
    public const string Muscle = "http://schema.org/Muscle";

    ///<summary>
    ///A museum.
    ///<see cref="http://schema.org/Museum"/>
    ///</summary>
    public const string Museum = "http://schema.org/Museum";

    ///<summary>
    ///A collection of music tracks.
    ///<see cref="http://schema.org/MusicAlbum"/>
    ///</summary>
    public const string MusicAlbum = "http://schema.org/MusicAlbum";

    ///<summary>
    ///Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
    ///<see cref="http://schema.org/MusicAlbumProductionType"/>
    ///</summary>
    public const string MusicAlbumProductionType = "http://schema.org/MusicAlbumProductionType";

    ///<summary>
    ///The kind of release which this album is: single, EP or album.
    ///<see cref="http://schema.org/MusicAlbumReleaseType"/>
    ///</summary>
    public const string MusicAlbumReleaseType = "http://schema.org/MusicAlbumReleaseType";

    ///<summary>
    ///A musical composition.
    ///<see cref="http://schema.org/MusicComposition"/>
    ///</summary>
    public const string MusicComposition = "http://schema.org/MusicComposition";

    ///<summary>
    ///Event type: Music event.
    ///<see cref="http://schema.org/MusicEvent"/>
    ///</summary>
    public const string MusicEvent = "http://schema.org/MusicEvent";

    ///<summary>
    ///A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.
    ///<see cref="http://schema.org/MusicGroup"/>
    ///</summary>
    public const string MusicGroup = "http://schema.org/MusicGroup";

    ///<summary>
    ///A collection of music tracks in playlist form.
    ///<see cref="http://schema.org/MusicPlaylist"/>
    ///</summary>
    public const string MusicPlaylist = "http://schema.org/MusicPlaylist";

    ///<summary>
    ///A music recording (track), usually a single song.
    ///<see cref="http://schema.org/MusicRecording"/>
    ///</summary>
    public const string MusicRecording = "http://schema.org/MusicRecording";

    ///<summary>
    ///A MusicRelease is a specific release of a music album.
    ///<see cref="http://schema.org/MusicRelease"/>
    ///</summary>
    public const string MusicRelease = "http://schema.org/MusicRelease";

    ///<summary>
    ///Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
    ///<see cref="http://schema.org/MusicReleaseFormatType"/>
    ///</summary>
    public const string MusicReleaseFormatType = "http://schema.org/MusicReleaseFormatType";

    ///<summary>
    ///A music store.
    ///<see cref="http://schema.org/MusicStore"/>
    ///</summary>
    public const string MusicStore = "http://schema.org/MusicStore";

    ///<summary>
    ///A music venue.
    ///<see cref="http://schema.org/MusicVenue"/>
    ///</summary>
    public const string MusicVenue = "http://schema.org/MusicVenue";

    ///<summary>
    ///A music video file.
    ///<see cref="http://schema.org/MusicVideoObject"/>
    ///</summary>
    public const string MusicVideoObject = "http://schema.org/MusicVideoObject";

    ///<summary>
    ///Organization: Non-governmental Organization.
    ///<see cref="http://schema.org/NGO"/>
    ///</summary>
    public const string NGO = "http://schema.org/NGO";

    ///<summary>
    ///A nail salon.
    ///<see cref="http://schema.org/NailSalon"/>
    ///</summary>
    public const string NailSalon = "http://schema.org/NailSalon";

    ///<summary>
    ///A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.
    ///<see cref="http://schema.org/Nerve"/>
    ///</summary>
    public const string Nerve = "http://schema.org/Nerve";

    ///<summary>
    ///A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>
    ///
    ///A more detailed overview of <a href="/docs/news.html">schema.org News markup</a> is also available.
    ///<see cref="http://schema.org/NewsArticle"/>
    ///</summary>
    public const string NewsArticle = "http://schema.org/NewsArticle";

    ///<summary>
    ///A News/Media organization such as a newspaper or TV station.
    ///<see cref="http://schema.org/NewsMediaOrganization"/>
    ///</summary>
    public const string NewsMediaOrganization = "http://schema.org/NewsMediaOrganization";

    ///<summary>
    ///A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.
    ///<see cref="http://schema.org/Newspaper"/>
    ///</summary>
    public const string Newspaper = "http://schema.org/Newspaper";

    ///<summary>
    ///A nightclub or discotheque.
    ///<see cref="http://schema.org/NightClub"/>
    ///</summary>
    public const string NightClub = "http://schema.org/NightClub";

    ///<summary>
    ///A notary.
    ///<see cref="http://schema.org/Notary"/>
    ///</summary>
    public const string Notary = "http://schema.org/Notary";

    ///<summary>
    ///A file containing a note, primarily for the author.
    ///<see cref="http://schema.org/NoteDigitalDocument"/>
    ///</summary>
    public const string NoteDigitalDocument = "http://schema.org/NoteDigitalDocument";

    ///<summary>
    ///Data type: Number.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/Number"/>
    ///</summary>
    public const string Number = "http://schema.org/Number";

    ///<summary>
    ///Nutritional information about the recipe.
    ///<see cref="http://schema.org/NutritionInformation"/>
    ///</summary>
    public const string NutritionInformation = "http://schema.org/NutritionInformation";

    ///<summary>
    ///Instances of the class <a class="localLink" href="http://schema.org/Observation">Observation</a> are used to specify observations about an entity (which may or may not be an instance of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>), at a particular time. The principal properties of an <a class="localLink" href="http://schema.org/Observation">Observation</a> are <a class="localLink" href="http://schema.org/observedNode">observedNode</a>, <a class="localLink" href="http://schema.org/measuredProperty">measuredProperty</a>, <a class="localLink" href="http://schema.org/measuredValue">measuredValue</a> (or <a class="localLink" href="http://schema.org/median">median</a>, etc.) and <a class="localLink" href="http://schema.org/observationDate">observationDate</a> (<a class="localLink" href="http://schema.org/measuredProperty">measuredProperty</a> properties can, but need not always, be W3C RDF Data Cube "measure properties", as in the <a href="https://www.w3.org/TR/vocab-data-cube/#dsd-example">lifeExpectancy example</a>).
    ///See also <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>, and the <a href="/docs/data-and-datasets.html">data and datasets</a> overview for more details.
    ///<see cref="http://schema.org/Observation"/>
    ///</summary>
    public const string Observation = "http://schema.org/Observation";

    ///<summary>
    ///A profession, may involve prolonged training and/or a formal qualification.
    ///<see cref="http://schema.org/Occupation"/>
    ///</summary>
    public const string Occupation = "http://schema.org/Occupation";

    ///<summary>
    ///A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.
    ///<see cref="http://schema.org/OccupationalTherapy"/>
    ///</summary>
    public const string OccupationalTherapy = "http://schema.org/OccupationalTherapy";

    ///<summary>
    ///An ocean (for example, the Pacific).
    ///<see cref="http://schema.org/OceanBodyOfWater"/>
    ///</summary>
    public const string OceanBodyOfWater = "http://schema.org/OceanBodyOfWater";

    ///<summary>
    ///An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>
    ///
    ///For <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related fields, see <a href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check Digit calculator</a> and <a href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation guide</a> from <a href="http://www.gs1.org/">GS1</a>.
    ///<see cref="http://schema.org/Offer"/>
    ///</summary>
    public const string Offer = "http://schema.org/Offer";

    ///<summary>
    ///An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.
    ///<see cref="http://schema.org/OfferCatalog"/>
    ///</summary>
    public const string OfferCatalog = "http://schema.org/OfferCatalog";

    ///<summary>
    ///A list of possible conditions for the item.
    ///<see cref="http://schema.org/OfferItemCondition"/>
    ///</summary>
    public const string OfferItemCondition = "http://schema.org/OfferItemCondition";

    ///<summary>
    ///An office equipment store.
    ///<see cref="http://schema.org/OfficeEquipmentStore"/>
    ///</summary>
    public const string OfficeEquipmentStore = "http://schema.org/OfficeEquipmentStore";

    ///<summary>
    ///A publication event e.g. catch-up TV or radio podcast, during which a program is available on-demand.
    ///<see cref="http://schema.org/OnDemandEvent"/>
    ///</summary>
    public const string OnDemandEvent = "http://schema.org/OnDemandEvent";

    ///<summary>
    ///A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>
    ///
    ///The place is <strong>open</strong> if the <a class="localLink" href="http://schema.org/opens">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>
    ///
    ///If the value for the <a class="localLink" href="http://schema.org/closes">closes</a> property is less than the value for the <a class="localLink" href="http://schema.org/opens">opens</a> property then the hour range is assumed to span over the next day.
    ///<see cref="http://schema.org/OpeningHoursSpecification"/>
    ///</summary>
    public const string OpeningHoursSpecification = "http://schema.org/OpeningHoursSpecification";

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/OpinionNewsArticle">OpinionNewsArticle</a> is a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> that primarily expresses opinions rather than journalistic reporting of news and events. For example, a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> consisting of a column or <a class="localLink" href="http://schema.org/Blog">Blog</a>/<a class="localLink" href="http://schema.org/BlogPosting">BlogPosting</a> entry in the Opinions section of a news publication.
    ///<see cref="http://schema.org/OpinionNewsArticle"/>
    ///</summary>
    public const string OpinionNewsArticle = "http://schema.org/OpinionNewsArticle";

    ///<summary>
    ///A store that sells reading glasses and similar devices for improving vision.
    ///<see cref="http://schema.org/Optician"/>
    ///</summary>
    public const string Optician = "http://schema.org/Optician";

    ///<summary>
    ///An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.
    ///<see cref="http://schema.org/Order"/>
    ///</summary>
    public const string Order = "http://schema.org/Order";

    ///<summary>
    ///An agent orders an object/product/service to be delivered/sent.
    ///<see cref="http://schema.org/OrderAction"/>
    ///</summary>
    public const string OrderAction = "http://schema.org/OrderAction";

    ///<summary>
    ///An order item is a line of an order. It includes the quantity and shipping details of a bought offer.
    ///<see cref="http://schema.org/OrderItem"/>
    ///</summary>
    public const string OrderItem = "http://schema.org/OrderItem";

    ///<summary>
    ///Enumerated status values for Order.
    ///<see cref="http://schema.org/OrderStatus"/>
    ///</summary>
    public const string OrderStatus = "http://schema.org/OrderStatus";

    ///<summary>
    ///An organization such as a school, NGO, corporation, club, etc.
    ///<see cref="http://schema.org/Organization"/>
    ///</summary>
    public const string Organization = "http://schema.org/Organization";

    ///<summary>
    ///A subclass of Role used to describe roles within organizations.
    ///<see cref="http://schema.org/OrganizationRole"/>
    ///</summary>
    public const string OrganizationRole = "http://schema.org/OrganizationRole";

    ///<summary>
    ///The act of manipulating/administering/supervising/controlling one or more objects.
    ///<see cref="http://schema.org/OrganizeAction"/>
    ///</summary>
    public const string OrganizeAction = "http://schema.org/OrganizeAction";

    ///<summary>
    ///An outlet store.
    ///<see cref="http://schema.org/OutletStore"/>
    ///</summary>
    public const string OutletStore = "http://schema.org/OutletStore";

    ///<summary>
    ///A structured value providing information about when a certain organization or person owned a certain product.
    ///<see cref="http://schema.org/OwnershipInfo"/>
    ///</summary>
    public const string OwnershipInfo = "http://schema.org/OwnershipInfo";

    ///<summary>
    ///The act of producing a painting, typically with paint and canvas as instruments.
    ///<see cref="http://schema.org/PaintAction"/>
    ///</summary>
    public const string PaintAction = "http://schema.org/PaintAction";

    ///<summary>
    ///A painting.
    ///<see cref="http://schema.org/Painting"/>
    ///</summary>
    public const string Painting = "http://schema.org/Painting";

    ///<summary>
    ///A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.
    ///<see cref="http://schema.org/PalliativeProcedure"/>
    ///</summary>
    public const string PalliativeProcedure = "http://schema.org/PalliativeProcedure";

    ///<summary>
    ///The delivery of a parcel either via the postal service or a commercial service.
    ///<see cref="http://schema.org/ParcelDelivery"/>
    ///</summary>
    public const string ParcelDelivery = "http://schema.org/ParcelDelivery";

    ///<summary>
    ///A private parcel service as the delivery mode available for a certain offer.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#DHL</li>
    ///<li>http://purl.org/goodrelations/v1#FederalExpress</li>
    ///<li>http://purl.org/goodrelations/v1#UPS</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ParcelService"/>
    ///</summary>
    public const string ParcelService = "http://schema.org/ParcelService";

    ///<summary>
    ///A set of characteristics describing parents, who can be interested in viewing some content.
    ///<see cref="http://schema.org/ParentAudience"/>
    ///</summary>
    public const string ParentAudience = "http://schema.org/ParentAudience";

    ///<summary>
    ///A park.
    ///<see cref="http://schema.org/Park"/>
    ///</summary>
    public const string Park = "http://schema.org/Park";

    ///<summary>
    ///A parking lot or other parking facility.
    ///<see cref="http://schema.org/ParkingFacility"/>
    ///</summary>
    public const string ParkingFacility = "http://schema.org/ParkingFacility";

    ///<summary>
    ///A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.
    ///<see cref="http://schema.org/PathologyTest"/>
    ///</summary>
    public const string PathologyTest = "http://schema.org/PathologyTest";

    ///<summary>
    ///A patient is any person recipient of health care services.
    ///<see cref="http://schema.org/Patient"/>
    ///</summary>
    public const string Patient = "http://schema.org/Patient";

    ///<summary>
    ///A shop that will buy, or lend money against the security of, personal possessions.
    ///<see cref="http://schema.org/PawnShop"/>
    ///</summary>
    public const string PawnShop = "http://schema.org/PawnShop";

    ///<summary>
    ///An agent pays a price to a participant.
    ///<see cref="http://schema.org/PayAction"/>
    ///</summary>
    public const string PayAction = "http://schema.org/PayAction";

    ///<summary>
    ///A payment method using a credit, debit, store or other card to associate the payment with an account.
    ///<see cref="http://schema.org/PaymentCard"/>
    ///</summary>
    public const string PaymentCard = "http://schema.org/PaymentCard";

    ///<summary>
    ///The costs of settling the payment using a particular payment method.
    ///<see cref="http://schema.org/PaymentChargeSpecification"/>
    ///</summary>
    public const string PaymentChargeSpecification = "http://schema.org/PaymentChargeSpecification";

    ///<summary>
    ///A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>
    ///<li>http://purl.org/goodrelations/v1#ByInvoice</li>
    ///<li>http://purl.org/goodrelations/v1#Cash</li>
    ///<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>
    ///<li>http://purl.org/goodrelations/v1#COD</li>
    ///<li>http://purl.org/goodrelations/v1#DirectDebit</li>
    ///<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>
    ///<li>http://purl.org/goodrelations/v1#PayPal</li>
    ///<li>http://purl.org/goodrelations/v1#PaySwarm</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/PaymentMethod"/>
    ///</summary>
    public const string PaymentMethod = "http://schema.org/PaymentMethod";

    ///<summary>
    ///A Service to transfer funds from a person or organization to a beneficiary person or organization.
    ///<see cref="http://schema.org/PaymentService"/>
    ///</summary>
    public const string PaymentService = "http://schema.org/PaymentService";

    ///<summary>
    ///A specific payment status. For example, PaymentDue, PaymentComplete, etc.
    ///<see cref="http://schema.org/PaymentStatusType"/>
    ///</summary>
    public const string PaymentStatusType = "http://schema.org/PaymentStatusType";

    ///<summary>
    ///A set of characteristics belonging to people, e.g. who compose an item's target audience.
    ///<see cref="http://schema.org/PeopleAudience"/>
    ///</summary>
    public const string PeopleAudience = "http://schema.org/PeopleAudience";

    ///<summary>
    ///The act of participating in performance arts.
    ///<see cref="http://schema.org/PerformAction"/>
    ///</summary>
    public const string PerformAction = "http://schema.org/PerformAction";

    ///<summary>
    ///A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.
    ///<see cref="http://schema.org/PerformanceRole"/>
    ///</summary>
    public const string PerformanceRole = "http://schema.org/PerformanceRole";

    ///<summary>
    ///A theater or other performing art center.
    ///<see cref="http://schema.org/PerformingArtsTheater"/>
    ///</summary>
    public const string PerformingArtsTheater = "http://schema.org/PerformingArtsTheater";

    ///<summary>
    ///A performance group, such as a band, an orchestra, or a circus.
    ///<see cref="http://schema.org/PerformingGroup"/>
    ///</summary>
    public const string PerformingGroup = "http://schema.org/PerformingGroup";

    ///<summary>
    ///A publication in any medium issued in successive parts bearing numerical or chronological designations and intended, such as a magazine, scholarly journal, or newspaper to continue indefinitely.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/Periodical"/>
    ///</summary>
    public const string Periodical = "http://schema.org/Periodical";

    ///<summary>
    ///A permit issued by an organization, e.g. a parking pass.
    ///<see cref="http://schema.org/Permit"/>
    ///</summary>
    public const string Permit = "http://schema.org/Permit";

    ///<summary>
    ///A person (alive, dead, undead, or fictional).
    ///<see cref="http://schema.org/Person"/>
    ///</summary>
    public const string Person = "http://schema.org/Person";

    ///<summary>
    ///A pet store.
    ///<see cref="http://schema.org/PetStore"/>
    ///</summary>
    public const string PetStore = "http://schema.org/PetStore";

    ///<summary>
    ///A pharmacy or drugstore.
    ///<see cref="http://schema.org/Pharmacy"/>
    ///</summary>
    public const string Pharmacy = "http://schema.org/Pharmacy";

    ///<summary>
    ///A photograph.
    ///<see cref="http://schema.org/Photograph"/>
    ///</summary>
    public const string Photograph = "http://schema.org/Photograph";

    ///<summary>
    ///The act of capturing still images of objects using a camera.
    ///<see cref="http://schema.org/PhotographAction"/>
    ///</summary>
    public const string PhotographAction = "http://schema.org/PhotographAction";

    ///<summary>
    ///Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.
    ///<see cref="http://schema.org/PhysicalActivity"/>
    ///</summary>
    public const string PhysicalActivity = "http://schema.org/PhysicalActivity";

    ///<summary>
    ///Categories of physical activity, organized by physiologic classification.
    ///<see cref="http://schema.org/PhysicalActivityCategory"/>
    ///</summary>
    public const string PhysicalActivityCategory = "http://schema.org/PhysicalActivityCategory";

    ///<summary>
    ///A type of physical examination of a patient performed by a physician.
    ///<see cref="http://schema.org/PhysicalExam"/>
    ///</summary>
    public const string PhysicalExam = "http://schema.org/PhysicalExam";

    ///<summary>
    ///A process of progressive physical care and rehabilitation aimed at improving a health condition.
    ///<see cref="http://schema.org/PhysicalTherapy"/>
    ///</summary>
    public const string PhysicalTherapy = "http://schema.org/PhysicalTherapy";

    ///<summary>
    ///A doctor's office.
    ///<see cref="http://schema.org/Physician"/>
    ///</summary>
    public const string Physician = "http://schema.org/Physician";

    ///<summary>
    ///Entities that have a somewhat fixed, physical extension.
    ///<see cref="http://schema.org/Place"/>
    ///</summary>
    public const string Place = "http://schema.org/Place";

    ///<summary>
    ///Place of worship, such as a church, synagogue, or mosque.
    ///<see cref="http://schema.org/PlaceOfWorship"/>
    ///</summary>
    public const string PlaceOfWorship = "http://schema.org/PlaceOfWorship";

    ///<summary>
    ///The act of planning the execution of an event/task/action/reservation/plan to a future date.
    ///<see cref="http://schema.org/PlanAction"/>
    ///</summary>
    public const string PlanAction = "http://schema.org/PlanAction";

    ///<summary>
    ///A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note the peformance of a Play would be a <a class="localLink" href="http://schema.org/TheaterEvent">TheaterEvent</a> - the <em>Play</em> being the <a class="localLink" href="http://schema.org/workPerformed">workPerformed</a>.
    ///<see cref="http://schema.org/Play"/>
    ///</summary>
    public const string Play = "http://schema.org/Play";

    ///<summary>
    ///The act of playing/exercising/training/performing for enjoyment, leisure, recreation, Competition or exercise.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.</li>
    ///<li><a class="localLink" href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/PlayAction"/>
    ///</summary>
    public const string PlayAction = "http://schema.org/PlayAction";

    ///<summary>
    ///A playground.
    ///<see cref="http://schema.org/Playground"/>
    ///</summary>
    public const string Playground = "http://schema.org/Playground";

    ///<summary>
    ///A plumbing service.
    ///<see cref="http://schema.org/Plumber"/>
    ///</summary>
    public const string Plumber = "http://schema.org/Plumber";

    ///<summary>
    ///A police station.
    ///<see cref="http://schema.org/PoliceStation"/>
    ///</summary>
    public const string PoliceStation = "http://schema.org/PoliceStation";

    ///<summary>
    ///A pond.
    ///<see cref="http://schema.org/Pond"/>
    ///</summary>
    public const string Pond = "http://schema.org/Pond";

    ///<summary>
    ///A post office.
    ///<see cref="http://schema.org/PostOffice"/>
    ///</summary>
    public const string PostOffice = "http://schema.org/PostOffice";

    ///<summary>
    ///The mailing address.
    ///<see cref="http://schema.org/PostalAddress"/>
    ///</summary>
    public const string PostalAddress = "http://schema.org/PostalAddress";

    ///<summary>
    ///A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.
    ///<see cref="http://schema.org/Poster"/>
    ///</summary>
    public const string Poster = "http://schema.org/Poster";

    ///<summary>
    ///An agent orders a (not yet released) object/product/service to be delivered/sent.
    ///<see cref="http://schema.org/PreOrderAction"/>
    ///</summary>
    public const string PreOrderAction = "http://schema.org/PreOrderAction";

    ///<summary>
    ///The act of inserting at the beginning if an ordered collection.
    ///<see cref="http://schema.org/PrependAction"/>
    ///</summary>
    public const string PrependAction = "http://schema.org/PrependAction";

    ///<summary>
    ///A preschool.
    ///<see cref="http://schema.org/Preschool"/>
    ///</summary>
    public const string Preschool = "http://schema.org/Preschool";

    ///<summary>
    ///A file containing slides or used for a presentation.
    ///<see cref="http://schema.org/PresentationDigitalDocument"/>
    ///</summary>
    public const string PresentationDigitalDocument = "http://schema.org/PresentationDigitalDocument";

    ///<summary>
    ///An indication for preventing an underlying condition, symptom, etc.
    ///<see cref="http://schema.org/PreventionIndication"/>
    ///</summary>
    public const string PreventionIndication = "http://schema.org/PreventionIndication";

    ///<summary>
    ///A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.
    ///<see cref="http://schema.org/PriceSpecification"/>
    ///</summary>
    public const string PriceSpecification = "http://schema.org/PriceSpecification";

    ///<summary>
    ///Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.
    ///<see cref="http://schema.org/Product"/>
    ///</summary>
    public const string Product = "http://schema.org/Product";

    ///<summary>
    ///A datasheet or vendor specification of a product (in the sense of a prototypical description).
    ///<see cref="http://schema.org/ProductModel"/>
    ///</summary>
    public const string ProductModel = "http://schema.org/ProductModel";

    ///<summary>
    ///ProductReturnEnumeration enumerates several kinds of product return policy. Note that this structure may not capture all aspects of the policy.
    ///<see cref="http://schema.org/ProductReturnEnumeration"/>
    ///</summary>
    public const string ProductReturnEnumeration = "http://schema.org/ProductReturnEnumeration";

    ///<summary>
    ///A ProductReturnPolicy provides information about product return policies associated with an <a class="localLink" href="http://schema.org/Organization">Organization</a> or <a class="localLink" href="http://schema.org/Product">Product</a>.
    ///<see cref="http://schema.org/ProductReturnPolicy"/>
    ///</summary>
    public const string ProductReturnPolicy = "http://schema.org/ProductReturnPolicy";

    ///<summary>
    ///Original definition: "provider of professional services."<br/><br/>
    ///
    ///The general <a class="localLink" href="http://schema.org/ProfessionalService">ProfessionalService</a> type for local businesses was deprecated due to confusion with <a class="localLink" href="http://schema.org/Service">Service</a>. For reference, the types that it included were: <a class="localLink" href="http://schema.org/Dentist">Dentist</a>,
    ///        <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
    ///        <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>.
    ///<see cref="http://schema.org/ProfessionalService"/>
    ///</summary>
    public const string ProfessionalService = "http://schema.org/ProfessionalService";

    ///<summary>
    ///Web page type: Profile page.
    ///<see cref="http://schema.org/ProfilePage"/>
    ///</summary>
    public const string ProfilePage = "http://schema.org/ProfilePage";

    ///<summary>
    ///Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
    ///<see cref="http://schema.org/ProgramMembership"/>
    ///</summary>
    public const string ProgramMembership = "http://schema.org/ProgramMembership";

    ///<summary>
    ///An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.
    ///Use properties from <a class="localLink" href="http://schema.org/Organization">Organization</a>, <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a>/<a class="localLink" href="http://schema.org/parentOrganization">parentOrganization</a> to indicate project sub-structures.
    ///<see cref="http://schema.org/Project"/>
    ///</summary>
    public const string Project = "http://schema.org/Project";

    ///<summary>
    ///A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.
    ///<see cref="http://schema.org/Property"/>
    ///</summary>
    public const string Property = "http://schema.org/Property";

    ///<summary>
    ///A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>
    ///
    ///Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.
    ///<see cref="http://schema.org/PropertyValue"/>
    ///</summary>
    public const string PropertyValue = "http://schema.org/PropertyValue";

    ///<summary>
    ///A Property value specification.
    ///<see cref="http://schema.org/PropertyValueSpecification"/>
    ///</summary>
    public const string PropertyValueSpecification = "http://schema.org/PropertyValueSpecification";

    ///<summary>
    ///A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.
    ///<see cref="http://schema.org/PsychologicalTreatment"/>
    ///</summary>
    public const string PsychologicalTreatment = "http://schema.org/PsychologicalTreatment";

    ///<summary>
    ///A public swimming pool.
    ///<see cref="http://schema.org/PublicSwimmingPool"/>
    ///</summary>
    public const string PublicSwimmingPool = "http://schema.org/PublicSwimmingPool";

    ///<summary>
    ///A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.
    ///<see cref="http://schema.org/PublicToilet"/>
    ///</summary>
    public const string PublicToilet = "http://schema.org/PublicToilet";

    ///<summary>
    ///A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.
    ///<see cref="http://schema.org/PublicationEvent"/>
    ///</summary>
    public const string PublicationEvent = "http://schema.org/PublicationEvent";

    ///<summary>
    ///A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/PublicationIssue"/>
    ///</summary>
    public const string PublicationIssue = "http://schema.org/PublicationIssue";

    ///<summary>
    ///A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog post</a>.
    ///<see cref="http://schema.org/PublicationVolume"/>
    ///</summary>
    public const string PublicationVolume = "http://schema.org/PublicationVolume";

    ///<summary>
    ///A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).
    ///<see cref="http://schema.org/QAPage"/>
    ///</summary>
    public const string QAPage = "http://schema.org/QAPage";

    ///<summary>
    ///A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
    ///<see cref="http://schema.org/QualitativeValue"/>
    ///</summary>
    public const string QualitativeValue = "http://schema.org/QualitativeValue";

    ///<summary>
    ///A point value or interval for product characteristics and other purposes.
    ///<see cref="http://schema.org/QuantitativeValue"/>
    ///</summary>
    public const string QuantitativeValue = "http://schema.org/QuantitativeValue";

    ///<summary>
    ///A statistical distribution of values.
    ///<see cref="http://schema.org/QuantitativeValueDistribution"/>
    ///</summary>
    public const string QuantitativeValueDistribution = "http://schema.org/QuantitativeValueDistribution";

    ///<summary>
    ///Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.
    ///<see cref="http://schema.org/Quantity"/>
    ///</summary>
    public const string Quantity = "http://schema.org/Quantity";

    ///<summary>
    ///A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.
    ///<see cref="http://schema.org/Question"/>
    ///</summary>
    public const string Question = "http://schema.org/Question";

    ///<summary>
    ///A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use <a class="localLink" href="http://schema.org/isBasedOn">isBasedOn</a> to link to source/origin. The <a class="localLink" href="http://schema.org/recordedIn">recordedIn</a> property can be used to reference a Quotation from an <a class="localLink" href="http://schema.org/Event">Event</a>.
    ///<see cref="http://schema.org/Quotation"/>
    ///</summary>
    public const string Quotation = "http://schema.org/Quotation";

    ///<summary>
    ///An agent quotes/estimates/appraises an object/product/service with a price at a location/store.
    ///<see cref="http://schema.org/QuoteAction"/>
    ///</summary>
    public const string QuoteAction = "http://schema.org/QuoteAction";

    ///<summary>
    ///A place offering space for "Recreational Vehicles", Caravans, mobile homes and the like.
    ///<see cref="http://schema.org/RVPark"/>
    ///</summary>
    public const string RVPark = "http://schema.org/RVPark";

    ///<summary>
    ///A process of care using radiation aimed at improving a health condition.
    ///<see cref="http://schema.org/RadiationTherapy"/>
    ///</summary>
    public const string RadiationTherapy = "http://schema.org/RadiationTherapy";

    ///<summary>
    ///A delivery service through which radio content is provided via broadcast over the air or online.
    ///<see cref="http://schema.org/RadioBroadcastService"/>
    ///</summary>
    public const string RadioBroadcastService = "http://schema.org/RadioBroadcastService";

    ///<summary>
    ///A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/RadioChannel"/>
    ///</summary>
    public const string RadioChannel = "http://schema.org/RadioChannel";

    ///<summary>
    ///A short radio program or a segment/part of a radio program.
    ///<see cref="http://schema.org/RadioClip"/>
    ///</summary>
    public const string RadioClip = "http://schema.org/RadioClip";

    ///<summary>
    ///A radio episode which can be part of a series or season.
    ///<see cref="http://schema.org/RadioEpisode"/>
    ///</summary>
    public const string RadioEpisode = "http://schema.org/RadioEpisode";

    ///<summary>
    ///Season dedicated to radio broadcast and associated online delivery.
    ///<see cref="http://schema.org/RadioSeason"/>
    ///</summary>
    public const string RadioSeason = "http://schema.org/RadioSeason";

    ///<summary>
    ///CreativeWorkSeries dedicated to radio broadcast and associated online delivery.
    ///<see cref="http://schema.org/RadioSeries"/>
    ///</summary>
    public const string RadioSeries = "http://schema.org/RadioSeries";

    ///<summary>
    ///A radio station.
    ///<see cref="http://schema.org/RadioStation"/>
    ///</summary>
    public const string RadioStation = "http://schema.org/RadioStation";

    ///<summary>
    ///A rating is an evaluation on a numeric scale, such as 1 to 5 stars.
    ///<see cref="http://schema.org/Rating"/>
    ///</summary>
    public const string Rating = "http://schema.org/Rating";

    ///<summary>
    ///The act of responding instinctively and emotionally to an object, expressing a sentiment.
    ///<see cref="http://schema.org/ReactAction"/>
    ///</summary>
    public const string ReactAction = "http://schema.org/ReactAction";

    ///<summary>
    ///The act of consuming written content.
    ///<see cref="http://schema.org/ReadAction"/>
    ///</summary>
    public const string ReadAction = "http://schema.org/ReadAction";

    ///<summary>
    ///A real-estate agent.
    ///<see cref="http://schema.org/RealEstateAgent"/>
    ///</summary>
    public const string RealEstateAgent = "http://schema.org/RealEstateAgent";

    ///<summary>
    ///The act of physically/electronically taking delivery of an object thathas been transferred from an origin to a destination. Reciprocal of SendAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>: The reciprocal of ReceiveAction.</li>
    ///<li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transfered (e.g. I can receive a package, but it does not mean the package is now mine).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReceiveAction"/>
    ///</summary>
    public const string ReceiveAction = "http://schema.org/ReceiveAction";

    ///<summary>
    ///A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via <a class="localLink" href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a class="localLink" href="http://schema.org/keywords">keywords</a> property can also be used to add more detail.
    ///<see cref="http://schema.org/Recipe"/>
    ///</summary>
    public const string Recipe = "http://schema.org/Recipe";

    ///<summary>
    ///A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.
    ///<see cref="http://schema.org/RecommendedDoseSchedule"/>
    ///</summary>
    public const string RecommendedDoseSchedule = "http://schema.org/RecommendedDoseSchedule";

    ///<summary>
    ///A recycling center.
    ///<see cref="http://schema.org/RecyclingCenter"/>
    ///</summary>
    public const string RecyclingCenter = "http://schema.org/RecyclingCenter";

    ///<summary>
    ///RefundTypeEnumeration enumerates several kinds of product return refund types.
    ///<see cref="http://schema.org/RefundTypeEnumeration"/>
    ///</summary>
    public const string RefundTypeEnumeration = "http://schema.org/RefundTypeEnumeration";

    ///<summary>
    ///The act of registering to be a user of a service, product or web page.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, <em>not</em> a group/team of people.</li>
    ///<li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/RegisterAction"/>
    ///</summary>
    public const string RegisterAction = "http://schema.org/RegisterAction";

    ///<summary>
    ///The act of rejecting to/adopting an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of RejectAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/RejectAction"/>
    ///</summary>
    public const string RejectAction = "http://schema.org/RejectAction";

    ///<summary>
    ///The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.
    ///<see cref="http://schema.org/RentAction"/>
    ///</summary>
    public const string RentAction = "http://schema.org/RentAction";

    ///<summary>
    ///A reservation for a rental car.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.
    ///<see cref="http://schema.org/RentalCarReservation"/>
    ///</summary>
    public const string RentalCarReservation = "http://schema.org/RentalCarReservation";

    ///<summary>
    ///A structured value representing repayment.
    ///<see cref="http://schema.org/RepaymentSpecification"/>
    ///</summary>
    public const string RepaymentSpecification = "http://schema.org/RepaymentSpecification";

    ///<summary>
    ///The act of editing a recipient by replacing an old object with a new object.
    ///<see cref="http://schema.org/ReplaceAction"/>
    ///</summary>
    public const string ReplaceAction = "http://schema.org/ReplaceAction";

    ///<summary>
    ///The act of responding to a question/message asked/sent by the object. Related to <a class="localLink" href="http://schema.org/AskAction">AskAction</a><br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>: Appears generally as an origin of a ReplyAction.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReplyAction"/>
    ///</summary>
    public const string ReplyAction = "http://schema.org/ReplyAction";

    ///<summary>
    ///A Report generated by governmental or non-governmental organization.
    ///<see cref="http://schema.org/Report"/>
    ///</summary>
    public const string Report = "http://schema.org/Report";

    ///<summary>
    ///The <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> type is a subtype of <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> representing
    /// news articles which are the result of journalistic news reporting conventions.<br/><br/>
    ///
    ///In practice many news publishers produce a wide variety of article types, many of which might be considered a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> but not a <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a>. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.<br/><br/>
    ///
    ///The <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> type is based on a stricter ideal for "news" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.<br/><br/>
    ///
    ///A <a class="localLink" href="http://schema.org/ReportageNewsArticle">ReportageNewsArticle</a> which goes deeper into analysis can also be marked with an additional type of <a class="localLink" href="http://schema.org/AnalysisNewsArticle">AnalysisNewsArticle</a>.
    ///<see cref="http://schema.org/ReportageNewsArticle"/>
    ///</summary>
    public const string ReportageNewsArticle = "http://schema.org/ReportageNewsArticle";

    ///<summary>
    ///A patient-reported or observed dosing schedule for a drug or supplement.
    ///<see cref="http://schema.org/ReportedDoseSchedule"/>
    ///</summary>
    public const string ReportedDoseSchedule = "http://schema.org/ReportedDoseSchedule";

    ///<summary>
    ///A Research project.
    ///<see cref="http://schema.org/ResearchProject"/>
    ///</summary>
    public const string ResearchProject = "http://schema.org/ResearchProject";

    ///<summary>
    ///Describes a reservation for travel, dining or an event. Some reservations require tickets. <br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/Reservation"/>
    ///</summary>
    public const string Reservation = "http://schema.org/Reservation";

    ///<summary>
    ///A group of multiple reservations with common values for all sub-reservations.
    ///<see cref="http://schema.org/ReservationPackage"/>
    ///</summary>
    public const string ReservationPackage = "http://schema.org/ReservationPackage";

    ///<summary>
    ///Enumerated status values for Reservation.
    ///<see cref="http://schema.org/ReservationStatusType"/>
    ///</summary>
    public const string ReservationStatusType = "http://schema.org/ReservationStatusType";

    ///<summary>
    ///Reserving a concrete object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ReserveAction"/>
    ///</summary>
    public const string ReserveAction = "http://schema.org/ReserveAction";

    ///<summary>
    ///A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.
    ///<see cref="http://schema.org/Reservoir"/>
    ///</summary>
    public const string Reservoir = "http://schema.org/Reservoir";

    ///<summary>
    ///The place where a person lives.
    ///<see cref="http://schema.org/Residence"/>
    ///</summary>
    public const string Residence = "http://schema.org/Residence";

    ///<summary>
    ///A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishment operated by a single company (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Resort"/>
    ///</summary>
    public const string Resort = "http://schema.org/Resort";

    ///<summary>
    ///A restaurant.
    ///<see cref="http://schema.org/Restaurant"/>
    ///</summary>
    public const string Restaurant = "http://schema.org/Restaurant";

    ///<summary>
    ///A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons.
    ///<see cref="http://schema.org/RestrictedDiet"/>
    ///</summary>
    public const string RestrictedDiet = "http://schema.org/RestrictedDiet";

    ///<summary>
    ///The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).
    ///<see cref="http://schema.org/ResumeAction"/>
    ///</summary>
    public const string ResumeAction = "http://schema.org/ResumeAction";

    ///<summary>
    ///The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).
    ///<see cref="http://schema.org/ReturnAction"/>
    ///</summary>
    public const string ReturnAction = "http://schema.org/ReturnAction";

    ///<summary>
    ///ReturnFeesEnumeration expresses policies for return fees.
    ///<see cref="http://schema.org/ReturnFeesEnumeration"/>
    ///</summary>
    public const string ReturnFeesEnumeration = "http://schema.org/ReturnFeesEnumeration";

    ///<summary>
    ///A review of an item - for example, of a restaurant, movie, or store.
    ///<see cref="http://schema.org/Review"/>
    ///</summary>
    public const string Review = "http://schema.org/Review";

    ///<summary>
    ///The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.
    ///<see cref="http://schema.org/ReviewAction"/>
    ///</summary>
    public const string ReviewAction = "http://schema.org/ReviewAction";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> and <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a> providing a professional critic's assessment of a service, product, performance, or artistic or literary work.
    ///<see cref="http://schema.org/ReviewNewsArticle"/>
    ///</summary>
    public const string ReviewNewsArticle = "http://schema.org/ReviewNewsArticle";

    ///<summary>
    ///A river (for example, the broad majestic Shannon).
    ///<see cref="http://schema.org/RiverBodyOfWater"/>
    ///</summary>
    public const string RiverBodyOfWater = "http://schema.org/RiverBodyOfWater";

    ///<summary>
    ///Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.<br/><br/>
    ///
    ///See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog post</a>.
    ///<see cref="http://schema.org/Role"/>
    ///</summary>
    public const string Role = "http://schema.org/Role";

    ///<summary>
    ///A roofing contractor.
    ///<see cref="http://schema.org/RoofingContractor"/>
    ///</summary>
    public const string RoofingContractor = "http://schema.org/RoofingContractor";

    ///<summary>
    ///A room is a distinguishable space within a structure, usually separated from other spaces by interior walls. (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Room"/>
    ///</summary>
    public const string Room = "http://schema.org/Room";

    ///<summary>
    ///The act of notifying an event organizer as to whether you expect to attend the event.
    ///<see cref="http://schema.org/RsvpAction"/>
    ///</summary>
    public const string RsvpAction = "http://schema.org/RsvpAction";

    ///<summary>
    ///RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.
    ///<see cref="http://schema.org/RsvpResponseType"/>
    ///</summary>
    public const string RsvpResponseType = "http://schema.org/RsvpResponseType";

    ///<summary>
    ///Event type: Sales event.
    ///<see cref="http://schema.org/SaleEvent"/>
    ///</summary>
    public const string SaleEvent = "http://schema.org/SaleEvent";

    ///<summary>
    ///An <a class="localLink" href="http://schema.org/Article">Article</a> whose content is primarily <a href="https://en.wikipedia.org/wiki/Satire">[satirical]</a> in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>. <a class="localLink" href="http://schema.org/ScholarlyArticle">ScholarlyArticle</a>s are also sometimes satirized.
    ///<see cref="http://schema.org/SatiricalArticle"/>
    ///</summary>
    public const string SatiricalArticle = "http://schema.org/SatiricalArticle";

    ///<summary>
    ///A schedule defines a repeating time period used to describe a regularly occurring <a class="localLink" href="http://schema.org/Event">Event</a>. At a minimum a schedule will specify <a class="localLink" href="http://schema.org/repeatFrequency">repeatFrequency</a> which describes the interval between occurences of the event. Additional information can be provided to specify the schedule more precisely. 
    ///      This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also
    ///      have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.
    ///<see cref="http://schema.org/Schedule"/>
    ///</summary>
    public const string Schedule = "http://schema.org/Schedule";

    ///<summary>
    ///Scheduling future actions, events, or tasks.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ScheduleAction"/>
    ///</summary>
    public const string ScheduleAction = "http://schema.org/ScheduleAction";

    ///<summary>
    ///A scholarly article.
    ///<see cref="http://schema.org/ScholarlyArticle"/>
    ///</summary>
    public const string ScholarlyArticle = "http://schema.org/ScholarlyArticle";

    ///<summary>
    ///A school.
    ///<see cref="http://schema.org/School"/>
    ///</summary>
    public const string School = "http://schema.org/School";

    ///<summary>
    ///A screening of a movie or other video.
    ///<see cref="http://schema.org/ScreeningEvent"/>
    ///</summary>
    public const string ScreeningEvent = "http://schema.org/ScreeningEvent";

    ///<summary>
    ///A piece of sculpture.
    ///<see cref="http://schema.org/Sculpture"/>
    ///</summary>
    public const string Sculpture = "http://schema.org/Sculpture";

    ///<summary>
    ///A sea (for example, the Caspian sea).
    ///<see cref="http://schema.org/SeaBodyOfWater"/>
    ///</summary>
    public const string SeaBodyOfWater = "http://schema.org/SeaBodyOfWater";

    ///<summary>
    ///The act of searching for an object.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>: SearchAction generally leads to a FindAction, but not necessarily.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SearchAction"/>
    ///</summary>
    public const string SearchAction = "http://schema.org/SearchAction";

    ///<summary>
    ///Web page type: Search results page.
    ///<see cref="http://schema.org/SearchResultsPage"/>
    ///</summary>
    public const string SearchResultsPage = "http://schema.org/SearchResultsPage";

    ///<summary>
    ///A media season e.g. tv, radio, video game etc.
    ///<see cref="http://schema.org/Season"/>
    ///</summary>
    public const string Season = "http://schema.org/Season";

    ///<summary>
    ///Used to describe a seat, such as a reserved seat in an event reservation.
    ///<see cref="http://schema.org/Seat"/>
    ///</summary>
    public const string Seat = "http://schema.org/Seat";

    ///<summary>
    ///A self-storage facility.
    ///<see cref="http://schema.org/SelfStorage"/>
    ///</summary>
    public const string SelfStorage = "http://schema.org/SelfStorage";

    ///<summary>
    ///The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.
    ///<see cref="http://schema.org/SellAction"/>
    ///</summary>
    public const string SellAction = "http://schema.org/SellAction";

    ///<summary>
    ///The act of physically/electronically dispatching an object for transfer from an origin to a destination.Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of SendAction.</li>
    ///<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SendAction"/>
    ///</summary>
    public const string SendAction = "http://schema.org/SendAction";

    ///<summary>
    ///A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also <a class="localLink" href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a class="localLink" href="http://schema.org/EventSeries">EventSeries</a>.
    ///<see cref="http://schema.org/Series"/>
    ///</summary>
    public const string Series = "http://schema.org/Series";

    ///<summary>
    ///A service provided by an organization, e.g. delivery service, print services, etc.
    ///<see cref="http://schema.org/Service"/>
    ///</summary>
    public const string Service = "http://schema.org/Service";

    ///<summary>
    ///A means for accessing a service, e.g. a government office location, web site, or phone number.
    ///<see cref="http://schema.org/ServiceChannel"/>
    ///</summary>
    public const string ServiceChannel = "http://schema.org/ServiceChannel";

    ///<summary>
    ///The act of distributing content to people for their amusement or edification.
    ///<see cref="http://schema.org/ShareAction"/>
    ///</summary>
    public const string ShareAction = "http://schema.org/ShareAction";

    ///<summary>
    ///Printed music, as opposed to performed or recorded music.
    ///<see cref="http://schema.org/SheetMusic"/>
    ///</summary>
    public const string SheetMusic = "http://schema.org/SheetMusic";

    ///<summary>
    ///A shoe store.
    ///<see cref="http://schema.org/ShoeStore"/>
    ///</summary>
    public const string ShoeStore = "http://schema.org/ShoeStore";

    ///<summary>
    ///A shopping center or mall.
    ///<see cref="http://schema.org/ShoppingCenter"/>
    ///</summary>
    public const string ShoppingCenter = "http://schema.org/ShoppingCenter";

    ///<summary>
    ///Short story or tale. A brief work of literature, usually written in narrative prose.
    ///<see cref="http://schema.org/ShortStory"/>
    ///</summary>
    public const string ShortStory = "http://schema.org/ShortStory";

    ///<summary>
    ///Residence type: Single-family home.
    ///<see cref="http://schema.org/SingleFamilyResidence"/>
    ///</summary>
    public const string SingleFamilyResidence = "http://schema.org/SingleFamilyResidence";

    ///<summary>
    ///A navigation element of the page.
    ///<see cref="http://schema.org/SiteNavigationElement"/>
    ///</summary>
    public const string SiteNavigationElement = "http://schema.org/SiteNavigationElement";

    ///<summary>
    ///A ski resort.
    ///<see cref="http://schema.org/SkiResort"/>
    ///</summary>
    public const string SkiResort = "http://schema.org/SkiResort";

    ///<summary>
    ///Event type: Social event.
    ///<see cref="http://schema.org/SocialEvent"/>
    ///</summary>
    public const string SocialEvent = "http://schema.org/SocialEvent";

    ///<summary>
    ///A post to a social media platform, including blog posts, tweets, Facebook posts, etc.
    ///<see cref="http://schema.org/SocialMediaPosting"/>
    ///</summary>
    public const string SocialMediaPosting = "http://schema.org/SocialMediaPosting";

    ///<summary>
    ///A software application.
    ///<see cref="http://schema.org/SoftwareApplication"/>
    ///</summary>
    public const string SoftwareApplication = "http://schema.org/SoftwareApplication";

    ///<summary>
    ///Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.
    ///<see cref="http://schema.org/SoftwareSourceCode"/>
    ///</summary>
    public const string SoftwareSourceCode = "http://schema.org/SoftwareSourceCode";

    ///<summary>
    ///A placeholder for multiple similar products of the same kind.
    ///<see cref="http://schema.org/SomeProducts"/>
    ///</summary>
    public const string SomeProducts = "http://schema.org/SomeProducts";

    ///<summary>
    ///A SpeakableSpecification indicates (typically via <a class="localLink" href="http://schema.org/xpath">xpath</a> or <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a>) sections of a document that are highlighted as particularly <a class="localLink" href="http://schema.org/speakable">speakable</a>. Instances of this type are expected to be used primarily as values of the <a class="localLink" href="http://schema.org/speakable">speakable</a> property.
    ///<see cref="http://schema.org/SpeakableSpecification"/>
    ///</summary>
    public const string SpeakableSpecification = "http://schema.org/SpeakableSpecification";

    ///<summary>
    ///Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.
    ///<see cref="http://schema.org/Specialty"/>
    ///</summary>
    public const string Specialty = "http://schema.org/Specialty";

    ///<summary>
    ///A sporting goods store.
    ///<see cref="http://schema.org/SportingGoodsStore"/>
    ///</summary>
    public const string SportingGoodsStore = "http://schema.org/SportingGoodsStore";

    ///<summary>
    ///A sports location, such as a playing field.
    ///<see cref="http://schema.org/SportsActivityLocation"/>
    ///</summary>
    public const string SportsActivityLocation = "http://schema.org/SportsActivityLocation";

    ///<summary>
    ///A sports club.
    ///<see cref="http://schema.org/SportsClub"/>
    ///</summary>
    public const string SportsClub = "http://schema.org/SportsClub";

    ///<summary>
    ///Event type: Sports event.
    ///<see cref="http://schema.org/SportsEvent"/>
    ///</summary>
    public const string SportsEvent = "http://schema.org/SportsEvent";

    ///<summary>
    ///Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.
    ///<see cref="http://schema.org/SportsOrganization"/>
    ///</summary>
    public const string SportsOrganization = "http://schema.org/SportsOrganization";

    ///<summary>
    ///Organization: Sports team.
    ///<see cref="http://schema.org/SportsTeam"/>
    ///</summary>
    public const string SportsTeam = "http://schema.org/SportsTeam";

    ///<summary>
    ///A spreadsheet file.
    ///<see cref="http://schema.org/SpreadsheetDigitalDocument"/>
    ///</summary>
    public const string SpreadsheetDigitalDocument = "http://schema.org/SpreadsheetDigitalDocument";

    ///<summary>
    ///A stadium.
    ///<see cref="http://schema.org/StadiumOrArena"/>
    ///</summary>
    public const string StadiumOrArena = "http://schema.org/StadiumOrArena";

    ///<summary>
    ///A state or province of a country.
    ///<see cref="http://schema.org/State"/>
    ///</summary>
    public const string State = "http://schema.org/State";

    ///<summary>
    ///A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property <a class="localLink" href="http://schema.org/populationType">populationType</a> is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> representing all <a class="localLink" href="http://schema.org/Person">Person</a>s with a <a class="localLink" href="http://schema.org/homeLocation">homeLocation</a> of East Podunk California, would be described by applying the appropriate <a class="localLink" href="http://schema.org/homeLocation">homeLocation</a> and <a class="localLink" href="http://schema.org/populationType">populationType</a> properties to a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> item that stands for that set of people.
    ///The properties <a class="localLink" href="http://schema.org/numConstraints">numConstraints</a> and <a class="localLink" href="http://schema.org/constrainingProperties">constrainingProperties</a> are used to specify which of the populations properties are used to specify the population. Note that the sense of "population" used here is the general sense of a statistical
    ///population, and does not imply that the population consists of people. For example, a <a class="localLink" href="http://schema.org/populationType">populationType</a> of <a class="localLink" href="http://schema.org/Event">Event</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> could be used. See also <a class="localLink" href="http://schema.org/Observation">Observation</a>, and the <a href="/docs/data-and-datasets.html">data and datasets</a> overview for more details.
    ///<see cref="http://schema.org/StatisticalPopulation"/>
    ///</summary>
    public const string StatisticalPopulation = "http://schema.org/StatisticalPopulation";

    ///<summary>
    ///A value indicating a steering position.
    ///<see cref="http://schema.org/SteeringPositionValue"/>
    ///</summary>
    public const string SteeringPositionValue = "http://schema.org/SteeringPositionValue";

    ///<summary>
    ///A retail good store.
    ///<see cref="http://schema.org/Store"/>
    ///</summary>
    public const string Store = "http://schema.org/Store";

    ///<summary>
    ///Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
    ///<see cref="http://schema.org/StructuredValue"/>
    ///</summary>
    public const string StructuredValue = "http://schema.org/StructuredValue";

    ///<summary>
    ///A StupidType for testing.
    ///<see cref="http://schema.org/StupidType"/>
    ///</summary>
    public const string StupidType = "http://schema.org/StupidType";

    ///<summary>
    ///The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.</li>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///<li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/SubscribeAction"/>
    ///</summary>
    public const string SubscribeAction = "http://schema.org/SubscribeAction";

    ///<summary>
    ///Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.
    ///<see cref="http://schema.org/Substance"/>
    ///</summary>
    public const string Substance = "http://schema.org/Substance";

    ///<summary>
    ///A subway station.
    ///<see cref="http://schema.org/SubwayStation"/>
    ///</summary>
    public const string SubwayStation = "http://schema.org/SubwayStation";

    ///<summary>
    ///A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (Source: Wikipedia, the free encyclopedia, see <a href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).
    ///<br /><br />
    ///See also the <a href="/docs/hotels.html">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.
    ///<see cref="http://schema.org/Suite"/>
    ///</summary>
    public const string Suite = "http://schema.org/Suite";

    ///<summary>
    ///Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).
    ///<see cref="http://schema.org/SuperficialAnatomy"/>
    ///</summary>
    public const string SuperficialAnatomy = "http://schema.org/SuperficialAnatomy";

    ///<summary>
    ///A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.
    ///<see cref="http://schema.org/SurgicalProcedure"/>
    ///</summary>
    public const string SurgicalProcedure = "http://schema.org/SurgicalProcedure";

    ///<summary>
    ///The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).
    ///<see cref="http://schema.org/SuspendAction"/>
    ///</summary>
    public const string SuspendAction = "http://schema.org/SuspendAction";

    ///<summary>
    ///A synagogue.
    ///<see cref="http://schema.org/Synagogue"/>
    ///</summary>
    public const string Synagogue = "http://schema.org/Synagogue";

    ///<summary>
    ///A short TV program or a segment/part of a TV program.
    ///<see cref="http://schema.org/TVClip"/>
    ///</summary>
    public const string TVClip = "http://schema.org/TVClip";

    ///<summary>
    ///A TV episode which can be part of a series or season.
    ///<see cref="http://schema.org/TVEpisode"/>
    ///</summary>
    public const string TVEpisode = "http://schema.org/TVEpisode";

    ///<summary>
    ///Season dedicated to TV broadcast and associated online delivery.
    ///<see cref="http://schema.org/TVSeason"/>
    ///</summary>
    public const string TVSeason = "http://schema.org/TVSeason";

    ///<summary>
    ///CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
    ///<see cref="http://schema.org/TVSeries"/>
    ///</summary>
    public const string TVSeries = "http://schema.org/TVSeries";

    ///<summary>
    ///A table on a Web page.
    ///<see cref="http://schema.org/Table"/>
    ///</summary>
    public const string Table = "http://schema.org/Table";

    ///<summary>
    ///The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>: The reciprocal of TakeAction.</li>
    ///<li><a class="localLink" href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike ReceiveAction, TakeAction implies that ownership has been transfered.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/TakeAction"/>
    ///</summary>
    public const string TakeAction = "http://schema.org/TakeAction";

    ///<summary>
    ///A tattoo parlor.
    ///<see cref="http://schema.org/TattooParlor"/>
    ///</summary>
    public const string TattooParlor = "http://schema.org/TattooParlor";

    ///<summary>
    ///A taxi.
    ///<see cref="http://schema.org/Taxi"/>
    ///</summary>
    public const string Taxi = "http://schema.org/Taxi";

    ///<summary>
    ///A reservation for a taxi.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/TaxiReservation"/>
    ///</summary>
    public const string TaxiReservation = "http://schema.org/TaxiReservation";

    ///<summary>
    ///A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.
    ///<see cref="http://schema.org/TaxiService"/>
    ///</summary>
    public const string TaxiService = "http://schema.org/TaxiService";

    ///<summary>
    ///A taxi stand.
    ///<see cref="http://schema.org/TaxiStand"/>
    ///</summary>
    public const string TaxiStand = "http://schema.org/TaxiStand";

    ///<summary>
    ///A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.
    ///<see cref="http://schema.org/TechArticle"/>
    ///</summary>
    public const string TechArticle = "http://schema.org/TechArticle";

    ///<summary>
    ///A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.
    ///<see cref="http://schema.org/TelevisionChannel"/>
    ///</summary>
    public const string TelevisionChannel = "http://schema.org/TelevisionChannel";

    ///<summary>
    ///A television station.
    ///<see cref="http://schema.org/TelevisionStation"/>
    ///</summary>
    public const string TelevisionStation = "http://schema.org/TelevisionStation";

    ///<summary>
    ///A tennis complex.
    ///<see cref="http://schema.org/TennisComplex"/>
    ///</summary>
    public const string TennisComplex = "http://schema.org/TennisComplex";

    ///<summary>
    ///Data type: Text.
    ///<see cref="http://schema.org/Text"/>
    ///</summary>
    public const string Text = "http://schema.org/Text";

    ///<summary>
    ///A file composed primarily of text.
    ///<see cref="http://schema.org/TextDigitalDocument"/>
    ///</summary>
    public const string TextDigitalDocument = "http://schema.org/TextDigitalDocument";

    ///<summary>
    ///Event type: Theater performance.
    ///<see cref="http://schema.org/TheaterEvent"/>
    ///</summary>
    public const string TheaterEvent = "http://schema.org/TheaterEvent";

    ///<summary>
    ///A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.
    ///<see cref="http://schema.org/TheaterGroup"/>
    ///</summary>
    public const string TheaterGroup = "http://schema.org/TheaterGroup";

    ///<summary>
    ///A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.
    ///<see cref="http://schema.org/TherapeuticProcedure"/>
    ///</summary>
    public const string TherapeuticProcedure = "http://schema.org/TherapeuticProcedure";

    ///<summary>
    ///A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.
    ///<see cref="http://schema.org/Thesis"/>
    ///</summary>
    public const string Thesis = "http://schema.org/Thesis";

    ///<summary>
    ///The most generic type of item.
    ///<see cref="http://schema.org/Thing"/>
    ///</summary>
    public const string Thing = "http://schema.org/Thing";

    ///<summary>
    ///Used to describe a ticket to an event, a flight, a bus ride, etc.
    ///<see cref="http://schema.org/Ticket"/>
    ///</summary>
    public const string Ticket = "http://schema.org/Ticket";

    ///<summary>
    ///The act of reaching a draw in a competitive activity.
    ///<see cref="http://schema.org/TieAction"/>
    ///</summary>
    public const string TieAction = "http://schema.org/TieAction";

    ///<summary>
    ///A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href="http://www.w3.org/TR/xmlschema-2/#time">XML schema for details</a>).
    ///<see cref="http://schema.org/Time"/>
    ///</summary>
    public const string Time = "http://schema.org/Time";

    ///<summary>
    ///The act of giving money voluntarily to a beneficiary in recognition of services rendered.
    ///<see cref="http://schema.org/TipAction"/>
    ///</summary>
    public const string TipAction = "http://schema.org/TipAction";

    ///<summary>
    ///A tire shop.
    ///<see cref="http://schema.org/TireShop"/>
    ///</summary>
    public const string TireShop = "http://schema.org/TireShop";

    ///<summary>
    ///A tourist attraction.  In principle any Thing can be a <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a class="localLink" href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a> to a <a class="localLink" href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist attraction properties to any other type.  (See examples below)
    ///<see cref="http://schema.org/TouristAttraction"/>
    ///</summary>
    public const string TouristAttraction = "http://schema.org/TouristAttraction";

    ///<summary>
    ///A tourist destination. In principle any <a class="localLink" href="http://schema.org/Place">Place</a> can be a <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a> from a <a class="localLink" href="http://schema.org/City">City</a>, <a class="localLink" href="http://schema.org/Region">Region</a> or <a class="localLink" href="http://schema.org/Country">Country</a> to an <a class="localLink" href="http://schema.org/AmusementPark">AmusementPark</a> or <a class="localLink" href="http://schema.org/Hotel">Hotel</a>. This Type can be used on its own to describe a general <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a>, or be used as an <a class="localLink" href="http://schema.org/additionalType">additionalType</a> to add tourist relevant properties to any other <a class="localLink" href="http://schema.org/Place">Place</a>.  A <a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a> is defined as a <a class="localLink" href="http://schema.org/Place">Place</a> that contains, or is colocated with, one or more <a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>s, often linked by a similar theme or interest to a particular <a class="localLink" href="http://schema.org/touristType">touristType</a>. The <a href="http://www2.unwto.org/">UNWTO</a> defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.
    ///  (See examples below).
    ///<see cref="http://schema.org/TouristDestination"/>
    ///</summary>
    public const string TouristDestination = "http://schema.org/TouristDestination";

    ///<summary>
    ///A tourist information center.
    ///<see cref="http://schema.org/TouristInformationCenter"/>
    ///</summary>
    public const string TouristInformationCenter = "http://schema.org/TouristInformationCenter";

    ///<summary>
    ///A tourist trip. A created itinerary of visits to one or more places of interest (<a class="localLink" href="http://schema.org/TouristAttraction">TouristAttraction</a>/<a class="localLink" href="http://schema.org/TouristDestination">TouristDestination</a>) often linked by a similar theme, geographic area, or interest to a particular <a class="localLink" href="http://schema.org/touristType">touristType</a>. The <a href="http://www2.unwto.org/">UNWTO</a> defines tourism trip as the Trip taken by visitors.
    ///  (See examples below).
    ///<see cref="http://schema.org/TouristTrip"/>
    ///</summary>
    public const string TouristTrip = "http://schema.org/TouristTrip";

    ///<summary>
    ///A toy store.
    ///<see cref="http://schema.org/ToyStore"/>
    ///</summary>
    public const string ToyStore = "http://schema.org/ToyStore";

    ///<summary>
    ///An agent tracks an object for updates.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.</li>
    ///<li><a class="localLink" href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/TrackAction"/>
    ///</summary>
    public const string TrackAction = "http://schema.org/TrackAction";

    ///<summary>
    ///The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.
    ///<see cref="http://schema.org/TradeAction"/>
    ///</summary>
    public const string TradeAction = "http://schema.org/TradeAction";

    ///<summary>
    ///A reservation for train travel.<br/><br/>
    ///
    ///Note: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use <a class="localLink" href="http://schema.org/Offer">Offer</a>.
    ///<see cref="http://schema.org/TrainReservation"/>
    ///</summary>
    public const string TrainReservation = "http://schema.org/TrainReservation";

    ///<summary>
    ///A train station.
    ///<see cref="http://schema.org/TrainStation"/>
    ///</summary>
    public const string TrainStation = "http://schema.org/TrainStation";

    ///<summary>
    ///A trip on a commercial train line.
    ///<see cref="http://schema.org/TrainTrip"/>
    ///</summary>
    public const string TrainTrip = "http://schema.org/TrainTrip";

    ///<summary>
    ///The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.
    ///<see cref="http://schema.org/TransferAction"/>
    ///</summary>
    public const string TransferAction = "http://schema.org/TransferAction";

    ///<summary>
    ///The act of traveling from an fromLocation to a destination by a specified mode of transport, optionally with participants.
    ///<see cref="http://schema.org/TravelAction"/>
    ///</summary>
    public const string TravelAction = "http://schema.org/TravelAction";

    ///<summary>
    ///A travel agency.
    ///<see cref="http://schema.org/TravelAgency"/>
    ///</summary>
    public const string TravelAgency = "http://schema.org/TravelAgency";

    ///<summary>
    ///An indication for treating an underlying condition, symptom, etc.
    ///<see cref="http://schema.org/TreatmentIndication"/>
    ///</summary>
    public const string TreatmentIndication = "http://schema.org/TreatmentIndication";

    ///<summary>
    ///A trip or journey. An itinerary of visits to one or more places.
    ///<see cref="http://schema.org/Trip"/>
    ///</summary>
    public const string Trip = "http://schema.org/Trip";

    ///<summary>
    ///A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.
    ///<see cref="http://schema.org/TypeAndQuantityNode"/>
    ///</summary>
    public const string TypeAndQuantityNode = "http://schema.org/TypeAndQuantityNode";

    ///<summary>
    ///Data type: URL.
    ///<see cref="http://schema.org/URL"/>
    ///</summary>
    public const string URL = "http://schema.org/URL";

    ///<summary>
    ///The act of un-registering from a service.<br/><br/>
    ///
    ///Related actions:<br/><br/>
    ///
    ///<ul>
    ///<li><a class="localLink" href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of UnRegisterAction.</li>
    ///<li><a class="localLink" href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you werer previously registered, rather than leaving a team/group of people.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/UnRegisterAction"/>
    ///</summary>
    public const string UnRegisterAction = "http://schema.org/UnRegisterAction";

    ///<summary>
    ///The price asked for a given offer by the respective organization or person.
    ///<see cref="http://schema.org/UnitPriceSpecification"/>
    ///</summary>
    public const string UnitPriceSpecification = "http://schema.org/UnitPriceSpecification";

    ///<summary>
    ///The act of managing by changing/editing the state of the object.
    ///<see cref="http://schema.org/UpdateAction"/>
    ///</summary>
    public const string UpdateAction = "http://schema.org/UpdateAction";

    ///<summary>
    ///The act of applying an object to its intended purpose.
    ///<see cref="http://schema.org/UseAction"/>
    ///</summary>
    public const string UseAction = "http://schema.org/UseAction";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserBlocks"/>
    ///</summary>
    public const string UserBlocks = "http://schema.org/UserBlocks";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserCheckins"/>
    ///</summary>
    public const string UserCheckins = "http://schema.org/UserCheckins";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserComments"/>
    ///</summary>
    public const string UserComments = "http://schema.org/UserComments";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserDownloads"/>
    ///</summary>
    public const string UserDownloads = "http://schema.org/UserDownloads";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserInteraction"/>
    ///</summary>
    public const string UserInteraction = "http://schema.org/UserInteraction";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserLikes"/>
    ///</summary>
    public const string UserLikes = "http://schema.org/UserLikes";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPageVisits"/>
    ///</summary>
    public const string UserPageVisits = "http://schema.org/UserPageVisits";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPlays"/>
    ///</summary>
    public const string UserPlays = "http://schema.org/UserPlays";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserPlusOnes"/>
    ///</summary>
    public const string UserPlusOnes = "http://schema.org/UserPlusOnes";

    ///<summary>
    ///A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with <a class="localLink" href="http://schema.org/CriticReview">CriticReview</a>.
    ///<see cref="http://schema.org/UserReview"/>
    ///</summary>
    public const string UserReview = "http://schema.org/UserReview";

    ///<summary>
    ///UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use <a class="localLink" href="http://schema.org/Action">Action</a>-based vocabulary, alongside types such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
    ///<see cref="http://schema.org/UserTweets"/>
    ///</summary>
    public const string UserTweets = "http://schema.org/UserTweets";

    ///<summary>
    ///A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.
    ///<see cref="http://schema.org/Vehicle"/>
    ///</summary>
    public const string Vehicle = "http://schema.org/Vehicle";

    ///<summary>
    ///A type of blood vessel that specifically carries blood to the heart.
    ///<see cref="http://schema.org/Vein"/>
    ///</summary>
    public const string Vein = "http://schema.org/Vein";

    ///<summary>
    ///A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.
    ///<see cref="http://schema.org/Vessel"/>
    ///</summary>
    public const string Vessel = "http://schema.org/Vessel";

    ///<summary>
    ///A vet's office.
    ///<see cref="http://schema.org/VeterinaryCare"/>
    ///</summary>
    public const string VeterinaryCare = "http://schema.org/VeterinaryCare";

    ///<summary>
    ///Web page type: Video gallery page.
    ///<see cref="http://schema.org/VideoGallery"/>
    ///</summary>
    public const string VideoGallery = "http://schema.org/VideoGallery";

    ///<summary>
    ///A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.
    ///<see cref="http://schema.org/VideoGame"/>
    ///</summary>
    public const string VideoGame = "http://schema.org/VideoGame";

    ///<summary>
    ///A short segment/part of a video game.
    ///<see cref="http://schema.org/VideoGameClip"/>
    ///</summary>
    public const string VideoGameClip = "http://schema.org/VideoGameClip";

    ///<summary>
    ///A video game series.
    ///<see cref="http://schema.org/VideoGameSeries"/>
    ///</summary>
    public const string VideoGameSeries = "http://schema.org/VideoGameSeries";

    ///<summary>
    ///A video file.
    ///<see cref="http://schema.org/VideoObject"/>
    ///</summary>
    public const string VideoObject = "http://schema.org/VideoObject";

    ///<summary>
    ///The act of consuming static visual content.
    ///<see cref="http://schema.org/ViewAction"/>
    ///</summary>
    public const string ViewAction = "http://schema.org/ViewAction";

    ///<summary>
    ///Event type: Visual arts event.
    ///<see cref="http://schema.org/VisualArtsEvent"/>
    ///</summary>
    public const string VisualArtsEvent = "http://schema.org/VisualArtsEvent";

    ///<summary>
    ///A work of art that is primarily visual in character.
    ///<see cref="http://schema.org/VisualArtwork"/>
    ///</summary>
    public const string VisualArtwork = "http://schema.org/VisualArtwork";

    ///<summary>
    ///Vital signs are measures of various physiological functions in order to assess the most basic body functions.
    ///<see cref="http://schema.org/VitalSign"/>
    ///</summary>
    public const string VitalSign = "http://schema.org/VitalSign";

    ///<summary>
    ///A volcano, like Fuji san.
    ///<see cref="http://schema.org/Volcano"/>
    ///</summary>
    public const string Volcano = "http://schema.org/Volcano";

    ///<summary>
    ///The act of expressing a preference from a fixed/finite/structured set of choices/options.
    ///<see cref="http://schema.org/VoteAction"/>
    ///</summary>
    public const string VoteAction = "http://schema.org/VoteAction";

    ///<summary>
    ///An advertising section of the page.
    ///<see cref="http://schema.org/WPAdBlock"/>
    ///</summary>
    public const string WPAdBlock = "http://schema.org/WPAdBlock";

    ///<summary>
    ///The footer section of the page.
    ///<see cref="http://schema.org/WPFooter"/>
    ///</summary>
    public const string WPFooter = "http://schema.org/WPFooter";

    ///<summary>
    ///The header section of the page.
    ///<see cref="http://schema.org/WPHeader"/>
    ///</summary>
    public const string WPHeader = "http://schema.org/WPHeader";

    ///<summary>
    ///A sidebar section of the page.
    ///<see cref="http://schema.org/WPSideBar"/>
    ///</summary>
    public const string WPSideBar = "http://schema.org/WPSideBar";

    ///<summary>
    ///The act of expressing a desire about the object. An agent wants an object.
    ///<see cref="http://schema.org/WantAction"/>
    ///</summary>
    public const string WantAction = "http://schema.org/WantAction";

    ///<summary>
    ///A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.
    ///<see cref="http://schema.org/WarrantyPromise"/>
    ///</summary>
    public const string WarrantyPromise = "http://schema.org/WarrantyPromise";

    ///<summary>
    ///A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>
    ///
    ///Commonly used values:<br/><br/>
    ///
    ///<ul>
    ///<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>
    ///<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>
    ///<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/WarrantyScope"/>
    ///</summary>
    public const string WarrantyScope = "http://schema.org/WarrantyScope";

    ///<summary>
    ///The act of consuming dynamic/moving visual content.
    ///<see cref="http://schema.org/WatchAction"/>
    ///</summary>
    public const string WatchAction = "http://schema.org/WatchAction";

    ///<summary>
    ///A waterfall, like Niagara.
    ///<see cref="http://schema.org/Waterfall"/>
    ///</summary>
    public const string Waterfall = "http://schema.org/Waterfall";

    ///<summary>
    ///The act of dressing oneself in clothing.
    ///<see cref="http://schema.org/WearAction"/>
    ///</summary>
    public const string WearAction = "http://schema.org/WearAction";

    ///<summary>
    ///An application programming interface accessible over Web/Internet technologies.
    ///<see cref="http://schema.org/WebAPI"/>
    ///</summary>
    public const string WebAPI = "http://schema.org/WebAPI";

    ///<summary>
    ///Web applications.
    ///<see cref="http://schema.org/WebApplication"/>
    ///</summary>
    public const string WebApplication = "http://schema.org/WebApplication";

    ///<summary>
    ///A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.
    ///<see cref="http://schema.org/WebPage"/>
    ///</summary>
    public const string WebPage = "http://schema.org/WebPage";

    ///<summary>
    ///A web page element, like a table or an image.
    ///<see cref="http://schema.org/WebPageElement"/>
    ///</summary>
    public const string WebPageElement = "http://schema.org/WebPageElement";

    ///<summary>
    ///A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.
    ///<see cref="http://schema.org/WebSite"/>
    ///</summary>
    public const string WebSite = "http://schema.org/WebSite";

    ///<summary>
    ///A wholesale store.
    ///<see cref="http://schema.org/WholesaleStore"/>
    ///</summary>
    public const string WholesaleStore = "http://schema.org/WholesaleStore";

    ///<summary>
    ///The act of achieving victory in a competitive activity.
    ///<see cref="http://schema.org/WinAction"/>
    ///</summary>
    public const string WinAction = "http://schema.org/WinAction";

    ///<summary>
    ///A winery.
    ///<see cref="http://schema.org/Winery"/>
    ///</summary>
    public const string Winery = "http://schema.org/Winery";

    ///<summary>
    ///A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.
    ///<see cref="http://schema.org/WorkBasedProgram"/>
    ///</summary>
    public const string WorkBasedProgram = "http://schema.org/WorkBasedProgram";

    ///<summary>
    ///A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.
    ///<see cref="http://schema.org/WorkersUnion"/>
    ///</summary>
    public const string WorkersUnion = "http://schema.org/WorkersUnion";

    ///<summary>
    ///The act of authoring written creative content.
    ///<see cref="http://schema.org/WriteAction"/>
    ///</summary>
    public const string WriteAction = "http://schema.org/WriteAction";

    ///<summary>
    ///Text representing an XPath (typically but not necessarily version 1.0).
    ///<see cref="http://schema.org/XPathType"/>
    ///</summary>
    public const string XPathType = "http://schema.org/XPathType";

    ///<summary>
    ///A zoo.
    ///<see cref="http://schema.org/Zoo"/>
    ///</summary>
    public const string Zoo = "http://schema.org/Zoo";

    ///<summary>
    ///Abdomen clinical examination.
    ///<see cref="http://schema.org/Abdomen"/>
    ///</summary>
    public const string Abdomen = "http://schema.org/Abdomen";

    ///<summary>
    ///An in-progress action (e.g, while watching the movie, or driving to a location).
    ///<see cref="http://schema.org/ActiveActionStatus"/>
    ///</summary>
    public const string ActiveActionStatus = "http://schema.org/ActiveActionStatus";

    ///<summary>
    ///Active, but not recruiting new participants.
    ///<see cref="http://schema.org/ActiveNotRecruiting"/>
    ///</summary>
    public const string ActiveNotRecruiting = "http://schema.org/ActiveNotRecruiting";

    ///<summary>
    ///Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.
    ///<see cref="http://schema.org/AerobicActivity"/>
    ///</summary>
    public const string AerobicActivity = "http://schema.org/AerobicActivity";

    ///<summary>
    ///AlbumRelease.
    ///<see cref="http://schema.org/AlbumRelease"/>
    ///</summary>
    public const string AlbumRelease = "http://schema.org/AlbumRelease";

    ///<summary>
    ///All-wheel Drive is a transmission layout where the engine drives all four wheels.
    ///<see cref="http://schema.org/AllWheelDriveConfiguration"/>
    ///</summary>
    public const string AllWheelDriveConfiguration = "http://schema.org/AllWheelDriveConfiguration";

    ///<summary>
    ///Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.
    ///<see cref="http://schema.org/AnaerobicActivity"/>
    ///</summary>
    public const string AnaerobicActivity = "http://schema.org/AnaerobicActivity";

    ///<summary>
    ///A specific branch of medical science that pertains to study of anesthetics and their application.
    ///<see cref="http://schema.org/Anesthesia"/>
    ///</summary>
    public const string Anesthesia = "http://schema.org/Anesthesia";

    ///<summary>
    ///Appearance assessment with clinical examination.
    ///<see cref="http://schema.org/Appearance"/>
    ///</summary>
    public const string Appearance = "http://schema.org/Appearance";

    ///<summary>
    ///Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.
    ///<see cref="http://schema.org/AudiobookFormat"/>
    ///</summary>
    public const string AudiobookFormat = "http://schema.org/AudiobookFormat";

    ///<summary>
    ///Indicates that the publisher gives some special status to the publication of the document. ("The Queens Printer" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications). Something "Authoritative" is considered to be also <a class="localLink" href="http://schema.org/OfficialLegalValue">OfficialLegalValue</a>".
    ///<see cref="http://schema.org/AuthoritativeLegalValue"/>
    ///</summary>
    public const string AuthoritativeLegalValue = "http://schema.org/AuthoritativeLegalValue";

    ///<summary>
    ///A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.
    ///<see cref="http://schema.org/Ayurvedic"/>
    ///</summary>
    public const string Ayurvedic = "http://schema.org/Ayurvedic";

    ///<summary>
    ///Pathogenic bacteria that cause bacterial infection.
    ///<see cref="http://schema.org/Bacteria"/>
    ///</summary>
    public const string Bacteria = "http://schema.org/Bacteria";

    ///<summary>
    ///Physical activity that is engaged to help maintain posture and balance.
    ///<see cref="http://schema.org/Balance"/>
    ///</summary>
    public const string Balance = "http://schema.org/Balance";

    ///<summary>
    ///BroadcastRelease.
    ///<see cref="http://schema.org/BroadcastRelease"/>
    ///</summary>
    public const string BroadcastRelease = "http://schema.org/BroadcastRelease";

    ///<summary>
    ///CDFormat.
    ///<see cref="http://schema.org/CDFormat"/>
    ///</summary>
    public const string CDFormat = "http://schema.org/CDFormat";

    ///<summary>
    ///X-ray computed tomography imaging.
    ///<see cref="http://schema.org/CT"/>
    ///</summary>
    public const string CT = "http://schema.org/CT";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.
    ///<see cref="http://schema.org/Cardiovascular"/>
    ///</summary>
    public const string Cardiovascular = "http://schema.org/Cardiovascular";

    ///<summary>
    ///Cardiovascular system assessment withclinical examination.
    ///<see cref="http://schema.org/CardiovascularExam"/>
    ///</summary>
    public const string CardiovascularExam = "http://schema.org/CardiovascularExam";

    ///<summary>
    ///A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.
    ///<see cref="http://schema.org/CaseSeries"/>
    ///</summary>
    public const string CaseSeries = "http://schema.org/CaseSeries";

    ///<summary>
    ///CassetteFormat.
    ///<see cref="http://schema.org/CassetteFormat"/>
    ///</summary>
    public const string CassetteFormat = "http://schema.org/CassetteFormat";

    ///<summary>
    ///A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.
    ///<see cref="http://schema.org/Chiropractic"/>
    ///</summary>
    public const string Chiropractic = "http://schema.org/Chiropractic";

    ///<summary>
    ///Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.
    ///<see cref="http://schema.org/Clinician"/>
    ///</summary>
    public const string Clinician = "http://schema.org/Clinician";

    ///<summary>
    ///Play mode: CoOp. Co-operative games, where you play on the same team with friends.
    ///<see cref="http://schema.org/CoOp"/>
    ///</summary>
    public const string CoOp = "http://schema.org/CoOp";

    ///<summary>
    ///Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.
    ///<see cref="http://schema.org/CohortStudy"/>
    ///</summary>
    public const string CohortStudy = "http://schema.org/CohortStudy";

    ///<summary>
    ///Permission to add comments to the document.
    ///<see cref="http://schema.org/CommentPermission"/>
    ///</summary>
    public const string CommentPermission = "http://schema.org/CommentPermission";

    ///<summary>
    ///A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas
    ///<see cref="http://schema.org/CommunityHealth"/>
    ///</summary>
    public const string CommunityHealth = "http://schema.org/CommunityHealth";

    ///<summary>
    ///CompilationAlbum.
    ///<see cref="http://schema.org/CompilationAlbum"/>
    ///</summary>
    public const string CompilationAlbum = "http://schema.org/CompilationAlbum";

    ///<summary>
    ///Completed.
    ///<see cref="http://schema.org/Completed"/>
    ///</summary>
    public const string Completed = "http://schema.org/Completed";

    ///<summary>
    ///An action that has already taken place.
    ///<see cref="http://schema.org/CompletedActionStatus"/>
    ///</summary>
    public const string CompletedActionStatus = "http://schema.org/CompletedActionStatus";

    ///<summary>
    ///Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.
    ///<see cref="http://schema.org/CrossSectional"/>
    ///</summary>
    public const string CrossSectional = "http://schema.org/CrossSectional";

    ///<summary>
    ///DJMixAlbum.
    ///<see cref="http://schema.org/DJMixAlbum"/>
    ///</summary>
    public const string DJMixAlbum = "http://schema.org/DJMixAlbum";

    ///<summary>
    ///DVDFormat.
    ///<see cref="http://schema.org/DVDFormat"/>
    ///</summary>
    public const string DVDFormat = "http://schema.org/DVDFormat";

    ///<summary>
    ///Indicates that the item is damaged.
    ///<see cref="http://schema.org/DamagedCondition"/>
    ///</summary>
    public const string DamagedCondition = "http://schema.org/DamagedCondition";

    ///<summary>
    ///Indicates a document for which the text is conclusively what the law says and is legally binding. (e.g. The digitally signed version of an Official Journal.)
    ///  Something "Definitive" is considered to be also <a class="localLink" href="http://schema.org/AuthoritativeLegalValue">AuthoritativeLegalValue</a>.
    ///<see cref="http://schema.org/DefinitiveLegalValue"/>
    ///</summary>
    public const string DefinitiveLegalValue = "http://schema.org/DefinitiveLegalValue";

    ///<summary>
    ///DemoAlbum.
    ///<see cref="http://schema.org/DemoAlbum"/>
    ///</summary>
    public const string DemoAlbum = "http://schema.org/DemoAlbum";

    ///<summary>
    ///A branch of medicine that is involved in the dental care.
    ///<see cref="http://schema.org/Dentistry"/>
    ///</summary>
    public const string Dentistry = "http://schema.org/Dentistry";

    ///<summary>
    ///Something relating to or practicing dermatology
    ///<see cref="http://schema.org/Dermatologic"/>
    ///</summary>
    public const string Dermatologic = "http://schema.org/Dermatologic";

    ///<summary>
    ///A diet appropriate for people with diabetes.
    ///<see cref="http://schema.org/DiabeticDiet"/>
    ///</summary>
    public const string DiabeticDiet = "http://schema.org/DiabeticDiet";

    ///<summary>
    ///A medical device used for diagnostic purposes.
    ///<see cref="http://schema.org/Diagnostic"/>
    ///</summary>
    public const string Diagnostic = "http://schema.org/Diagnostic";

    ///<summary>
    ///Dietetic and nutrition as a medical speciality.
    ///<see cref="http://schema.org/DietNutrition"/>
    ///</summary>
    public const string DietNutrition = "http://schema.org/DietNutrition";

    ///<summary>
    ///DigitalAudioTapeFormat.
    ///<see cref="http://schema.org/DigitalAudioTapeFormat"/>
    ///</summary>
    public const string DigitalAudioTapeFormat = "http://schema.org/DigitalAudioTapeFormat";

    ///<summary>
    ///DigitalFormat.
    ///<see cref="http://schema.org/DigitalFormat"/>
    ///</summary>
    public const string DigitalFormat = "http://schema.org/DigitalFormat";

    ///<summary>
    ///Indicates that the item has been discontinued.
    ///<see cref="http://schema.org/Discontinued"/>
    ///</summary>
    public const string Discontinued = "http://schema.org/Discontinued";

    ///<summary>
    ///A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.
    ///<see cref="http://schema.org/DoubleBlindedTrial"/>
    ///</summary>
    public const string DoubleBlindedTrial = "http://schema.org/DoubleBlindedTrial";

    ///<summary>
    ///Indicates the usage of the vehicle for driving school.
    ///<see cref="http://schema.org/DrivingSchoolVehicleUsage"/>
    ///</summary>
    public const string DrivingSchoolVehicleUsage = "http://schema.org/DrivingSchoolVehicleUsage";

    ///<summary>
    ///Book format: Ebook.
    ///<see cref="http://schema.org/EBook"/>
    ///</summary>
    public const string EBook = "http://schema.org/EBook";

    ///<summary>
    ///EPRelease.
    ///<see cref="http://schema.org/EPRelease"/>
    ///</summary>
    public const string EPRelease = "http://schema.org/EPRelease";

    ///<summary>
    ///Ear function assessment with clinical examination.
    ///<see cref="http://schema.org/Ear"/>
    ///</summary>
    public const string Ear = "http://schema.org/Ear";

    ///<summary>
    ///A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.
    ///<see cref="http://schema.org/Emergency"/>
    ///</summary>
    public const string Emergency = "http://schema.org/Emergency";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.
    ///<see cref="http://schema.org/Endocrine"/>
    ///</summary>
    public const string Endocrine = "http://schema.org/Endocrine";

    ///<summary>
    ///Enrolling participants by invitation only.
    ///<see cref="http://schema.org/EnrollingByInvitation"/>
    ///</summary>
    public const string EnrollingByInvitation = "http://schema.org/EnrollingByInvitation";

    ///<summary>
    ///The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).
    ///<see cref="http://schema.org/EventCancelled"/>
    ///</summary>
    public const string EventCancelled = "http://schema.org/EventCancelled";

    ///<summary>
    ///The event has been postponed and no new date has been set. The event's previousStartDate should be set.
    ///<see cref="http://schema.org/EventPostponed"/>
    ///</summary>
    public const string EventPostponed = "http://schema.org/EventPostponed";

    ///<summary>
    ///The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated).
    ///<see cref="http://schema.org/EventRescheduled"/>
    ///</summary>
    public const string EventRescheduled = "http://schema.org/EventRescheduled";

    ///<summary>
    ///The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.
    ///<see cref="http://schema.org/EventScheduled"/>
    ///</summary>
    public const string EventScheduled = "http://schema.org/EventScheduled";

    ///<summary>
    ///Data derived from multiple randomized clinical trials or meta-analyses.
    ///<see cref="http://schema.org/EvidenceLevelA"/>
    ///</summary>
    public const string EvidenceLevelA = "http://schema.org/EvidenceLevelA";

    ///<summary>
    ///Data derived from a single randomized trial, or nonrandomized studies.
    ///<see cref="http://schema.org/EvidenceLevelB"/>
    ///</summary>
    public const string EvidenceLevelB = "http://schema.org/EvidenceLevelB";

    ///<summary>
    ///Only consensus opinion of experts, case studies, or standard-of-care.
    ///<see cref="http://schema.org/EvidenceLevelC"/>
    ///</summary>
    public const string EvidenceLevelC = "http://schema.org/EvidenceLevelC";

    ///<summary>
    ///A ExchangeRefund ...
    ///<see cref="http://schema.org/ExchangeRefund"/>
    ///</summary>
    public const string ExchangeRefund = "http://schema.org/ExchangeRefund";

    ///<summary>
    ///Eye or ophtalmological function assessment with clinical examination.
    ///<see cref="http://schema.org/Eye"/>
    ///</summary>
    public const string Eye = "http://schema.org/Eye";

    ///<summary>
    ///A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).
    ///<see cref="http://schema.org/FDAcategoryA"/>
    ///</summary>
    public const string FDAcategoryA = "http://schema.org/FDAcategoryA";

    ///<summary>
    ///A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.
    ///<see cref="http://schema.org/FDAcategoryB"/>
    ///</summary>
    public const string FDAcategoryB = "http://schema.org/FDAcategoryB";

    ///<summary>
    ///A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
    ///<see cref="http://schema.org/FDAcategoryC"/>
    ///</summary>
    public const string FDAcategoryC = "http://schema.org/FDAcategoryC";

    ///<summary>
    ///A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.
    ///<see cref="http://schema.org/FDAcategoryD"/>
    ///</summary>
    public const string FDAcategoryD = "http://schema.org/FDAcategoryD";

    ///<summary>
    ///A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.
    ///<see cref="http://schema.org/FDAcategoryX"/>
    ///</summary>
    public const string FDAcategoryX = "http://schema.org/FDAcategoryX";

    ///<summary>
    ///A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.
    ///<see cref="http://schema.org/FDAnotEvaluated"/>
    ///</summary>
    public const string FDAnotEvaluated = "http://schema.org/FDAnotEvaluated";

    ///<summary>
    ///An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.
    ///<see cref="http://schema.org/FailedActionStatus"/>
    ///</summary>
    public const string FailedActionStatus = "http://schema.org/FailedActionStatus";

    ///<summary>
    ///The boolean value false.
    ///<see cref="http://schema.org/False"/>
    ///</summary>
    public const string False = "http://schema.org/False";

    ///<summary>
    ///The female gender.
    ///<see cref="http://schema.org/Female"/>
    ///</summary>
    public const string Female = "http://schema.org/Female";

    ///<summary>
    ///Physical activity that is engaged in to improve joint and muscle flexibility.
    ///<see cref="http://schema.org/Flexibility"/>
    ///</summary>
    public const string Flexibility = "http://schema.org/Flexibility";

    ///<summary>
    ///Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.
    ///<see cref="http://schema.org/FourWheelDriveConfiguration"/>
    ///</summary>
    public const string FourWheelDriveConfiguration = "http://schema.org/FourWheelDriveConfiguration";

    ///<summary>
    ///The day of the week between Thursday and Saturday.
    ///<see cref="http://schema.org/Friday"/>
    ///</summary>
    public const string Friday = "http://schema.org/Friday";

    ///<summary>
    ///Front-wheel drive is a transmission layout where the engine drives the front wheels.
    ///<see cref="http://schema.org/FrontWheelDriveConfiguration"/>
    ///</summary>
    public const string FrontWheelDriveConfiguration = "http://schema.org/FrontWheelDriveConfiguration";

    ///<summary>
    ///A FullRefund ...
    ///<see cref="http://schema.org/FullRefund"/>
    ///</summary>
    public const string FullRefund = "http://schema.org/FullRefund";

    ///<summary>
    ///Pathogenic fungus.
    ///<see cref="http://schema.org/Fungus"/>
    ///</summary>
    public const string Fungus = "http://schema.org/Fungus";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.
    ///<see cref="http://schema.org/Gastroenterologic"/>
    ///</summary>
    public const string Gastroenterologic = "http://schema.org/Gastroenterologic";

    ///<summary>
    ///A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.
    ///<see cref="http://schema.org/Genetic"/>
    ///</summary>
    public const string Genetic = "http://schema.org/Genetic";

    ///<summary>
    ///Genitourinary system function assessment with clinical examination.
    ///<see cref="http://schema.org/Genitourinary"/>
    ///</summary>
    public const string Genitourinary = "http://schema.org/Genitourinary";

    ///<summary>
    ///A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.
    ///<see cref="http://schema.org/Geriatric"/>
    ///</summary>
    public const string Geriatric = "http://schema.org/Geriatric";

    ///<summary>
    ///A diet exclusive of gluten.
    ///<see cref="http://schema.org/GlutenFreeDiet"/>
    ///</summary>
    public const string GlutenFreeDiet = "http://schema.org/GlutenFreeDiet";

    ///<summary>
    ///Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.
    ///<see cref="http://schema.org/GraphicNovel"/>
    ///</summary>
    public const string GraphicNovel = "http://schema.org/GraphicNovel";

    ///<summary>
    ///The airline boards by groups based on check-in time, priority, etc.
    ///<see cref="http://schema.org/GroupBoardingPolicy"/>
    ///</summary>
    public const string GroupBoardingPolicy = "http://schema.org/GroupBoardingPolicy";

    ///<summary>
    ///A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.
    ///<see cref="http://schema.org/Gynecologic"/>
    ///</summary>
    public const string Gynecologic = "http://schema.org/Gynecologic";

    ///<summary>
    ///A diet conforming to Islamic dietary practices.
    ///<see cref="http://schema.org/HalalDiet"/>
    ///</summary>
    public const string HalalDiet = "http://schema.org/HalalDiet";

    ///<summary>
    ///Book format: Hardcover.
    ///<see cref="http://schema.org/Hardcover"/>
    ///</summary>
    public const string Hardcover = "http://schema.org/Hardcover";

    ///<summary>
    ///Head assessment with clinical examination.
    ///<see cref="http://schema.org/Head"/>
    ///</summary>
    public const string Head = "http://schema.org/Head";

    ///<summary>
    ///Uses devices to support users with hearing impairments.
    ///<see cref="http://schema.org/HearingImpairedSupported"/>
    ///</summary>
    public const string HearingImpairedSupported = "http://schema.org/HearingImpairedSupported";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.
    ///<see cref="http://schema.org/Hematologic"/>
    ///</summary>
    public const string Hematologic = "http://schema.org/Hematologic";

    ///<summary>
    ///A diet conforming to Hindu dietary practices, in particular, beef-free.
    ///<see cref="http://schema.org/HinduDiet"/>
    ///</summary>
    public const string HinduDiet = "http://schema.org/HinduDiet";

    ///<summary>
    ///A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.
    ///<see cref="http://schema.org/Homeopathic"/>
    ///</summary>
    public const string Homeopathic = "http://schema.org/Homeopathic";

    ///<summary>
    ///Indicates that a legislation is in force.
    ///<see cref="http://schema.org/InForce"/>
    ///</summary>
    public const string InForce = "http://schema.org/InForce";

    ///<summary>
    ///Indicates that the item is in stock.
    ///<see cref="http://schema.org/InStock"/>
    ///</summary>
    public const string InStock = "http://schema.org/InStock";

    ///<summary>
    ///Indicates that the item is available only at physical locations.
    ///<see cref="http://schema.org/InStoreOnly"/>
    ///</summary>
    public const string InStoreOnly = "http://schema.org/InStoreOnly";

    ///<summary>
    ///Something in medical science that pertains to infectious diseases i.e caused by bacterial, viral, fungal or parasitic infections.
    ///<see cref="http://schema.org/Infectious"/>
    ///</summary>
    public const string Infectious = "http://schema.org/Infectious";

    ///<summary>
    ///An international trial.
    ///<see cref="http://schema.org/InternationalTrial"/>
    ///</summary>
    public const string InternationalTrial = "http://schema.org/InternationalTrial";

    ///<summary>
    ///An ItemList ordered with lower values listed first.
    ///<see cref="http://schema.org/ItemListOrderAscending"/>
    ///</summary>
    public const string ItemListOrderAscending = "http://schema.org/ItemListOrderAscending";

    ///<summary>
    ///An ItemList ordered with higher values listed first.
    ///<see cref="http://schema.org/ItemListOrderDescending"/>
    ///</summary>
    public const string ItemListOrderDescending = "http://schema.org/ItemListOrderDescending";

    ///<summary>
    ///An ItemList ordered with no explicit order.
    ///<see cref="http://schema.org/ItemListUnordered"/>
    ///</summary>
    public const string ItemListUnordered = "http://schema.org/ItemListUnordered";

    ///<summary>
    ///A diet conforming to Jewish dietary practices.
    ///<see cref="http://schema.org/KosherDiet"/>
    ///</summary>
    public const string KosherDiet = "http://schema.org/KosherDiet";

    ///<summary>
    ///A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research
    ///<see cref="http://schema.org/LaboratoryScience"/>
    ///</summary>
    public const string LaboratoryScience = "http://schema.org/LaboratoryScience";

    ///<summary>
    ///LaserDiscFormat.
    ///<see cref="http://schema.org/LaserDiscFormat"/>
    ///</summary>
    public const string LaserDiscFormat = "http://schema.org/LaserDiscFormat";

    ///<summary>
    ///The steering position is on the left side of the vehicle (viewed from the main direction of driving).
    ///<see cref="http://schema.org/LeftHandDriving"/>
    ///</summary>
    public const string LeftHandDriving = "http://schema.org/LeftHandDriving";

    ///<summary>
    ///Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.
    ///<see cref="http://schema.org/LeisureTimeActivity"/>
    ///</summary>
    public const string LeisureTimeActivity = "http://schema.org/LeisureTimeActivity";

    ///<summary>
    ///Indicates that the item has limited availability.
    ///<see cref="http://schema.org/LimitedAvailability"/>
    ///</summary>
    public const string LimitedAvailability = "http://schema.org/LimitedAvailability";

    ///<summary>
    ///LiveAlbum.
    ///<see cref="http://schema.org/LiveAlbum"/>
    ///</summary>
    public const string LiveAlbum = "http://schema.org/LiveAlbum";

    ///<summary>
    ///Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.
    ///<see cref="http://schema.org/Longitudinal"/>
    ///</summary>
    public const string Longitudinal = "http://schema.org/Longitudinal";

    ///<summary>
    ///A diet focused on reduced calorie intake.
    ///<see cref="http://schema.org/LowCalorieDiet"/>
    ///</summary>
    public const string LowCalorieDiet = "http://schema.org/LowCalorieDiet";

    ///<summary>
    ///A diet focused on reduced fat and cholesterol intake.
    ///<see cref="http://schema.org/LowFatDiet"/>
    ///</summary>
    public const string LowFatDiet = "http://schema.org/LowFatDiet";

    ///<summary>
    ///A diet appropriate for people with lactose intolerance.
    ///<see cref="http://schema.org/LowLactoseDiet"/>
    ///</summary>
    public const string LowLactoseDiet = "http://schema.org/LowLactoseDiet";

    ///<summary>
    ///A diet focused on reduced sodium intake.
    ///<see cref="http://schema.org/LowSaltDiet"/>
    ///</summary>
    public const string LowSaltDiet = "http://schema.org/LowSaltDiet";

    ///<summary>
    ///Lung and respiratory system clinical examination.
    ///<see cref="http://schema.org/Lung"/>
    ///</summary>
    public const string Lung = "http://schema.org/Lung";

    ///<summary>
    ///Magnetic resonance imaging.
    ///<see cref="http://schema.org/MRI"/>
    ///</summary>
    public const string MRI = "http://schema.org/MRI";

    ///<summary>
    ///The male gender.
    ///<see cref="http://schema.org/Male"/>
    ///</summary>
    public const string Male = "http://schema.org/Male";

    ///<summary>
    ///Medical researchers.
    ///<see cref="http://schema.org/MedicalResearcher"/>
    ///</summary>
    public const string MedicalResearcher = "http://schema.org/MedicalResearcher";

    ///<summary>
    ///A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.
    ///<see cref="http://schema.org/Midwifery"/>
    ///</summary>
    public const string Midwifery = "http://schema.org/Midwifery";

    ///<summary>
    ///MixtapeAlbum.
    ///<see cref="http://schema.org/MixtapeAlbum"/>
    ///</summary>
    public const string MixtapeAlbum = "http://schema.org/MixtapeAlbum";

    ///<summary>
    ///The day of the week between Sunday and Tuesday.
    ///<see cref="http://schema.org/Monday"/>
    ///</summary>
    public const string Monday = "http://schema.org/Monday";

    ///<summary>
    ///A trial that takes place at multiple centers.
    ///<see cref="http://schema.org/MultiCenterTrial"/>
    ///</summary>
    public const string MultiCenterTrial = "http://schema.org/MultiCenterTrial";

    ///<summary>
    ///Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.
    ///<see cref="http://schema.org/MultiPlayer"/>
    ///</summary>
    public const string MultiPlayer = "http://schema.org/MultiPlayer";

    ///<summary>
    ///Multicellular parasite that causes an infection.
    ///<see cref="http://schema.org/MulticellularParasite"/>
    ///</summary>
    public const string MulticellularParasite = "http://schema.org/MulticellularParasite";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.
    ///<see cref="http://schema.org/Musculoskeletal"/>
    ///</summary>
    public const string Musculoskeletal = "http://schema.org/Musculoskeletal";

    ///<summary>
    ///Musculoskeletal system clinical examination.
    ///<see cref="http://schema.org/MusculoskeletalExam"/>
    ///</summary>
    public const string MusculoskeletalExam = "http://schema.org/MusculoskeletalExam";

    ///<summary>
    ///Neck assessment with clinical examination.
    ///<see cref="http://schema.org/Neck"/>
    ///</summary>
    public const string Neck = "http://schema.org/Neck";

    ///<summary>
    ///Neurological system clinical examination.
    ///<see cref="http://schema.org/Neuro"/>
    ///</summary>
    public const string Neuro = "http://schema.org/Neuro";

    ///<summary>
    ///A specific branch of medical science that studies the nerves and nervous system and its respective disease states.
    ///<see cref="http://schema.org/Neurologic"/>
    ///</summary>
    public const string Neurologic = "http://schema.org/Neurologic";

    ///<summary>
    ///Indicates that the item is new.
    ///<see cref="http://schema.org/NewCondition"/>
    ///</summary>
    public const string NewCondition = "http://schema.org/NewCondition";

    ///<summary>
    ///A type of medical procedure that involves noninvasive techniques.
    ///<see cref="http://schema.org/NoninvasiveProcedure"/>
    ///</summary>
    public const string NoninvasiveProcedure = "http://schema.org/NoninvasiveProcedure";

    ///<summary>
    ///Nose function assessment with clinical examination.
    ///<see cref="http://schema.org/Nose"/>
    ///</summary>
    public const string Nose = "http://schema.org/Nose";

    ///<summary>
    ///Indicates that a legislation is currently not in force.
    ///<see cref="http://schema.org/NotInForce"/>
    ///</summary>
    public const string NotInForce = "http://schema.org/NotInForce";

    ///<summary>
    ///Not yet recruiting.
    ///<see cref="http://schema.org/NotYetRecruiting"/>
    ///</summary>
    public const string NotYetRecruiting = "http://schema.org/NotYetRecruiting";

    ///<summary>
    ///A health profession of a person formally educated and trained in the care of the sick or infirm person.
    ///<see cref="http://schema.org/Nursing"/>
    ///</summary>
    public const string Nursing = "http://schema.org/Nursing";

    ///<summary>
    ///The character of a medical substance, typically a medicine, of being available over the counter or not.
    ///<see cref="http://schema.org/OTC"/>
    ///</summary>
    public const string OTC = "http://schema.org/OTC";

    ///<summary>
    ///An observational study design.
    ///<see cref="http://schema.org/Observational"/>
    ///</summary>
    public const string Observational = "http://schema.org/Observational";

    ///<summary>
    ///A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.
    ///<see cref="http://schema.org/Obstetric"/>
    ///</summary>
    public const string Obstetric = "http://schema.org/Obstetric";

    ///<summary>
    ///Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.
    ///<see cref="http://schema.org/OccupationalActivity"/>
    ///</summary>
    public const string OccupationalActivity = "http://schema.org/OccupationalActivity";

    ///<summary>
    ///All the documents published by an official publisher should have at least the legal value level "OfficialLegalValue". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of a EU directive published by the EU Office of Publications).
    ///<see cref="http://schema.org/OfficialLegalValue"/>
    ///</summary>
    public const string OfficialLegalValue = "http://schema.org/OfficialLegalValue";

    ///<summary>
    ///Game server status: OfflinePermanently. Server is offline and not available.
    ///<see cref="http://schema.org/OfflinePermanently"/>
    ///</summary>
    public const string OfflinePermanently = "http://schema.org/OfflinePermanently";

    ///<summary>
    ///Game server status: OfflineTemporarily. Server is offline now but it can be online soon.
    ///<see cref="http://schema.org/OfflineTemporarily"/>
    ///</summary>
    public const string OfflineTemporarily = "http://schema.org/OfflineTemporarily";

    ///<summary>
    ///A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.
    ///<see cref="http://schema.org/OnSitePickup"/>
    ///</summary>
    public const string OnSitePickup = "http://schema.org/OnSitePickup";

    ///<summary>
    ///A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.
    ///<see cref="http://schema.org/Oncologic"/>
    ///</summary>
    public const string Oncologic = "http://schema.org/Oncologic";

    ///<summary>
    ///Game server status: Online. Server is available.
    ///<see cref="http://schema.org/Online"/>
    ///</summary>
    public const string Online = "http://schema.org/Online";

    ///<summary>
    ///Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.
    ///<see cref="http://schema.org/OnlineFull"/>
    ///</summary>
    public const string OnlineFull = "http://schema.org/OnlineFull";

    ///<summary>
    ///Indicates that the item is available only online.
    ///<see cref="http://schema.org/OnlineOnly"/>
    ///</summary>
    public const string OnlineOnly = "http://schema.org/OnlineOnly";

    ///<summary>
    ///A trial design in which the researcher knows the full details of the treatment, and so does the patient.
    ///<see cref="http://schema.org/OpenTrial"/>
    ///</summary>
    public const string OpenTrial = "http://schema.org/OpenTrial";

    ///<summary>
    ///The science or practice of testing visual acuity and prescribing corrective lenses.
    ///<see cref="http://schema.org/Optometric"/>
    ///</summary>
    public const string Optometric = "http://schema.org/Optometric";

    ///<summary>
    ///OrderStatus representing cancellation of an order.
    ///<see cref="http://schema.org/OrderCancelled"/>
    ///</summary>
    public const string OrderCancelled = "http://schema.org/OrderCancelled";

    ///<summary>
    ///OrderStatus representing successful delivery of an order.
    ///<see cref="http://schema.org/OrderDelivered"/>
    ///</summary>
    public const string OrderDelivered = "http://schema.org/OrderDelivered";

    ///<summary>
    ///OrderStatus representing that an order is in transit.
    ///<see cref="http://schema.org/OrderInTransit"/>
    ///</summary>
    public const string OrderInTransit = "http://schema.org/OrderInTransit";

    ///<summary>
    ///OrderStatus representing that payment is due on an order.
    ///<see cref="http://schema.org/OrderPaymentDue"/>
    ///</summary>
    public const string OrderPaymentDue = "http://schema.org/OrderPaymentDue";

    ///<summary>
    ///OrderStatus representing availability of an order for pickup.
    ///<see cref="http://schema.org/OrderPickupAvailable"/>
    ///</summary>
    public const string OrderPickupAvailable = "http://schema.org/OrderPickupAvailable";

    ///<summary>
    ///OrderStatus representing that there is a problem with the order.
    ///<see cref="http://schema.org/OrderProblem"/>
    ///</summary>
    public const string OrderProblem = "http://schema.org/OrderProblem";

    ///<summary>
    ///OrderStatus representing that an order is being processed.
    ///<see cref="http://schema.org/OrderProcessing"/>
    ///</summary>
    public const string OrderProcessing = "http://schema.org/OrderProcessing";

    ///<summary>
    ///OrderStatus representing that an order has been returned.
    ///<see cref="http://schema.org/OrderReturned"/>
    ///</summary>
    public const string OrderReturned = "http://schema.org/OrderReturned";

    ///<summary>
    ///OriginalShippingFees ...
    ///<see cref="http://schema.org/OriginalShippingFees"/>
    ///</summary>
    public const string OriginalShippingFees = "http://schema.org/OriginalShippingFees";

    ///<summary>
    ///A system of medicine focused on promoting the body's innate ability to heal itself.
    ///<see cref="http://schema.org/Osteopathic"/>
    ///</summary>
    public const string Osteopathic = "http://schema.org/Osteopathic";

    ///<summary>
    ///A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.
    ///<see cref="http://schema.org/Otolaryngologic"/>
    ///</summary>
    public const string Otolaryngologic = "http://schema.org/Otolaryngologic";

    ///<summary>
    ///Indicates that the item is out of stock.
    ///<see cref="http://schema.org/OutOfStock"/>
    ///</summary>
    public const string OutOfStock = "http://schema.org/OutOfStock";

    ///<summary>
    ///Positron emission tomography imaging.
    ///<see cref="http://schema.org/PET"/>
    ///</summary>
    public const string PET = "http://schema.org/PET";

    ///<summary>
    ///Book format: Paperback.
    ///<see cref="http://schema.org/Paperback"/>
    ///</summary>
    public const string Paperback = "http://schema.org/Paperback";

    ///<summary>
    ///A parking map.
    ///<see cref="http://schema.org/ParkingMap"/>
    ///</summary>
    public const string ParkingMap = "http://schema.org/ParkingMap";

    ///<summary>
    ///Indicates that parts of the legislation are in force, and parts are not.
    ///<see cref="http://schema.org/PartiallyInForce"/>
    ///</summary>
    public const string PartiallyInForce = "http://schema.org/PartiallyInForce";

    ///<summary>
    ///A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.
    ///<see cref="http://schema.org/Pathology"/>
    ///</summary>
    public const string Pathology = "http://schema.org/Pathology";

    ///<summary>
    ///An automatic payment system is in place and will be used.
    ///<see cref="http://schema.org/PaymentAutomaticallyApplied"/>
    ///</summary>
    public const string PaymentAutomaticallyApplied = "http://schema.org/PaymentAutomaticallyApplied";

    ///<summary>
    ///The payment has been received and processed.
    ///<see cref="http://schema.org/PaymentComplete"/>
    ///</summary>
    public const string PaymentComplete = "http://schema.org/PaymentComplete";

    ///<summary>
    ///The payee received the payment, but it was declined for some reason.
    ///<see cref="http://schema.org/PaymentDeclined"/>
    ///</summary>
    public const string PaymentDeclined = "http://schema.org/PaymentDeclined";

    ///<summary>
    ///The payment is due, but still within an acceptable time to be received.
    ///<see cref="http://schema.org/PaymentDue"/>
    ///</summary>
    public const string PaymentDue = "http://schema.org/PaymentDue";

    ///<summary>
    ///The payment is due and considered late.
    ///<see cref="http://schema.org/PaymentPastDue"/>
    ///</summary>
    public const string PaymentPastDue = "http://schema.org/PaymentPastDue";

    ///<summary>
    ///A specific branch of medical science that specializes in the care of infants, children and adolescents.
    ///<see cref="http://schema.org/Pediatric"/>
    ///</summary>
    public const string Pediatric = "http://schema.org/Pediatric";

    ///<summary>
    ///A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.
    ///<see cref="http://schema.org/PercutaneousProcedure"/>
    ///</summary>
    public const string PercutaneousProcedure = "http://schema.org/PercutaneousProcedure";

    ///<summary>
    ///The practice or art and science of preparing and dispensing drugs and medicines.
    ///<see cref="http://schema.org/PharmacySpecialty"/>
    ///</summary>
    public const string PharmacySpecialty = "http://schema.org/PharmacySpecialty";

    ///<summary>
    ///The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery..
    ///<see cref="http://schema.org/Physiotherapy"/>
    ///</summary>
    public const string Physiotherapy = "http://schema.org/Physiotherapy";

    ///<summary>
    ///A placebo-controlled trial design.
    ///<see cref="http://schema.org/PlaceboControlledTrial"/>
    ///</summary>
    public const string PlaceboControlledTrial = "http://schema.org/PlaceboControlledTrial";

    ///<summary>
    ///A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.
    ///<see cref="http://schema.org/PlasticSurgery"/>
    ///</summary>
    public const string PlasticSurgery = "http://schema.org/PlasticSurgery";

    ///<summary>
    ///Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.
    ///<see cref="http://schema.org/Podiatric"/>
    ///</summary>
    public const string Podiatric = "http://schema.org/Podiatric";

    ///<summary>
    ///A description of an action that is supported.
    ///<see cref="http://schema.org/PotentialActionStatus"/>
    ///</summary>
    public const string PotentialActionStatus = "http://schema.org/PotentialActionStatus";

    ///<summary>
    ///Indicates that the item is available for pre-order, but will be delivered when generally available.
    ///<see cref="http://schema.org/PreOrder"/>
    ///</summary>
    public const string PreOrder = "http://schema.org/PreOrder";

    ///<summary>
    ///Indicates that the item is available for ordering and delivery before general availability.
    ///<see cref="http://schema.org/PreSale"/>
    ///</summary>
    public const string PreSale = "http://schema.org/PreSale";

    ///<summary>
    ///Available by prescription only.
    ///<see cref="http://schema.org/PrescriptionOnly"/>
    ///</summary>
    public const string PrescriptionOnly = "http://schema.org/PrescriptionOnly";

    ///<summary>
    ///The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.
    ///<see cref="http://schema.org/PrimaryCare"/>
    ///</summary>
    public const string PrimaryCare = "http://schema.org/PrimaryCare";

    ///<summary>
    ///A prion is an infectious agent composed of protein in a misfolded form.
    ///<see cref="http://schema.org/Prion"/>
    ///</summary>
    public const string Prion = "http://schema.org/Prion";

    ///<summary>
    ///ProductReturnFiniteReturnWindow: there is a finite window for product returns.
    ///<see cref="http://schema.org/ProductReturnFiniteReturnWindow"/>
    ///</summary>
    public const string ProductReturnFiniteReturnWindow = "http://schema.org/ProductReturnFiniteReturnWindow";

    ///<summary>
    ///ProductReturnNotPermitted: product returns are not permitted.
    ///<see cref="http://schema.org/ProductReturnNotPermitted"/>
    ///</summary>
    public const string ProductReturnNotPermitted = "http://schema.org/ProductReturnNotPermitted";

    ///<summary>
    ///ProductReturnUnlimitedWindow: there is an unlimited window for product returns.
    ///<see cref="http://schema.org/ProductReturnUnlimitedWindow"/>
    ///</summary>
    public const string ProductReturnUnlimitedWindow = "http://schema.org/ProductReturnUnlimitedWindow";

    ///<summary>
    ///ProductReturnUnspecified: a product return policy is not specified here.
    ///<see cref="http://schema.org/ProductReturnUnspecified"/>
    ///</summary>
    public const string ProductReturnUnspecified = "http://schema.org/ProductReturnUnspecified";

    ///<summary>
    ///Single-celled organism that causes an infection.
    ///<see cref="http://schema.org/Protozoa"/>
    ///</summary>
    public const string Protozoa = "http://schema.org/Protozoa";

    ///<summary>
    ///A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.
    ///<see cref="http://schema.org/Psychiatric"/>
    ///</summary>
    public const string Psychiatric = "http://schema.org/Psychiatric";

    ///<summary>
    ///Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.
    ///<see cref="http://schema.org/PublicHealth"/>
    ///</summary>
    public const string PublicHealth = "http://schema.org/PublicHealth";

    ///<summary>
    ///This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a "day of the week", it can be used with <a class="localLink" href="http://schema.org/OpeningHoursSpecification">OpeningHoursSpecification</a>. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.
    ///<see cref="http://schema.org/PublicHolidays"/>
    ///</summary>
    public const string PublicHolidays = "http://schema.org/PublicHolidays";

    ///<summary>
    ///A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.
    ///<see cref="http://schema.org/Pulmonary"/>
    ///</summary>
    public const string Pulmonary = "http://schema.org/Pulmonary";

    ///<summary>
    ///Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.
    ///<see cref="http://schema.org/Radiography"/>
    ///</summary>
    public const string Radiography = "http://schema.org/Radiography";

    ///<summary>
    ///A randomized trial design.
    ///<see cref="http://schema.org/RandomizedTrial"/>
    ///</summary>
    public const string RandomizedTrial = "http://schema.org/RandomizedTrial";

    ///<summary>
    ///Permission to read or view the document.
    ///<see cref="http://schema.org/ReadPermission"/>
    ///</summary>
    public const string ReadPermission = "http://schema.org/ReadPermission";

    ///<summary>
    ///Real-wheel drive is a transmission layout where the engine drives the rear wheels.
    ///<see cref="http://schema.org/RearWheelDriveConfiguration"/>
    ///</summary>
    public const string RearWheelDriveConfiguration = "http://schema.org/RearWheelDriveConfiguration";

    ///<summary>
    ///Recruiting participants.
    ///<see cref="http://schema.org/Recruiting"/>
    ///</summary>
    public const string Recruiting = "http://schema.org/Recruiting";

    ///<summary>
    ///Indicates that the item is refurbished.
    ///<see cref="http://schema.org/RefurbishedCondition"/>
    ///</summary>
    public const string RefurbishedCondition = "http://schema.org/RefurbishedCondition";

    ///<summary>
    ///A registry-based study design.
    ///<see cref="http://schema.org/Registry"/>
    ///</summary>
    public const string Registry = "http://schema.org/Registry";

    ///<summary>
    ///The drug's cost represents the maximum reimbursement paid by an insurer for the drug.
    ///<see cref="http://schema.org/ReimbursementCap"/>
    ///</summary>
    public const string ReimbursementCap = "http://schema.org/ReimbursementCap";

    ///<summary>
    ///RemixAlbum.
    ///<see cref="http://schema.org/RemixAlbum"/>
    ///</summary>
    public const string RemixAlbum = "http://schema.org/RemixAlbum";

    ///<summary>
    ///A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.
    ///<see cref="http://schema.org/Renal"/>
    ///</summary>
    public const string Renal = "http://schema.org/Renal";

    ///<summary>
    ///Indicates the usage of the vehicle as a rental car.
    ///<see cref="http://schema.org/RentalVehicleUsage"/>
    ///</summary>
    public const string RentalVehicleUsage = "http://schema.org/RentalVehicleUsage";

    ///<summary>
    ///Researchers.
    ///<see cref="http://schema.org/Researcher"/>
    ///</summary>
    public const string Researcher = "http://schema.org/Researcher";

    ///<summary>
    ///The status for a previously confirmed reservation that is now cancelled.
    ///<see cref="http://schema.org/ReservationCancelled"/>
    ///</summary>
    public const string ReservationCancelled = "http://schema.org/ReservationCancelled";

    ///<summary>
    ///The status of a confirmed reservation.
    ///<see cref="http://schema.org/ReservationConfirmed"/>
    ///</summary>
    public const string ReservationConfirmed = "http://schema.org/ReservationConfirmed";

    ///<summary>
    ///The status of a reservation on hold pending an update like credit card number or flight changes.
    ///<see cref="http://schema.org/ReservationHold"/>
    ///</summary>
    public const string ReservationHold = "http://schema.org/ReservationHold";

    ///<summary>
    ///The status of a reservation when a request has been sent, but not confirmed.
    ///<see cref="http://schema.org/ReservationPending"/>
    ///</summary>
    public const string ReservationPending = "http://schema.org/ReservationPending";

    ///<summary>
    ///The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).
    ///<see cref="http://schema.org/RespiratoryTherapy"/>
    ///</summary>
    public const string RespiratoryTherapy = "http://schema.org/RespiratoryTherapy";

    ///<summary>
    ///RestockingFees ...
    ///<see cref="http://schema.org/RestockingFees"/>
    ///</summary>
    public const string RestockingFees = "http://schema.org/RestockingFees";

    ///<summary>
    ///Results are available.
    ///<see cref="http://schema.org/ResultsAvailable"/>
    ///</summary>
    public const string ResultsAvailable = "http://schema.org/ResultsAvailable";

    ///<summary>
    ///Results are not available.
    ///<see cref="http://schema.org/ResultsNotAvailable"/>
    ///</summary>
    public const string ResultsNotAvailable = "http://schema.org/ResultsNotAvailable";

    ///<summary>
    ///The drug's cost represents the retail cost of the drug.
    ///<see cref="http://schema.org/Retail"/>
    ///</summary>
    public const string Retail = "http://schema.org/Retail";

    ///<summary>
    ///ReturnShippingFees ...
    ///<see cref="http://schema.org/ReturnShippingFees"/>
    ///</summary>
    public const string ReturnShippingFees = "http://schema.org/ReturnShippingFees";

    ///<summary>
    ///A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.
    ///<see cref="http://schema.org/Rheumatologic"/>
    ///</summary>
    public const string Rheumatologic = "http://schema.org/Rheumatologic";

    ///<summary>
    ///The steering position is on the right side of the vehicle (viewed from the main direction of driving).
    ///<see cref="http://schema.org/RightHandDriving"/>
    ///</summary>
    public const string RightHandDriving = "http://schema.org/RightHandDriving";

    ///<summary>
    ///The invitee may or may not attend.
    ///<see cref="http://schema.org/RsvpResponseMaybe"/>
    ///</summary>
    public const string RsvpResponseMaybe = "http://schema.org/RsvpResponseMaybe";

    ///<summary>
    ///The invitee will not attend.
    ///<see cref="http://schema.org/RsvpResponseNo"/>
    ///</summary>
    public const string RsvpResponseNo = "http://schema.org/RsvpResponseNo";

    ///<summary>
    ///The invitee will attend.
    ///<see cref="http://schema.org/RsvpResponseYes"/>
    ///</summary>
    public const string RsvpResponseYes = "http://schema.org/RsvpResponseYes";

    ///<summary>
    ///The day of the week between Friday and Sunday.
    ///<see cref="http://schema.org/Saturday"/>
    ///</summary>
    public const string Saturday = "http://schema.org/Saturday";

    ///<summary>
    ///A seating map.
    ///<see cref="http://schema.org/SeatingMap"/>
    ///</summary>
    public const string SeatingMap = "http://schema.org/SeatingMap";

    ///<summary>
    ///A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.
    ///<see cref="http://schema.org/SingleBlindedTrial"/>
    ///</summary>
    public const string SingleBlindedTrial = "http://schema.org/SingleBlindedTrial";

    ///<summary>
    ///A trial that takes place at a single center.
    ///<see cref="http://schema.org/SingleCenterTrial"/>
    ///</summary>
    public const string SingleCenterTrial = "http://schema.org/SingleCenterTrial";

    ///<summary>
    ///Play mode: SinglePlayer. Which is played by a lone player.
    ///<see cref="http://schema.org/SinglePlayer"/>
    ///</summary>
    public const string SinglePlayer = "http://schema.org/SinglePlayer";

    ///<summary>
    ///SingleRelease.
    ///<see cref="http://schema.org/SingleRelease"/>
    ///</summary>
    public const string SingleRelease = "http://schema.org/SingleRelease";

    ///<summary>
    ///Skin assessment with clinical examination.
    ///<see cref="http://schema.org/Skin"/>
    ///</summary>
    public const string Skin = "http://schema.org/Skin";

    ///<summary>
    ///Indicates that the item has sold out.
    ///<see cref="http://schema.org/SoldOut"/>
    ///</summary>
    public const string SoldOut = "http://schema.org/SoldOut";

    ///<summary>
    ///SoundtrackAlbum.
    ///<see cref="http://schema.org/SoundtrackAlbum"/>
    ///</summary>
    public const string SoundtrackAlbum = "http://schema.org/SoundtrackAlbum";

    ///<summary>
    ///The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.
    ///<see cref="http://schema.org/SpeechPathology"/>
    ///</summary>
    public const string SpeechPathology = "http://schema.org/SpeechPathology";

    ///<summary>
    ///SpokenWordAlbum.
    ///<see cref="http://schema.org/SpokenWordAlbum"/>
    ///</summary>
    public const string SpokenWordAlbum = "http://schema.org/SpokenWordAlbum";

    ///<summary>
    ///A StoreCreditRefund ...
    ///<see cref="http://schema.org/StoreCreditRefund"/>
    ///</summary>
    public const string StoreCreditRefund = "http://schema.org/StoreCreditRefund";

    ///<summary>
    ///Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.
    ///<see cref="http://schema.org/StrengthTraining"/>
    ///</summary>
    public const string StrengthTraining = "http://schema.org/StrengthTraining";

    ///<summary>
    ///StudioAlbum.
    ///<see cref="http://schema.org/StudioAlbum"/>
    ///</summary>
    public const string StudioAlbum = "http://schema.org/StudioAlbum";

    ///<summary>
    ///The day of the week between Saturday and Monday.
    ///<see cref="http://schema.org/Sunday"/>
    ///</summary>
    public const string Sunday = "http://schema.org/Sunday";

    ///<summary>
    ///A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.
    ///<see cref="http://schema.org/Surgical"/>
    ///</summary>
    public const string Surgical = "http://schema.org/Surgical";

    ///<summary>
    ///Suspended.
    ///<see cref="http://schema.org/Suspended"/>
    ///</summary>
    public const string Suspended = "http://schema.org/Suspended";

    ///<summary>
    ///Indicates the usage of the car as a taxi.
    ///<see cref="http://schema.org/TaxiVehicleUsage"/>
    ///</summary>
    public const string TaxiVehicleUsage = "http://schema.org/TaxiVehicleUsage";

    ///<summary>
    ///Terminated.
    ///<see cref="http://schema.org/Terminated"/>
    ///</summary>
    public const string Terminated = "http://schema.org/Terminated";

    ///<summary>
    ///A medical device used for therapeutic purposes.
    ///<see cref="http://schema.org/Therapeutic"/>
    ///</summary>
    public const string Therapeutic = "http://schema.org/Therapeutic";

    ///<summary>
    ///Throat assessment with  clinical examination.
    ///<see cref="http://schema.org/Throat"/>
    ///</summary>
    public const string Throat = "http://schema.org/Throat";

    ///<summary>
    ///The day of the week between Wednesday and Friday.
    ///<see cref="http://schema.org/Thursday"/>
    ///</summary>
    public const string Thursday = "http://schema.org/Thursday";

    ///<summary>
    ///The associated telephone number is toll free.
    ///<see cref="http://schema.org/TollFree"/>
    ///</summary>
    public const string TollFree = "http://schema.org/TollFree";

    ///<summary>
    ///A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.
    ///<see cref="http://schema.org/Toxicologic"/>
    ///</summary>
    public const string Toxicologic = "http://schema.org/Toxicologic";

    ///<summary>
    ///A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.
    ///<see cref="http://schema.org/TraditionalChinese"/>
    ///</summary>
    public const string TraditionalChinese = "http://schema.org/TraditionalChinese";

    ///<summary>
    ///A transit map.
    ///<see cref="http://schema.org/TransitMap"/>
    ///</summary>
    public const string TransitMap = "http://schema.org/TransitMap";

    ///<summary>
    ///A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.
    ///<see cref="http://schema.org/TripleBlindedTrial"/>
    ///</summary>
    public const string TripleBlindedTrial = "http://schema.org/TripleBlindedTrial";

    ///<summary>
    ///The boolean value true.
    ///<see cref="http://schema.org/True"/>
    ///</summary>
    public const string True = "http://schema.org/True";

    ///<summary>
    ///The day of the week between Monday and Wednesday.
    ///<see cref="http://schema.org/Tuesday"/>
    ///</summary>
    public const string Tuesday = "http://schema.org/Tuesday";

    ///<summary>
    ///Ultrasound imaging.
    ///<see cref="http://schema.org/Ultrasound"/>
    ///</summary>
    public const string Ultrasound = "http://schema.org/Ultrasound";

    ///<summary>
    ///Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).
    ///<see cref="http://schema.org/UnofficialLegalValue"/>
    ///</summary>
    public const string UnofficialLegalValue = "http://schema.org/UnofficialLegalValue";

    ///<summary>
    ///A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.
    ///<see cref="http://schema.org/Urologic"/>
    ///</summary>
    public const string Urologic = "http://schema.org/Urologic";

    ///<summary>
    ///Indicates that the item is used.
    ///<see cref="http://schema.org/UsedCondition"/>
    ///</summary>
    public const string UsedCondition = "http://schema.org/UsedCondition";

    ///<summary>
    ///A diet exclusive of all animal products.
    ///<see cref="http://schema.org/VeganDiet"/>
    ///</summary>
    public const string VeganDiet = "http://schema.org/VeganDiet";

    ///<summary>
    ///A diet exclusive of animal meat.
    ///<see cref="http://schema.org/VegetarianDiet"/>
    ///</summary>
    public const string VegetarianDiet = "http://schema.org/VegetarianDiet";

    ///<summary>
    ///A venue map (e.g. for malls, auditoriums, museums, etc.).
    ///<see cref="http://schema.org/VenueMap"/>
    ///</summary>
    public const string VenueMap = "http://schema.org/VenueMap";

    ///<summary>
    ///VinylFormat.
    ///<see cref="http://schema.org/VinylFormat"/>
    ///</summary>
    public const string VinylFormat = "http://schema.org/VinylFormat";

    ///<summary>
    ///Pathogenic virus that causes viral infection.
    ///<see cref="http://schema.org/Virus"/>
    ///</summary>
    public const string Virus = "http://schema.org/Virus";

    ///<summary>
    ///The day of the week between Tuesday and Thursday.
    ///<see cref="http://schema.org/Wednesday"/>
    ///</summary>
    public const string Wednesday = "http://schema.org/Wednesday";

    ///<summary>
    ///The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.
    ///<see cref="http://schema.org/WesternConventional"/>
    ///</summary>
    public const string WesternConventional = "http://schema.org/WesternConventional";

    ///<summary>
    ///The drug's cost represents the wholesale acquisition cost of the drug.
    ///<see cref="http://schema.org/Wholesale"/>
    ///</summary>
    public const string Wholesale = "http://schema.org/Wholesale";

    ///<summary>
    ///Withdrawn.
    ///<see cref="http://schema.org/Withdrawn"/>
    ///</summary>
    public const string Withdrawn = "http://schema.org/Withdrawn";

    ///<summary>
    ///Permission to write or edit the document.
    ///<see cref="http://schema.org/WritePermission"/>
    ///</summary>
    public const string WritePermission = "http://schema.org/WritePermission";

    ///<summary>
    ///X-ray imaging.
    ///<see cref="http://schema.org/XRay"/>
    ///</summary>
    public const string XRay = "http://schema.org/XRay";

    ///<summary>
    ///The airline boards by zones of the plane.
    ///<see cref="http://schema.org/ZoneBoardingPolicy"/>
    ///</summary>
    public const string ZoneBoardingPolicy = "http://schema.org/ZoneBoardingPolicy";

    ///<summary>
    ///Indicates whether the book is an abridged edition.
    ///<see cref="http://schema.org/abridged"/>
    ///</summary>
    public const string abridged = "http://schema.org/abridged";

    ///<summary>
    ///The time needed to accelerate the vehicle from a given start velocity to a given target velocity.<br/><br/>
    ///
    ///Typical unit code(s): SEC for seconds<br/><br/>
    ///
    ///<ul>
    ///<li>Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a>, or use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> with a <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> of 0..60 mph or 0..100 km/h to specify the reference speeds.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/accelerationTime"/>
    ///</summary>
    public const string accelerationTime = "http://schema.org/accelerationTime";

    ///<summary>
    ///The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.
    ///<see cref="http://schema.org/acceptedAnswer"/>
    ///</summary>
    public const string acceptedAnswer = "http://schema.org/acceptedAnswer";

    ///<summary>
    ///The offer(s) -- e.g., product, quantity and price combinations -- included in the order.
    ///<see cref="http://schema.org/acceptedOffer"/>
    ///</summary>
    public const string acceptedOffer = "http://schema.org/acceptedOffer";

    ///<summary>
    ///The payment method(s) accepted by seller for this offer.
    ///<see cref="http://schema.org/acceptedPaymentMethod"/>
    ///</summary>
    public const string acceptedPaymentMethod = "http://schema.org/acceptedPaymentMethod";

    ///<summary>
    ///Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings <code>Yes</code> or <code>No</code>.
    ///<see cref="http://schema.org/acceptsReservations"/>
    ///</summary>
    public const string acceptsReservations = "http://schema.org/acceptsReservations";

    ///<summary>
    ///Password, PIN, or access code needed for delivery (e.g. from a locker).
    ///<see cref="http://schema.org/accessCode"/>
    ///</summary>
    public const string accessCode = "http://schema.org/accessCode";

    ///<summary>
    ///The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.
    ///<see cref="http://schema.org/accessMode"/>
    ///</summary>
    public const string accessMode = "http://schema.org/accessMode";

    ///<summary>
    ///A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.
    ///<see cref="http://schema.org/accessModeSufficient"/>
    ///</summary>
    public const string accessModeSufficient = "http://schema.org/accessModeSufficient";

    ///<summary>
    ///Indicates that the resource is compatible with the referenced accessibility API (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityAPI"/>
    ///</summary>
    public const string accessibilityAPI = "http://schema.org/accessibilityAPI";

    ///<summary>
    ///Identifies input methods that are sufficient to fully control the described resource (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityControl"/>
    ///</summary>
    public const string accessibilityControl = "http://schema.org/accessibilityControl";

    ///<summary>
    ///Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityFeature"/>
    ///</summary>
    public const string accessibilityFeature = "http://schema.org/accessibilityFeature";

    ///<summary>
    ///A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas wiki lists possible values</a>).
    ///<see cref="http://schema.org/accessibilityHazard"/>
    ///</summary>
    public const string accessibilityHazard = "http://schema.org/accessibilityHazard";

    ///<summary>
    ///A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."
    ///<see cref="http://schema.org/accessibilitySummary"/>
    ///</summary>
    public const string accessibilitySummary = "http://schema.org/accessibilitySummary";

    ///<summary>
    ///The identifier for the account the payment will be applied to.
    ///<see cref="http://schema.org/accountId"/>
    ///</summary>
    public const string accountId = "http://schema.org/accountId";

    ///<summary>
    ///A minimum amount that has to be paid in every month.
    ///<see cref="http://schema.org/accountMinimumInflow"/>
    ///</summary>
    public const string accountMinimumInflow = "http://schema.org/accountMinimumInflow";

    ///<summary>
    ///An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.
    ///<see cref="http://schema.org/accountOverdraftLimit"/>
    ///</summary>
    public const string accountOverdraftLimit = "http://schema.org/accountOverdraftLimit";

    ///<summary>
    ///Specifies the Person that is legally accountable for the CreativeWork.
    ///<see cref="http://schema.org/accountablePerson"/>
    ///</summary>
    public const string accountablePerson = "http://schema.org/accountablePerson";

    ///<summary>
    ///The organization or person from which the product was acquired.
    ///<see cref="http://schema.org/acquiredFrom"/>
    ///</summary>
    public const string acquiredFrom = "http://schema.org/acquiredFrom";

    ///<summary>
    ///The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.
    ///<see cref="http://schema.org/acrissCode"/>
    ///</summary>
    public const string acrissCode = "http://schema.org/acrissCode";

    ///<summary>
    ///Obsolete term for <a class="localLink" href="http://schema.org/muscleAction">muscleAction</a>. Not to be confused with <a class="localLink" href="http://schema.org/potentialAction">potentialAction</a>.
    ///<see cref="http://schema.org/action"/>
    ///</summary>
    public const string action = "http://schema.org/action";

    ///<summary>
    ///A set of requirements that a must be fulfilled in order to perform an Action. If more than one value is specied, fulfilling one set of requirements will allow the Action to be performed.
    ///<see cref="http://schema.org/actionAccessibilityRequirement"/>
    ///</summary>
    public const string actionAccessibilityRequirement = "http://schema.org/actionAccessibilityRequirement";

    ///<summary>
    ///The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.
    ///<see cref="http://schema.org/actionPlatform"/>
    ///</summary>
    public const string actionPlatform = "http://schema.org/actionPlatform";

    ///<summary>
    ///Indicates the current disposition of the Action.
    ///<see cref="http://schema.org/actionStatus"/>
    ///</summary>
    public const string actionStatus = "http://schema.org/actionStatus";

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other news-related <a class="localLink" href="http://schema.org/Organization">Organization</a>, a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.
    ///<see cref="http://schema.org/actionableFeedbackPolicy"/>
    ///</summary>
    public const string actionableFeedbackPolicy = "http://schema.org/actionableFeedbackPolicy";

    ///<summary>
    ///An active ingredient, typically chemical compounds and/or biologic substances.
    ///<see cref="http://schema.org/activeIngredient"/>
    ///</summary>
    public const string activeIngredient = "http://schema.org/activeIngredient";

    ///<summary>
    ///Length of time to engage in the activity.
    ///<see cref="http://schema.org/activityDuration"/>
    ///</summary>
    public const string activityDuration = "http://schema.org/activityDuration";

    ///<summary>
    ///How often one should engage in the activity.
    ///<see cref="http://schema.org/activityFrequency"/>
    ///</summary>
    public const string activityFrequency = "http://schema.org/activityFrequency";

    ///<summary>
    ///An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/actors"/>
    ///</summary>
    public const string actors = "http://schema.org/actors";

    ///<summary>
    ///An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).
    ///<see cref="http://schema.org/addOn"/>
    ///</summary>
    public const string addOn = "http://schema.org/addOn";

    ///<summary>
    ///An additional name for a Person, can be used for a middle name.
    ///<see cref="http://schema.org/additionalName"/>
    ///</summary>
    public const string additionalName = "http://schema.org/additionalName";

    ///<summary>
    ///If responding yes, the number of guests who will attend in addition to the invitee.
    ///<see cref="http://schema.org/additionalNumberOfGuests"/>
    ///</summary>
    public const string additionalNumberOfGuests = "http://schema.org/additionalNumberOfGuests";

    ///<summary>
    ///A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>
    ///
    ///Note: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
    ///<see cref="http://schema.org/additionalProperty"/>
    ///</summary>
    public const string additionalProperty = "http://schema.org/additionalProperty";

    ///<summary>
    ///An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
    ///<see cref="http://schema.org/additionalType"/>
    ///</summary>
    public const string additionalType = "http://schema.org/additionalType";

    ///<summary>
    ///Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.
    ///<see cref="http://schema.org/additionalVariable"/>
    ///</summary>
    public const string additionalVariable = "http://schema.org/additionalVariable";

    ///<summary>
    ///Physical address of the item.
    ///<see cref="http://schema.org/address"/>
    ///</summary>
    public const string address = "http://schema.org/address";

    ///<summary>
    ///The country. For example, USA. You can also provide the two-letter <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2 country code</a>.
    ///<see cref="http://schema.org/addressCountry"/>
    ///</summary>
    public const string addressCountry = "http://schema.org/addressCountry";

    ///<summary>
    ///The locality in which the street address is, and which is in the region. For example, Mountain View.
    ///<see cref="http://schema.org/addressLocality"/>
    ///</summary>
    public const string addressLocality = "http://schema.org/addressLocality";

    ///<summary>
    ///The region in which the locality is, and which is in the country. For example, California or another appropriate first-level <a href="https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country">Administrative division</a>
    ///<see cref="http://schema.org/addressRegion"/>
    ///</summary>
    public const string addressRegion = "http://schema.org/addressRegion";

    ///<summary>
    ///A route by which this drug may be administered, e.g. 'oral'.
    ///<see cref="http://schema.org/administrationRoute"/>
    ///</summary>
    public const string administrationRoute = "http://schema.org/administrationRoute";

    ///<summary>
    ///The amount of time that is required between accepting the offer and the actual usage of the resource or service.
    ///<see cref="http://schema.org/advanceBookingRequirement"/>
    ///</summary>
    public const string advanceBookingRequirement = "http://schema.org/advanceBookingRequirement";

    ///<summary>
    ///A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or is otherwise life-threatening or requires immediate medical attention), tag it as a seriouseAdverseOutcome instead.
    ///<see cref="http://schema.org/adverseOutcome"/>
    ///</summary>
    public const string adverseOutcome = "http://schema.org/adverseOutcome";

    ///<summary>
    ///Drugs that affect the test's results.
    ///<see cref="http://schema.org/affectedBy"/>
    ///</summary>
    public const string affectedBy = "http://schema.org/affectedBy";

    ///<summary>
    ///An organization that this person is affiliated with. For example, a school/university, a club, or a team.
    ///<see cref="http://schema.org/affiliation"/>
    ///</summary>
    public const string affiliation = "http://schema.org/affiliation";

    ///<summary>
    ///A media object representing the circumstances after performing this direction.
    ///<see cref="http://schema.org/afterMedia"/>
    ///</summary>
    public const string afterMedia = "http://schema.org/afterMedia";

    ///<summary>
    ///The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.
    ///<see cref="http://schema.org/agent"/>
    ///</summary>
    public const string agent = "http://schema.org/agent";

    ///<summary>
    ///The overall rating, based on a collection of reviews or ratings, of the item.
    ///<see cref="http://schema.org/aggregateRating"/>
    ///</summary>
    public const string aggregateRating = "http://schema.org/aggregateRating";

    ///<summary>
    ///The kind of aircraft (e.g., "Boeing 747").
    ///<see cref="http://schema.org/aircraft"/>
    ///</summary>
    public const string aircraft = "http://schema.org/aircraft";

    ///<summary>
    ///Classification of the album by it's type of content: soundtrack, live album, studio album, etc.
    ///<see cref="http://schema.org/albumProductionType"/>
    ///</summary>
    public const string albumProductionType = "http://schema.org/albumProductionType";

    ///<summary>
    ///The kind of release which this album is: single, EP or album.
    ///<see cref="http://schema.org/albumReleaseType"/>
    ///</summary>
    public const string albumReleaseType = "http://schema.org/albumReleaseType";

    ///<summary>
    ///A collection of music albums.
    ///<see cref="http://schema.org/albums"/>
    ///</summary>
    public const string albums = "http://schema.org/albums";

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.
    ///<see cref="http://schema.org/alcoholWarning"/>
    ///</summary>
    public const string alcoholWarning = "http://schema.org/alcoholWarning";

    ///<summary>
    ///The algorithm or rules to follow to compute the score.
    ///<see cref="http://schema.org/algorithm"/>
    ///</summary>
    public const string algorithm = "http://schema.org/algorithm";

    ///<summary>
    ///A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.
    ///<see cref="http://schema.org/alignmentType"/>
    ///</summary>
    public const string alignmentType = "http://schema.org/alignmentType";

    ///<summary>
    ///An alias for the item.
    ///<see cref="http://schema.org/alternateName"/>
    ///</summary>
    public const string alternateName = "http://schema.org/alternateName";

    ///<summary>
    ///A secondary title of the CreativeWork.
    ///<see cref="http://schema.org/alternativeHeadline"/>
    ///</summary>
    public const string alternativeHeadline = "http://schema.org/alternativeHeadline";

    ///<summary>
    ///An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
    ///<see cref="http://schema.org/amenityFeature"/>
    ///</summary>
    public const string amenityFeature = "http://schema.org/amenityFeature";

    ///<summary>
    ///The amount of money.
    ///<see cref="http://schema.org/amount"/>
    ///</summary>
    public const string amount = "http://schema.org/amount";

    ///<summary>
    ///The quantity of the goods included in the offer.
    ///<see cref="http://schema.org/amountOfThisGood"/>
    ///</summary>
    public const string amountOfThisGood = "http://schema.org/amountOfThisGood";

    ///<summary>
    ///The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.
    ///<see cref="http://schema.org/annualPercentageRate"/>
    ///</summary>
    public const string annualPercentageRate = "http://schema.org/annualPercentageRate";

    ///<summary>
    ///The number of answers this question has received.
    ///<see cref="http://schema.org/answerCount"/>
    ///</summary>
    public const string answerCount = "http://schema.org/answerCount";

    ///<summary>
    ///The muscle whose action counteracts the specified muscle.
    ///<see cref="http://schema.org/antagonist"/>
    ///</summary>
    public const string antagonist = "http://schema.org/antagonist";

    ///<summary>
    ///Indicates an occurence of a <a class="localLink" href="http://schema.org/Claim">Claim</a> in some <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/appearance"/>
    ///</summary>
    public const string appearance = "http://schema.org/appearance";

    ///<summary>
    ///The location in which the status applies.
    ///<see cref="http://schema.org/applicableLocation"/>
    ///</summary>
    public const string applicableLocation = "http://schema.org/applicableLocation";

    ///<summary>
    ///The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.
    ///<see cref="http://schema.org/applicantLocationRequirements"/>
    ///</summary>
    public const string applicantLocationRequirements = "http://schema.org/applicantLocationRequirements";

    ///<summary>
    ///An application that can complete the request.
    ///<see cref="http://schema.org/application"/>
    ///</summary>
    public const string application = "http://schema.org/application";

    ///<summary>
    ///Type of software application, e.g. 'Game, Multimedia'.
    ///<see cref="http://schema.org/applicationCategory"/>
    ///</summary>
    public const string applicationCategory = "http://schema.org/applicationCategory";

    ///<summary>
    ///Subcategory of the application, e.g. 'Arcade Game'.
    ///<see cref="http://schema.org/applicationSubCategory"/>
    ///</summary>
    public const string applicationSubCategory = "http://schema.org/applicationSubCategory";

    ///<summary>
    ///The name of the application suite to which the application belongs (e.g. Excel belongs to Office).
    ///<see cref="http://schema.org/applicationSuite"/>
    ///</summary>
    public const string applicationSuite = "http://schema.org/applicationSuite";

    ///<summary>
    ///The delivery method(s) to which the delivery charge or payment charge specification applies.
    ///<see cref="http://schema.org/appliesToDeliveryMethod"/>
    ///</summary>
    public const string appliesToDeliveryMethod = "http://schema.org/appliesToDeliveryMethod";

    ///<summary>
    ///The payment method(s) to which the payment charge specification applies.
    ///<see cref="http://schema.org/appliesToPaymentMethod"/>
    ///</summary>
    public const string appliesToPaymentMethod = "http://schema.org/appliesToPaymentMethod";

    ///<summary>
    ///The area within which users can expect to reach the broadcast service.
    ///<see cref="http://schema.org/area"/>
    ///</summary>
    public const string area = "http://schema.org/area";

    ///<summary>
    ///The airport where the flight terminates.
    ///<see cref="http://schema.org/arrivalAirport"/>
    ///</summary>
    public const string arrivalAirport = "http://schema.org/arrivalAirport";

    ///<summary>
    ///The stop or station from which the bus arrives.
    ///<see cref="http://schema.org/arrivalBusStop"/>
    ///</summary>
    public const string arrivalBusStop = "http://schema.org/arrivalBusStop";

    ///<summary>
    ///Identifier of the flight's arrival gate.
    ///<see cref="http://schema.org/arrivalGate"/>
    ///</summary>
    public const string arrivalGate = "http://schema.org/arrivalGate";

    ///<summary>
    ///The platform where the train arrives.
    ///<see cref="http://schema.org/arrivalPlatform"/>
    ///</summary>
    public const string arrivalPlatform = "http://schema.org/arrivalPlatform";

    ///<summary>
    ///The station where the train trip ends.
    ///<see cref="http://schema.org/arrivalStation"/>
    ///</summary>
    public const string arrivalStation = "http://schema.org/arrivalStation";

    ///<summary>
    ///Identifier of the flight's arrival terminal.
    ///<see cref="http://schema.org/arrivalTerminal"/>
    ///</summary>
    public const string arrivalTerminal = "http://schema.org/arrivalTerminal";

    ///<summary>
    ///The expected arrival time.
    ///<see cref="http://schema.org/arrivalTime"/>
    ///</summary>
    public const string arrivalTime = "http://schema.org/arrivalTime";

    ///<summary>
    ///The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example "20").
    ///<see cref="http://schema.org/artEdition"/>
    ///</summary>
    public const string artEdition = "http://schema.org/artEdition";

    ///<summary>
    ///The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)
    ///<see cref="http://schema.org/artMedium"/>
    ///</summary>
    public const string artMedium = "http://schema.org/artMedium";

    ///<summary>
    ///e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.
    ///<see cref="http://schema.org/artform"/>
    ///</summary>
    public const string artform = "http://schema.org/artform";

    ///<summary>
    ///The actual body of the article.
    ///<see cref="http://schema.org/articleBody"/>
    ///</summary>
    public const string articleBody = "http://schema.org/articleBody";

    ///<summary>
    ///Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
    ///<see cref="http://schema.org/articleSection"/>
    ///</summary>
    public const string articleSection = "http://schema.org/articleSection";

    ///<summary>
    ///The primary artist for a work
    ///    in a medium other than pencils or digital line art--for example, if the
    ///    primary artwork is done in watercolors or digital paints.
    ///<see cref="http://schema.org/artist"/>
    ///</summary>
    public const string artist = "http://schema.org/artist";

    ///<summary>
    ///An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.
    ///<see cref="http://schema.org/aspect"/>
    ///</summary>
    public const string aspect = "http://schema.org/aspect";

    ///<summary>
    ///Library file name e.g., mscorlib.dll, system.web.dll.
    ///<see cref="http://schema.org/assembly"/>
    ///</summary>
    public const string assembly = "http://schema.org/assembly";

    ///<summary>
    ///Associated product/technology version. e.g., .NET Framework 4.5.
    ///<see cref="http://schema.org/assemblyVersion"/>
    ///</summary>
    public const string assemblyVersion = "http://schema.org/assemblyVersion";

    ///<summary>
    ///The anatomy of the underlying organ system or structures associated with this entity.
    ///<see cref="http://schema.org/associatedAnatomy"/>
    ///</summary>
    public const string associatedAnatomy = "http://schema.org/associatedAnatomy";

    ///<summary>
    ///A NewsArticle associated with the Media Object.
    ///<see cref="http://schema.org/associatedArticle"/>
    ///</summary>
    public const string associatedArticle = "http://schema.org/associatedArticle";

    ///<summary>
    ///A media object that encodes this CreativeWork. This property is a synonym for encoding.
    ///<see cref="http://schema.org/associatedMedia"/>
    ///</summary>
    public const string associatedMedia = "http://schema.org/associatedMedia";

    ///<summary>
    ///If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.
    ///<see cref="http://schema.org/associatedPathophysiology"/>
    ///</summary>
    public const string associatedPathophysiology = "http://schema.org/associatedPathophysiology";

    ///<summary>
    ///A person that acts as performing member of a sports team; a player as opposed to a coach.
    ///<see cref="http://schema.org/athlete"/>
    ///</summary>
    public const string athlete = "http://schema.org/athlete";

    ///<summary>
    ///A person attending the event.
    ///<see cref="http://schema.org/attendees"/>
    ///</summary>
    public const string attendees = "http://schema.org/attendees";

    ///<summary>
    ///The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).
    ///<see cref="http://schema.org/audienceType"/>
    ///</summary>
    public const string audienceType = "http://schema.org/audienceType";

    ///<summary>
    ///An embedded audio object.
    ///<see cref="http://schema.org/audio"/>
    ///</summary>
    public const string audio = "http://schema.org/audio";

    ///<summary>
    ///The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.
    ///<see cref="http://schema.org/authenticator"/>
    ///</summary>
    public const string authenticator = "http://schema.org/authenticator";

    ///<summary>
    ///The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
    ///<see cref="http://schema.org/author"/>
    ///</summary>
    public const string author = "http://schema.org/author";

    ///<summary>
    ///The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.
    ///<see cref="http://schema.org/availability"/>
    ///</summary>
    public const string availability = "http://schema.org/availability";

    ///<summary>
    ///The end of the availability of the product or service included in the offer.
    ///<see cref="http://schema.org/availabilityEnds"/>
    ///</summary>
    public const string availabilityEnds = "http://schema.org/availabilityEnds";

    ///<summary>
    ///The beginning of the availability of the product or service included in the offer.
    ///<see cref="http://schema.org/availabilityStarts"/>
    ///</summary>
    public const string availabilityStarts = "http://schema.org/availabilityStarts";

    ///<summary>
    ///The place(s) from which the offer can be obtained (e.g. store locations).
    ///<see cref="http://schema.org/availableAtOrFrom"/>
    ///</summary>
    public const string availableAtOrFrom = "http://schema.org/availableAtOrFrom";

    ///<summary>
    ///A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).
    ///<see cref="http://schema.org/availableChannel"/>
    ///</summary>
    public const string availableChannel = "http://schema.org/availableChannel";

    ///<summary>
    ///The delivery method(s) available for this offer.
    ///<see cref="http://schema.org/availableDeliveryMethod"/>
    ///</summary>
    public const string availableDeliveryMethod = "http://schema.org/availableDeliveryMethod";

    ///<summary>
    ///When the item is available for pickup from the store, locker, etc.
    ///<see cref="http://schema.org/availableFrom"/>
    ///</summary>
    public const string availableFrom = "http://schema.org/availableFrom";

    ///<summary>
    ///The location in which the strength is available.
    ///<see cref="http://schema.org/availableIn"/>
    ///</summary>
    public const string availableIn = "http://schema.org/availableIn";

    ///<summary>
    ///A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/inLanguage">inLanguage</a>
    ///<see cref="http://schema.org/availableLanguage"/>
    ///</summary>
    public const string availableLanguage = "http://schema.org/availableLanguage";

    ///<summary>
    ///A medical service available from this provider.
    ///<see cref="http://schema.org/availableService"/>
    ///</summary>
    public const string availableService = "http://schema.org/availableService";

    ///<summary>
    ///An available dosage strength for the drug.
    ///<see cref="http://schema.org/availableStrength"/>
    ///</summary>
    public const string availableStrength = "http://schema.org/availableStrength";

    ///<summary>
    ///A diagnostic test or procedure offered by this lab.
    ///<see cref="http://schema.org/availableTest"/>
    ///</summary>
    public const string availableTest = "http://schema.org/availableTest";

    ///<summary>
    ///After this date, the item will no longer be available for pickup.
    ///<see cref="http://schema.org/availableThrough"/>
    ///</summary>
    public const string availableThrough = "http://schema.org/availableThrough";

    ///<summary>
    ///Awards won by or for this item.
    ///<see cref="http://schema.org/awards"/>
    ///</summary>
    public const string awards = "http://schema.org/awards";

    ///<summary>
    ///The away team in a sports event.
    ///<see cref="http://schema.org/awayTeam"/>
    ///</summary>
    public const string awayTeam = "http://schema.org/awayTeam";

    ///<summary>
    ///Descriptive information establishing a historical perspective on the supplement. May include the rationale for the name, the population where the supplement first came to prominence, etc.
    ///<see cref="http://schema.org/background"/>
    ///</summary>
    public const string background = "http://schema.org/background";

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Article">Article</a>, typically a <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>, the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.
    ///<see cref="http://schema.org/backstory"/>
    ///</summary>
    public const string backstory = "http://schema.org/backstory";

    ///<summary>
    ///The type of a bank account.
    ///<see cref="http://schema.org/bankAccountType"/>
    ///</summary>
    public const string bankAccountType = "http://schema.org/bankAccountType";

    ///<summary>
    ///The base salary of the job or of an employee in an EmployeeRole.
    ///<see cref="http://schema.org/baseSalary"/>
    ///</summary>
    public const string baseSalary = "http://schema.org/baseSalary";

    ///<summary>
    ///A sub property of recipient. The recipient blind copied on a message.
    ///<see cref="http://schema.org/bccRecipient"/>
    ///</summary>
    public const string bccRecipient = "http://schema.org/bccRecipient";

    ///<summary>
    ///The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.
    ///      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
    ///<see cref="http://schema.org/bed"/>
    ///</summary>
    public const string bed = "http://schema.org/bed";

    ///<summary>
    ///A media object representing the circumstances before performing this direction.
    ///<see cref="http://schema.org/beforeMedia"/>
    ///</summary>
    public const string beforeMedia = "http://schema.org/beforeMedia";

    ///<summary>
    ///A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary
    ///<see cref="http://schema.org/beneficiaryBank"/>
    ///</summary>
    public const string beneficiaryBank = "http://schema.org/beneficiaryBank";

    ///<summary>
    ///Description of benefits associated with the job.
    ///<see cref="http://schema.org/benefits"/>
    ///</summary>
    public const string benefits = "http://schema.org/benefits";

    ///<summary>
    ///The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.
    ///<see cref="http://schema.org/benefitsSummaryUrl"/>
    ///</summary>
    public const string benefitsSummaryUrl = "http://schema.org/benefitsSummaryUrl";

    ///<summary>
    ///The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.
    ///<see cref="http://schema.org/bestRating"/>
    ///</summary>
    public const string bestRating = "http://schema.org/bestRating";

    ///<summary>
    ///The billing address for the order.
    ///<see cref="http://schema.org/billingAddress"/>
    ///</summary>
    public const string billingAddress = "http://schema.org/billingAddress";

    ///<summary>
    ///This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.
    ///<see cref="http://schema.org/billingIncrement"/>
    ///</summary>
    public const string billingIncrement = "http://schema.org/billingIncrement";

    ///<summary>
    ///The time interval used to compute the invoice.
    ///<see cref="http://schema.org/billingPeriod"/>
    ///</summary>
    public const string billingPeriod = "http://schema.org/billingPeriod";

    ///<summary>
    ///The biomechanical properties of the bone.
    ///<see cref="http://schema.org/biomechnicalClass"/>
    ///</summary>
    public const string biomechnicalClass = "http://schema.org/biomechnicalClass";

    ///<summary>
    ///Date of birth.
    ///<see cref="http://schema.org/birthDate"/>
    ///</summary>
    public const string birthDate = "http://schema.org/birthDate";

    ///<summary>
    ///The place where the person was born.
    ///<see cref="http://schema.org/birthPlace"/>
    ///</summary>
    public const string birthPlace = "http://schema.org/birthPlace";

    ///<summary>
    ///The bitrate of the media object.
    ///<see cref="http://schema.org/bitrate"/>
    ///</summary>
    public const string bitrate = "http://schema.org/bitrate";

    ///<summary>
    ///The postings that are part of this blog.
    ///<see cref="http://schema.org/blogPosts"/>
    ///</summary>
    public const string blogPosts = "http://schema.org/blogPosts";

    ///<summary>
    ///The blood vessel that carries blood from the heart to the muscle.
    ///<see cref="http://schema.org/bloodSupply"/>
    ///</summary>
    public const string bloodSupply = "http://schema.org/bloodSupply";

    ///<summary>
    ///The airline-specific indicator of boarding order / preference.
    ///<see cref="http://schema.org/boardingGroup"/>
    ///</summary>
    public const string boardingGroup = "http://schema.org/boardingGroup";

    ///<summary>
    ///The type of boarding policy used by the airline (e.g. zone-based or group-based).
    ///<see cref="http://schema.org/boardingPolicy"/>
    ///</summary>
    public const string boardingPolicy = "http://schema.org/boardingPolicy";

    ///<summary>
    ///Location in the body of the anatomical structure.
    ///<see cref="http://schema.org/bodyLocation"/>
    ///</summary>
    public const string bodyLocation = "http://schema.org/bodyLocation";

    ///<summary>
    ///Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).
    ///<see cref="http://schema.org/bodyType"/>
    ///</summary>
    public const string bodyType = "http://schema.org/bodyType";

    ///<summary>
    ///The edition of the book.
    ///<see cref="http://schema.org/bookEdition"/>
    ///</summary>
    public const string bookEdition = "http://schema.org/bookEdition";

    ///<summary>
    ///The format of the book.
    ///<see cref="http://schema.org/bookFormat"/>
    ///</summary>
    public const string bookFormat = "http://schema.org/bookFormat";

    ///<summary>
    ///'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.
    ///<see cref="http://schema.org/bookingAgent"/>
    ///</summary>
    public const string bookingAgent = "http://schema.org/bookingAgent";

    ///<summary>
    ///The date and time the reservation was booked.
    ///<see cref="http://schema.org/bookingTime"/>
    ///</summary>
    public const string bookingTime = "http://schema.org/bookingTime";

    ///<summary>
    ///A sub property of participant. The person that borrows the object being lent.
    ///<see cref="http://schema.org/borrower"/>
    ///</summary>
    public const string borrower = "http://schema.org/borrower";

    ///<summary>
    ///A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.
    ///<see cref="http://schema.org/box"/>
    ///</summary>
    public const string box = "http://schema.org/box";

    ///<summary>
    ///The branches that delineate from the nerve bundle. Not to be confused with <a class="localLink" href="http://schema.org/branchOf">branchOf</a>.
    ///<see cref="http://schema.org/branch"/>
    ///</summary>
    public const string branch = "http://schema.org/branch";

    ///<summary>
    ///A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>
    ///
    ///For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
    ///<see cref="http://schema.org/branchCode"/>
    ///</summary>
    public const string branchCode = "http://schema.org/branchCode";

    ///<summary>
    ///The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical)<a class="localLink" href="http://schema.org/branch">branch</a>.
    ///<see cref="http://schema.org/branchOf"/>
    ///</summary>
    public const string branchOf = "http://schema.org/branchOf";

    ///<summary>
    ///The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.
    ///<see cref="http://schema.org/brand"/>
    ///</summary>
    public const string brand = "http://schema.org/brand";

    ///<summary>
    ///A set of links that can help a user understand and navigate a website hierarchy.
    ///<see cref="http://schema.org/breadcrumb"/>
    ///</summary>
    public const string breadcrumb = "http://schema.org/breadcrumb";

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.
    ///<see cref="http://schema.org/breastfeedingWarning"/>
    ///</summary>
    public const string breastfeedingWarning = "http://schema.org/breastfeedingWarning";

    ///<summary>
    ///The media network(s) whose content is broadcast on this station.
    ///<see cref="http://schema.org/broadcastAffiliateOf"/>
    ///</summary>
    public const string broadcastAffiliateOf = "http://schema.org/broadcastAffiliateOf";

    ///<summary>
    ///The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.
    ///<see cref="http://schema.org/broadcastChannelId"/>
    ///</summary>
    public const string broadcastChannelId = "http://schema.org/broadcastChannelId";

    ///<summary>
    ///The name displayed in the channel guide. For many US affiliates, it is the network name.
    ///<see cref="http://schema.org/broadcastDisplayName"/>
    ///</summary>
    public const string broadcastDisplayName = "http://schema.org/broadcastDisplayName";

    ///<summary>
    ///The frequency used for over-the-air broadcasts. Numeric values or simple ranges e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. "87 FM".
    ///<see cref="http://schema.org/broadcastFrequency"/>
    ///</summary>
    public const string broadcastFrequency = "http://schema.org/broadcastFrequency";

    ///<summary>
    ///The frequency in MHz for a particular broadcast.
    ///<see cref="http://schema.org/broadcastFrequencyValue"/>
    ///</summary>
    public const string broadcastFrequencyValue = "http://schema.org/broadcastFrequencyValue";

    ///<summary>
    ///The event being broadcast such as a sporting event or awards ceremony.
    ///<see cref="http://schema.org/broadcastOfEvent"/>
    ///</summary>
    public const string broadcastOfEvent = "http://schema.org/broadcastOfEvent";

    ///<summary>
    ///The type of service required to have access to the channel (e.g. Standard or Premium).
    ///<see cref="http://schema.org/broadcastServiceTier"/>
    ///</summary>
    public const string broadcastServiceTier = "http://schema.org/broadcastServiceTier";

    ///<summary>
    ///The modulation (e.g. FM, AM, etc) used by a particular broadcast service
    ///<see cref="http://schema.org/broadcastSignalModulation"/>
    ///</summary>
    public const string broadcastSignalModulation = "http://schema.org/broadcastSignalModulation";

    ///<summary>
    ///The subchannel used for the broadcast.
    ///<see cref="http://schema.org/broadcastSubChannel"/>
    ///</summary>
    public const string broadcastSubChannel = "http://schema.org/broadcastSubChannel";

    ///<summary>
    ///The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a> for which the service bases its broadcasts
    ///<see cref="http://schema.org/broadcastTimezone"/>
    ///</summary>
    public const string broadcastTimezone = "http://schema.org/broadcastTimezone";

    ///<summary>
    ///The organization owning or operating the broadcast service.
    ///<see cref="http://schema.org/broadcaster"/>
    ///</summary>
    public const string broadcaster = "http://schema.org/broadcaster";

    ///<summary>
    ///Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.
    ///<see cref="http://schema.org/browserRequirements"/>
    ///</summary>
    public const string browserRequirements = "http://schema.org/browserRequirements";

    ///<summary>
    ///The name of the bus (e.g. Bolt Express).
    ///<see cref="http://schema.org/busName"/>
    ///</summary>
    public const string busName = "http://schema.org/busName";

    ///<summary>
    ///The unique identifier for the bus.
    ///<see cref="http://schema.org/busNumber"/>
    ///</summary>
    public const string busNumber = "http://schema.org/busNumber";

    ///<summary>
    ///The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.
    ///<see cref="http://schema.org/businessFunction"/>
    ///</summary>
    public const string businessFunction = "http://schema.org/businessFunction";

    ///<summary>
    ///A sub property of participant. The participant/person/organization that bought the object.
    ///<see cref="http://schema.org/buyer"/>
    ///</summary>
    public const string buyer = "http://schema.org/buyer";

    ///<summary>
    ///The artist that performed this album or recording.
    ///<see cref="http://schema.org/byArtist"/>
    ///</summary>
    public const string byArtist = "http://schema.org/byArtist";

    ///<summary>
    ///Defines the day(s) of the week on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place
    ///<see cref="http://schema.org/byDay"/>
    ///</summary>
    public const string byDay = "http://schema.org/byDay";

    ///<summary>
    ///Defines the month(s) of the year on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place. Specified as an <a class="localLink" href="http://schema.org/Integer">Integer</a> between 1-12. January is 1.
    ///<see cref="http://schema.org/byMonth"/>
    ///</summary>
    public const string byMonth = "http://schema.org/byMonth";

    ///<summary>
    ///Defines the day(s) of the month on which a recurring <a class="localLink" href="http://schema.org/Event">Event</a> takes place. Specified as an <a class="localLink" href="http://schema.org/Integer">Integer</a> between 1-31.
    ///<see cref="http://schema.org/byMonthDay"/>
    ///</summary>
    public const string byMonthDay = "http://schema.org/byMonthDay";

    ///<summary>
    ///The official callsign for the radio broadcast.
    ///<see cref="http://schema.org/callSign"/>
    ///</summary>
    public const string callSign = "http://schema.org/callSign";

    ///<summary>
    ///The number of calories.
    ///<see cref="http://schema.org/calories"/>
    ///</summary>
    public const string calories = "http://schema.org/calories";

    ///<summary>
    ///A sub property of object. The candidate subject of this action.
    ///<see cref="http://schema.org/candidate"/>
    ///</summary>
    public const string candidate = "http://schema.org/candidate";

    ///<summary>
    ///The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a>.
    ///<see cref="http://schema.org/caption"/>
    ///</summary>
    public const string caption = "http://schema.org/caption";

    ///<summary>
    ///The number of grams of carbohydrates.
    ///<see cref="http://schema.org/carbohydrateContent"/>
    ///</summary>
    public const string carbohydrateContent = "http://schema.org/carbohydrateContent";

    ///<summary>
    ///The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.<br/><br/>
    ///
    ///Typical unit code(s): LTR for liters, FTQ for cubic foot/feet<br/><br/>
    ///
    ///Note: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/cargoVolume"/>
    ///</summary>
    public const string cargoVolume = "http://schema.org/cargoVolume";

    ///<summary>
    ///'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.
    ///<see cref="http://schema.org/carrier"/>
    ///</summary>
    public const string carrier = "http://schema.org/carrier";

    ///<summary>
    ///Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).
    ///<see cref="http://schema.org/carrierRequirements"/>
    ///</summary>
    public const string carrierRequirements = "http://schema.org/carrierRequirements";

    ///<summary>
    ///A cardholder benefit that pays the cardholder a small percentage of their net expenditures.
    ///<see cref="http://schema.org/cashBack"/>
    ///</summary>
    public const string cashBack = "http://schema.org/cashBack";

    ///<summary>
    ///A data catalog which contains this dataset.
    ///<see cref="http://schema.org/catalog"/>
    ///</summary>
    public const string catalog = "http://schema.org/catalog";

    ///<summary>
    ///The catalog number for the release.
    ///<see cref="http://schema.org/catalogNumber"/>
    ///</summary>
    public const string catalogNumber = "http://schema.org/catalogNumber";

    ///<summary>
    ///A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.
    ///<see cref="http://schema.org/category"/>
    ///</summary>
    public const string category = "http://schema.org/category";

    ///<summary>
    ///Specifying a cause of something in general. e.g in medicine , one of the causative agent(s) that are most directly responsible for the pathophysiologic process that eventually results in the occurrence.
    ///<see cref="http://schema.org/cause"/>
    ///</summary>
    public const string cause = "http://schema.org/cause";

    ///<summary>
    ///The condition, complication, symptom, sign, etc. caused.
    ///<see cref="http://schema.org/causeOf"/>
    ///</summary>
    public const string causeOf = "http://schema.org/causeOf";

    ///<summary>
    ///A sub property of recipient. The recipient copied on a message.
    ///<see cref="http://schema.org/ccRecipient"/>
    ///</summary>
    public const string ccRecipient = "http://schema.org/ccRecipient";

    ///<summary>
    ///Fictional person connected with a creative work.
    ///<see cref="http://schema.org/character"/>
    ///</summary>
    public const string character = "http://schema.org/character";

    ///<summary>
    ///A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).
    ///<see cref="http://schema.org/characterAttribute"/>
    ///</summary>
    public const string characterAttribute = "http://schema.org/characterAttribute";

    ///<summary>
    ///The name of a character played in some acting or performing role, i.e. in a PerformanceRole.
    ///<see cref="http://schema.org/characterName"/>
    ///</summary>
    public const string characterName = "http://schema.org/characterName";

    ///<summary>
    ///Cheat codes to the game.
    ///<see cref="http://schema.org/cheatCode"/>
    ///</summary>
    public const string cheatCode = "http://schema.org/cheatCode";

    ///<summary>
    ///The earliest someone may check into a lodging establishment.
    ///<see cref="http://schema.org/checkinTime"/>
    ///</summary>
    public const string checkinTime = "http://schema.org/checkinTime";

    ///<summary>
    ///The latest someone may check out of a lodging establishment.
    ///<see cref="http://schema.org/checkoutTime"/>
    ///</summary>
    public const string checkoutTime = "http://schema.org/checkoutTime";

    ///<summary>
    ///Maximal age of the child.
    ///<see cref="http://schema.org/childMaxAge"/>
    ///</summary>
    public const string childMaxAge = "http://schema.org/childMaxAge";

    ///<summary>
    ///Minimal age of the child.
    ///<see cref="http://schema.org/childMinAge"/>
    ///</summary>
    public const string childMinAge = "http://schema.org/childMinAge";

    ///<summary>
    ///A child of the person.
    ///<see cref="http://schema.org/children"/>
    ///</summary>
    public const string children = "http://schema.org/children";

    ///<summary>
    ///The number of milligrams of cholesterol.
    ///<see cref="http://schema.org/cholesterolContent"/>
    ///</summary>
    public const string cholesterolContent = "http://schema.org/cholesterolContent";

    ///<summary>
    ///A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.
    ///<see cref="http://schema.org/circle"/>
    ///</summary>
    public const string circle = "http://schema.org/circle";

    ///<summary>
    ///A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
    ///<see cref="http://schema.org/citation"/>
    ///</summary>
    public const string citation = "http://schema.org/citation";

    ///<summary>
    ///A short summary of the specific claims reviewed in a ClaimReview.
    ///<see cref="http://schema.org/claimReviewed"/>
    ///</summary>
    public const string claimReviewed = "http://schema.org/claimReviewed";

    ///<summary>
    ///Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
    ///<see cref="http://schema.org/clincalPharmacology"/>
    ///</summary>
    public const string clincalPharmacology = "http://schema.org/clincalPharmacology";

    ///<summary>
    ///Position of the clip within an ordered group of clips.
    ///<see cref="http://schema.org/clipNumber"/>
    ///</summary>
    public const string clipNumber = "http://schema.org/clipNumber";

    ///<summary>
    ///The closing hour of the place or service on the given day(s) of the week.
    ///<see cref="http://schema.org/closes"/>
    ///</summary>
    public const string closes = "http://schema.org/closes";

    ///<summary>
    ///A person that acts in a coaching role for a sports team.
    ///<see cref="http://schema.org/coach"/>
    ///</summary>
    public const string coach = "http://schema.org/coach";

    ///<summary>
    ///A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.
    ///<see cref="http://schema.org/code"/>
    ///</summary>
    public const string code = "http://schema.org/code";

    ///<summary>
    ///Link to the repository where the un-compiled, human readable code and related code is located (SVN, github, CodePlex).
    ///<see cref="http://schema.org/codeRepository"/>
    ///</summary>
    public const string codeRepository = "http://schema.org/codeRepository";

    ///<summary>
    ///A short textual code that uniquely identifies the value.
    ///<see cref="http://schema.org/codeValue"/>
    ///</summary>
    public const string codeValue = "http://schema.org/codeValue";

    ///<summary>
    ///The coding system, e.g. 'ICD-10'.
    ///<see cref="http://schema.org/codingSystem"/>
    ///</summary>
    public const string codingSystem = "http://schema.org/codingSystem";

    ///<summary>
    ///A colleague of the person.
    ///<see cref="http://schema.org/colleagues"/>
    ///</summary>
    public const string colleagues = "http://schema.org/colleagues";

    ///<summary>
    ///A sub property of object. The collection target of the action.
    ///<see cref="http://schema.org/collection"/>
    ///</summary>
    public const string collection = "http://schema.org/collection";

    ///<summary>
    ///The number of items in the <a class="localLink" href="http://schema.org/Collection">Collection</a>.
    ///<see cref="http://schema.org/collectionSize"/>
    ///</summary>
    public const string collectionSize = "http://schema.org/collectionSize";

    ///<summary>
    ///The color of the product.
    ///<see cref="http://schema.org/color"/>
    ///</summary>
    public const string color = "http://schema.org/color";

    ///<summary>
    ///The individual who adds color to inked drawings.
    ///<see cref="http://schema.org/colorist"/>
    ///</summary>
    public const string colorist = "http://schema.org/colorist";

    ///<summary>
    ///Comments, typically from users.
    ///<see cref="http://schema.org/comment"/>
    ///</summary>
    public const string comment = "http://schema.org/comment";

    ///<summary>
    ///The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
    ///<see cref="http://schema.org/commentCount"/>
    ///</summary>
    public const string commentCount = "http://schema.org/commentCount";

    ///<summary>
    ///The text of the UserComment.
    ///<see cref="http://schema.org/commentText"/>
    ///</summary>
    public const string commentText = "http://schema.org/commentText";

    ///<summary>
    ///The time at which the UserComment was made.
    ///<see cref="http://schema.org/commentTime"/>
    ///</summary>
    public const string commentTime = "http://schema.org/commentTime";

    ///<summary>
    ///Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity.
    ///<see cref="http://schema.org/competencyRequired"/>
    ///</summary>
    public const string competencyRequired = "http://schema.org/competencyRequired";

    ///<summary>
    ///The person or organization who wrote a composition, or who is the composer of a work performed at some event.
    ///<see cref="http://schema.org/composer"/>
    ///</summary>
    public const string composer = "http://schema.org/composer";

    ///<summary>
    ///Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.
    ///<see cref="http://schema.org/comprisedOf"/>
    ///</summary>
    public const string comprisedOf = "http://schema.org/comprisedOf";

    ///<summary>
    ///Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an <a class="localLink" href="http://schema.org/ArchiveComponent">ArchiveComponent</a> held by an <a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a>. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.<br/><br/>
    ///
    ///For example "Available by appointment from the Reading Room" or "Accessible only from logged-in accounts ".
    ///<see cref="http://schema.org/conditionsOfAccess"/>
    ///</summary>
    public const string conditionsOfAccess = "http://schema.org/conditionsOfAccess";

    ///<summary>
    ///A number that confirms the given order or payment has been received.
    ///<see cref="http://schema.org/confirmationNumber"/>
    ///</summary>
    public const string confirmationNumber = "http://schema.org/confirmationNumber";

    ///<summary>
    ///Other anatomical structures to which this structure is connected.
    ///<see cref="http://schema.org/connectedTo"/>
    ///</summary>
    public const string connectedTo = "http://schema.org/connectedTo";

    ///<summary>
    ///Indicates a property used as a constraint to define a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a> with respect to the set of entities
    ///  corresponding to an indicated type (via <a class="localLink" href="http://schema.org/populationType">populationType</a>).
    ///<see cref="http://schema.org/constrainingProperty"/>
    ///</summary>
    public const string constrainingProperty = "http://schema.org/constrainingProperty";

    ///<summary>
    ///An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).
    ///<see cref="http://schema.org/contactOption"/>
    ///</summary>
    public const string contactOption = "http://schema.org/contactOption";

    ///<summary>
    ///A contact point for a person or organization.
    ///<see cref="http://schema.org/contactPoints"/>
    ///</summary>
    public const string contactPoints = "http://schema.org/contactPoints";

    ///<summary>
    ///A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
    ///<see cref="http://schema.org/contactType"/>
    ///</summary>
    public const string contactType = "http://schema.org/contactType";

    ///<summary>
    ///A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.
    ///<see cref="http://schema.org/contactlessPayment"/>
    ///</summary>
    public const string contactlessPayment = "http://schema.org/contactlessPayment";

    ///<summary>
    ///The basic containment relation between a place and one that contains it.
    ///<see cref="http://schema.org/containedIn"/>
    ///</summary>
    public const string containedIn = "http://schema.org/containedIn";

    ///<summary>
    ///Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.
    ///<see cref="http://schema.org/contentRating"/>
    ///</summary>
    public const string contentRating = "http://schema.org/contentRating";

    ///<summary>
    ///The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
    ///<see cref="http://schema.org/contentReferenceTime"/>
    ///</summary>
    public const string contentReferenceTime = "http://schema.org/contentReferenceTime";

    ///<summary>
    ///File size in (mega/kilo) bytes.
    ///<see cref="http://schema.org/contentSize"/>
    ///</summary>
    public const string contentSize = "http://schema.org/contentSize";

    ///<summary>
    ///The supported content type(s) for an EntryPoint response.
    ///<see cref="http://schema.org/contentType"/>
    ///</summary>
    public const string contentType = "http://schema.org/contentType";

    ///<summary>
    ///Actual bytes of the media object, for example the image file or video file.
    ///<see cref="http://schema.org/contentUrl"/>
    ///</summary>
    public const string contentUrl = "http://schema.org/contentUrl";

    ///<summary>
    ///A contraindication for this therapy.
    ///<see cref="http://schema.org/contraindication"/>
    ///</summary>
    public const string contraindication = "http://schema.org/contraindication";

    ///<summary>
    ///A secondary contributor to the CreativeWork or Event.
    ///<see cref="http://schema.org/contributor"/>
    ///</summary>
    public const string contributor = "http://schema.org/contributor";

    ///<summary>
    ///The time it takes to actually cook the dish, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/cookTime"/>
    ///</summary>
    public const string cookTime = "http://schema.org/cookTime";

    ///<summary>
    ///The method of cooking, such as Frying, Steaming, ...
    ///<see cref="http://schema.org/cookingMethod"/>
    ///</summary>
    public const string cookingMethod = "http://schema.org/cookingMethod";

    ///<summary>
    ///The party holding the legal copyright to the CreativeWork.
    ///<see cref="http://schema.org/copyrightHolder"/>
    ///</summary>
    public const string copyrightHolder = "http://schema.org/copyrightHolder";

    ///<summary>
    ///The year during which the claimed copyright for the CreativeWork was first asserted.
    ///<see cref="http://schema.org/copyrightYear"/>
    ///</summary>
    public const string copyrightYear = "http://schema.org/copyrightYear";

    ///<summary>
    ///Indicates a correction to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>, either via a <a class="localLink" href="http://schema.org/CorrectionComment">CorrectionComment</a>, textually or in another document.
    ///<see cref="http://schema.org/correction"/>
    ///</summary>
    public const string correction = "http://schema.org/correction";

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (e.g. <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.
    ///<see cref="http://schema.org/correctionsPolicy"/>
    ///</summary>
    public const string correctionsPolicy = "http://schema.org/correctionsPolicy";

    ///<summary>
    ///Cost per unit of the drug, as reported by the source being tagged.
    ///<see cref="http://schema.org/cost"/>
    ///</summary>
    public const string cost = "http://schema.org/cost";

    ///<summary>
    ///The category of cost, such as wholesale, retail, reimbursement cap, etc.
    ///<see cref="http://schema.org/costCategory"/>
    ///</summary>
    public const string costCategory = "http://schema.org/costCategory";

    ///<summary>
    ///The currency (in 3-letter of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217
    ///<see cref="http://schema.org/costCurrency"/>
    ///</summary>
    public const string costCurrency = "http://schema.org/costCurrency";

    ///<summary>
    ///Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.
    ///<see cref="http://schema.org/costOrigin"/>
    ///</summary>
    public const string costOrigin = "http://schema.org/costOrigin";

    ///<summary>
    ///The cost per unit of the drug.
    ///<see cref="http://schema.org/costPerUnit"/>
    ///</summary>
    public const string costPerUnit = "http://schema.org/costPerUnit";

    ///<summary>
    ///Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    ///<see cref="http://schema.org/countriesNotSupported"/>
    ///</summary>
    public const string countriesNotSupported = "http://schema.org/countriesNotSupported";

    ///<summary>
    ///Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
    ///<see cref="http://schema.org/countriesSupported"/>
    ///</summary>
    public const string countriesSupported = "http://schema.org/countriesSupported";

    ///<summary>
    ///The country of the principal offices of the production company or individual responsible for the movie or program.
    ///<see cref="http://schema.org/countryOfOrigin"/>
    ///</summary>
    public const string countryOfOrigin = "http://schema.org/countryOfOrigin";

    ///<summary>
    ///A sub property of location. The course where this action was taken.
    ///<see cref="http://schema.org/course"/>
    ///</summary>
    public const string course = "http://schema.org/course";

    ///<summary>
    ///The identifier for the <a class="localLink" href="http://schema.org/Course">Course</a> used by the course <a class="localLink" href="http://schema.org/provider">provider</a> (e.g. CS101 or 6.001).
    ///<see cref="http://schema.org/courseCode"/>
    ///</summary>
    public const string courseCode = "http://schema.org/courseCode";

    ///<summary>
    ///The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" or "asynchronous"; "full-time" or "part-time") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
    ///<see cref="http://schema.org/courseMode"/>
    ///</summary>
    public const string courseMode = "http://schema.org/courseMode";

    ///<summary>
    ///Requirements for taking the Course. May be completion of another <a class="localLink" href="http://schema.org/Course">Course</a> or a textual description like "permission of instructor". Requirements may be a pre-requisite competency, referenced using <a class="localLink" href="http://schema.org/AlignmentObject">AlignmentObject</a>.
    ///<see cref="http://schema.org/coursePrerequisites"/>
    ///</summary>
    public const string coursePrerequisites = "http://schema.org/coursePrerequisites";

    ///<summary>
    ///The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, "2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week".
    ///<see cref="http://schema.org/courseWorkload"/>
    ///</summary>
    public const string courseWorkload = "http://schema.org/courseWorkload";

    ///<summary>
    ///The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.
    ///<see cref="http://schema.org/coverageEndTime"/>
    ///</summary>
    public const string coverageEndTime = "http://schema.org/coverageEndTime";

    ///<summary>
    ///The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.
    ///<see cref="http://schema.org/coverageStartTime"/>
    ///</summary>
    public const string coverageStartTime = "http://schema.org/coverageStartTime";

    ///<summary>
    ///The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.
    ///<see cref="http://schema.org/creativeWorkStatus"/>
    ///</summary>
    public const string creativeWorkStatus = "http://schema.org/creativeWorkStatus";

    ///<summary>
    ///The category or type of credential being described, for example "degree”, “certificate”, “badge”, or more specific term.
    ///<see cref="http://schema.org/credentialCategory"/>
    ///</summary>
    public const string credentialCategory = "http://schema.org/credentialCategory";

    ///<summary>
    ///The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.
    ///<see cref="http://schema.org/creditedTo"/>
    ///</summary>
    public const string creditedTo = "http://schema.org/creditedTo";

    ///<summary>
    ///A CSS selector, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
    ///<see cref="http://schema.org/cssSelector"/>
    ///</summary>
    public const string cssSelector = "http://schema.org/cssSelector";

    ///<summary>
    ///The currency accepted.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/currenciesAccepted"/>
    ///</summary>
    public const string currenciesAccepted = "http://schema.org/currenciesAccepted";

    ///<summary>
    ///The currency in which the monetary amount is expressed.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/currency"/>
    ///</summary>
    public const string currency = "http://schema.org/currency";

    ///<summary>
    ///The current price of a currency.
    ///<see cref="http://schema.org/currentExchangeRate"/>
    ///</summary>
    public const string currentExchangeRate = "http://schema.org/currentExchangeRate";

    ///<summary>
    ///Party placing the order or paying the invoice.
    ///<see cref="http://schema.org/customer"/>
    ///</summary>
    public const string customer = "http://schema.org/customer";

    ///<summary>
    ///An item within in a data feed. Data feeds may have many elements.
    ///<see cref="http://schema.org/dataFeedElement"/>
    ///</summary>
    public const string dataFeedElement = "http://schema.org/dataFeedElement";

    ///<summary>
    ///The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).
    ///<see cref="http://schema.org/datasetTimeInterval"/>
    ///</summary>
    public const string datasetTimeInterval = "http://schema.org/datasetTimeInterval";

    ///<summary>
    ///The datetime the item was removed from the DataFeed.
    ///<see cref="http://schema.org/dateDeleted"/>
    ///</summary>
    public const string dateDeleted = "http://schema.org/dateDeleted";

    ///<summary>
    ///The date the ticket was issued.
    ///<see cref="http://schema.org/dateIssued"/>
    ///</summary>
    public const string dateIssued = "http://schema.org/dateIssued";

    ///<summary>
    ///The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
    ///<see cref="http://schema.org/dateModified"/>
    ///</summary>
    public const string dateModified = "http://schema.org/dateModified";

    ///<summary>
    ///Publication date for the job posting.
    ///<see cref="http://schema.org/datePosted"/>
    ///</summary>
    public const string datePosted = "http://schema.org/datePosted";

    ///<summary>
    ///Date of first broadcast/publication.
    ///<see cref="http://schema.org/datePublished"/>
    ///</summary>
    public const string datePublished = "http://schema.org/datePublished";

    ///<summary>
    ///The date/time at which the message has been read by the recipient if a single recipient exists.
    ///<see cref="http://schema.org/dateRead"/>
    ///</summary>
    public const string dateRead = "http://schema.org/dateRead";

    ///<summary>
    ///The date/time the message was received if a single recipient exists.
    ///<see cref="http://schema.org/dateReceived"/>
    ///</summary>
    public const string dateReceived = "http://schema.org/dateReceived";

    ///<summary>
    ///The date/time at which the message was sent.
    ///<see cref="http://schema.org/dateSent"/>
    ///</summary>
    public const string dateSent = "http://schema.org/dateSent";

    ///<summary>
    ///The date of the first registration of the vehicle with the respective public authorities.
    ///<see cref="http://schema.org/dateVehicleFirstRegistered"/>
    ///</summary>
    public const string dateVehicleFirstRegistered = "http://schema.org/dateVehicleFirstRegistered";

    ///<summary>
    ///A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>
    ///
    ///Structured representations of dateline-related information can also be expressed more explicitly using <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>
    ///
    ///Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
    ///<see cref="http://schema.org/dateline"/>
    ///</summary>
    public const string dateline = "http://schema.org/dateline";

    ///<summary>
    ///The day of the week for which these opening hours are valid.
    ///<see cref="http://schema.org/dayOfWeek"/>
    ///</summary>
    public const string dayOfWeek = "http://schema.org/dayOfWeek";

    ///<summary>
    ///Date of death.
    ///<see cref="http://schema.org/deathDate"/>
    ///</summary>
    public const string deathDate = "http://schema.org/deathDate";

    ///<summary>
    ///The place where the person died.
    ///<see cref="http://schema.org/deathPlace"/>
    ///</summary>
    public const string deathPlace = "http://schema.org/deathPlace";

    ///<summary>
    ///The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.
    ///<see cref="http://schema.org/defaultValue"/>
    ///</summary>
    public const string defaultValue = "http://schema.org/defaultValue";

    ///<summary>
    ///Destination address.
    ///<see cref="http://schema.org/deliveryAddress"/>
    ///</summary>
    public const string deliveryAddress = "http://schema.org/deliveryAddress";

    ///<summary>
    ///The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.
    ///<see cref="http://schema.org/deliveryLeadTime"/>
    ///</summary>
    public const string deliveryLeadTime = "http://schema.org/deliveryLeadTime";

    ///<summary>
    ///A sub property of instrument. The method of delivery.
    ///<see cref="http://schema.org/deliveryMethod"/>
    ///</summary>
    public const string deliveryMethod = "http://schema.org/deliveryMethod";

    ///<summary>
    ///New entry added as the package passes through each leg of its journey (from shipment to final delivery).
    ///<see cref="http://schema.org/deliveryStatus"/>
    ///</summary>
    public const string deliveryStatus = "http://schema.org/deliveryStatus";

    ///<summary>
    ///A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.
    ///<see cref="http://schema.org/department"/>
    ///</summary>
    public const string department = "http://schema.org/department";

    ///<summary>
    ///The airport where the flight originates.
    ///<see cref="http://schema.org/departureAirport"/>
    ///</summary>
    public const string departureAirport = "http://schema.org/departureAirport";

    ///<summary>
    ///The stop or station from which the bus departs.
    ///<see cref="http://schema.org/departureBusStop"/>
    ///</summary>
    public const string departureBusStop = "http://schema.org/departureBusStop";

    ///<summary>
    ///Identifier of the flight's departure gate.
    ///<see cref="http://schema.org/departureGate"/>
    ///</summary>
    public const string departureGate = "http://schema.org/departureGate";

    ///<summary>
    ///The platform from which the train departs.
    ///<see cref="http://schema.org/departurePlatform"/>
    ///</summary>
    public const string departurePlatform = "http://schema.org/departurePlatform";

    ///<summary>
    ///The station from which the train departs.
    ///<see cref="http://schema.org/departureStation"/>
    ///</summary>
    public const string departureStation = "http://schema.org/departureStation";

    ///<summary>
    ///Identifier of the flight's departure terminal.
    ///<see cref="http://schema.org/departureTerminal"/>
    ///</summary>
    public const string departureTerminal = "http://schema.org/departureTerminal";

    ///<summary>
    ///The expected departure time.
    ///<see cref="http://schema.org/departureTime"/>
    ///</summary>
    public const string departureTime = "http://schema.org/departureTime";

    ///<summary>
    ///Prerequisites needed to fulfill steps in article.
    ///<see cref="http://schema.org/dependencies"/>
    ///</summary>
    public const string dependencies = "http://schema.org/dependencies";

    ///<summary>
    ///The depth of the item.
    ///<see cref="http://schema.org/depth"/>
    ///</summary>
    public const string depth = "http://schema.org/depth";

    ///<summary>
    ///Device required to run the application. Used in cases where a specific make/model is required to run the application.
    ///<see cref="http://schema.org/device"/>
    ///</summary>
    public const string device = "http://schema.org/device";

    ///<summary>
    ///One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.
    ///<see cref="http://schema.org/diagnosis"/>
    ///</summary>
    public const string diagnosis = "http://schema.org/diagnosis";

    ///<summary>
    ///An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.
    ///<see cref="http://schema.org/diagram"/>
    ///</summary>
    public const string diagram = "http://schema.org/diagram";

    ///<summary>
    ///A sub property of instrument. The diet used in this action.
    ///<see cref="http://schema.org/diet"/>
    ///</summary>
    public const string diet = "http://schema.org/diet";

    ///<summary>
    ///Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.
    ///<see cref="http://schema.org/dietFeatures"/>
    ///</summary>
    public const string dietFeatures = "http://schema.org/dietFeatures";

    ///<summary>
    ///One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.
    ///<see cref="http://schema.org/differentialDiagnosis"/>
    ///</summary>
    public const string differentialDiagnosis = "http://schema.org/differentialDiagnosis";

    ///<summary>
    ///A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/directors"/>
    ///</summary>
    public const string directors = "http://schema.org/directors";

    ///<summary>
    ///A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
    ///<see cref="http://schema.org/disambiguatingDescription"/>
    ///</summary>
    public const string disambiguatingDescription = "http://schema.org/disambiguatingDescription";

    ///<summary>
    ///Any discount applied (to an Order).
    ///<see cref="http://schema.org/discount"/>
    ///</summary>
    public const string discount = "http://schema.org/discount";

    ///<summary>
    ///Code used to redeem a discount.
    ///<see cref="http://schema.org/discountCode"/>
    ///</summary>
    public const string discountCode = "http://schema.org/discountCode";

    ///<summary>
    ///The currency of the discount.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/discountCurrency"/>
    ///</summary>
    public const string discountCurrency = "http://schema.org/discountCurrency";

    ///<summary>
    ///Specifies the CreativeWork associated with the UserComment.
    ///<see cref="http://schema.org/discusses"/>
    ///</summary>
    public const string discusses = "http://schema.org/discusses";

    ///<summary>
    ///A link to the page containing the comments of the CreativeWork.
    ///<see cref="http://schema.org/discussionUrl"/>
    ///</summary>
    public const string discussionUrl = "http://schema.org/discussionUrl";

    ///<summary>
    ///The date that this organization was dissolved.
    ///<see cref="http://schema.org/dissolutionDate"/>
    ///</summary>
    public const string dissolutionDate = "http://schema.org/dissolutionDate";

    ///<summary>
    ///The distance travelled, e.g. exercising or travelling.
    ///<see cref="http://schema.org/distance"/>
    ///</summary>
    public const string distance = "http://schema.org/distance";

    ///<summary>
    ///One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.
    ///<see cref="http://schema.org/distinguishingSign"/>
    ///</summary>
    public const string distinguishingSign = "http://schema.org/distinguishingSign";

    ///<summary>
    ///A downloadable form of this dataset, at a specific location, in a specific format.
    ///<see cref="http://schema.org/distribution"/>
    ///</summary>
    public const string distribution = "http://schema.org/distribution";

    ///<summary>
    ///Statement on diversity policy by an <a class="localLink" href="http://schema.org/Organization">Organization</a> e.g. a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>. For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.
    ///<see cref="http://schema.org/diversityPolicy"/>
    ///</summary>
    public const string diversityPolicy = "http://schema.org/diversityPolicy";

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (often but not necessarily a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.
    ///<see cref="http://schema.org/diversityStaffingReport"/>
    ///</summary>
    public const string diversityStaffingReport = "http://schema.org/diversityStaffingReport";

    ///<summary>
    ///Further documentation describing the Web API in more detail.
    ///<see cref="http://schema.org/documentation"/>
    ///</summary>
    public const string documentation = "http://schema.org/documentation";

    ///<summary>
    ///Relates a property to a class that is (one of) the type(s) the property is expected to be used on.
    ///<see cref="http://schema.org/domainIncludes"/>
    ///</summary>
    public const string domainIncludes = "http://schema.org/domainIncludes";

    ///<summary>
    ///Whether borrower is a resident of the jurisdiction where the property is located.
    ///<see cref="http://schema.org/domiciledMortgage"/>
    ///</summary>
    public const string domiciledMortgage = "http://schema.org/domiciledMortgage";

    ///<summary>
    ///The time admission will commence.
    ///<see cref="http://schema.org/doorTime"/>
    ///</summary>
    public const string doorTime = "http://schema.org/doorTime";

    ///<summary>
    ///A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.
    ///<see cref="http://schema.org/dosageForm"/>
    ///</summary>
    public const string dosageForm = "http://schema.org/dosageForm";

    ///<summary>
    ///A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.
    ///<see cref="http://schema.org/doseSchedule"/>
    ///</summary>
    public const string doseSchedule = "http://schema.org/doseSchedule";

    ///<summary>
    ///The unit of the dose, e.g. 'mg'.
    ///<see cref="http://schema.org/doseUnit"/>
    ///</summary>
    public const string doseUnit = "http://schema.org/doseUnit";

    ///<summary>
    ///The value of the dose, e.g. 500.
    ///<see cref="http://schema.org/doseValue"/>
    ///</summary>
    public const string doseValue = "http://schema.org/doseValue";

    ///<summary>
    ///a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.
    ///<see cref="http://schema.org/downPayment"/>
    ///</summary>
    public const string downPayment = "http://schema.org/downPayment";

    ///<summary>
    ///If the file can be downloaded, URL to download the binary.
    ///<see cref="http://schema.org/downloadUrl"/>
    ///</summary>
    public const string downloadUrl = "http://schema.org/downloadUrl";

    ///<summary>
    ///The number of downvotes this question, answer or comment has received from the community.
    ///<see cref="http://schema.org/downvoteCount"/>
    ///</summary>
    public const string downvoteCount = "http://schema.org/downvoteCount";

    ///<summary>
    ///The vasculature that the vein drains into.
    ///<see cref="http://schema.org/drainsTo"/>
    ///</summary>
    public const string drainsTo = "http://schema.org/drainsTo";

    ///<summary>
    ///The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.
    ///<see cref="http://schema.org/driveWheelConfiguration"/>
    ///</summary>
    public const string driveWheelConfiguration = "http://schema.org/driveWheelConfiguration";

    ///<summary>
    ///Where a rental car can be dropped off.
    ///<see cref="http://schema.org/dropoffLocation"/>
    ///</summary>
    public const string dropoffLocation = "http://schema.org/dropoffLocation";

    ///<summary>
    ///When a rental car can be dropped off.
    ///<see cref="http://schema.org/dropoffTime"/>
    ///</summary>
    public const string dropoffTime = "http://schema.org/dropoffTime";

    ///<summary>
    ///Specifying a drug or medicine used in a medication procedure
    ///<see cref="http://schema.org/drug"/>
    ///</summary>
    public const string drug = "http://schema.org/drug";

    ///<summary>
    ///The class of drug this belongs to (e.g., statins).
    ///<see cref="http://schema.org/drugClass"/>
    ///</summary>
    public const string drugClass = "http://schema.org/drugClass";

    ///<summary>
    ///The unit in which the drug is measured, e.g. '5 mg tablet'.
    ///<see cref="http://schema.org/drugUnit"/>
    ///</summary>
    public const string drugUnit = "http://schema.org/drugUnit";

    ///<summary>
    ///The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.
    ///<see cref="http://schema.org/duns"/>
    ///</summary>
    public const string duns = "http://schema.org/duns";

    ///<summary>
    ///A therapy that duplicates or overlaps this one.
    ///<see cref="http://schema.org/duplicateTherapy"/>
    ///</summary>
    public const string duplicateTherapy = "http://schema.org/duplicateTherapy";

    ///<summary>
    ///The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.
    ///<see cref="http://schema.org/durationOfWarranty"/>
    ///</summary>
    public const string durationOfWarranty = "http://schema.org/durationOfWarranty";

    ///<summary>
    ///A media object representing the circumstances while performing this direction.
    ///<see cref="http://schema.org/duringMedia"/>
    ///</summary>
    public const string duringMedia = "http://schema.org/duringMedia";

    ///<summary>
    ///The amount to be paid as a penalty in the event of early payment of the loan.
    ///<see cref="http://schema.org/earlyPrepaymentPenalty"/>
    ///</summary>
    public const string earlyPrepaymentPenalty = "http://schema.org/earlyPrepaymentPenalty";

    ///<summary>
    ///Specifies the Person who edited the CreativeWork.
    ///<see cref="http://schema.org/editor"/>
    ///</summary>
    public const string editor = "http://schema.org/editor";

    ///<summary>
    ///Educational background needed for the position or Occupation.
    ///<see cref="http://schema.org/educationRequirements"/>
    ///</summary>
    public const string educationRequirements = "http://schema.org/educationRequirements";

    ///<summary>
    ///An alignment to an established educational framework.
    ///<see cref="http://schema.org/educationalAlignment"/>
    ///</summary>
    public const string educationalAlignment = "http://schema.org/educationalAlignment";

    ///<summary>
    ///A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.
    ///<see cref="http://schema.org/educationalCredentialAwarded"/>
    ///</summary>
    public const string educationalCredentialAwarded = "http://schema.org/educationalCredentialAwarded";

    ///<summary>
    ///The framework to which the resource being described is aligned.
    ///<see cref="http://schema.org/educationalFramework"/>
    ///</summary>
    public const string educationalFramework = "http://schema.org/educationalFramework";

    ///<summary>
    ///The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.
    ///<see cref="http://schema.org/educationalLevel"/>
    ///</summary>
    public const string educationalLevel = "http://schema.org/educationalLevel";

    ///<summary>
    ///An educationalRole of an EducationalAudience.
    ///<see cref="http://schema.org/educationalRole"/>
    ///</summary>
    public const string educationalRole = "http://schema.org/educationalRole";

    ///<summary>
    ///The purpose of a work in the context of education; for example, 'assignment', 'group work'.
    ///<see cref="http://schema.org/educationalUse"/>
    ///</summary>
    public const string educationalUse = "http://schema.org/educationalUse";

    ///<summary>
    ///The elevation of a location (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>). Values may be of the form 'NUMBER UNIT<em>OF</em>MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.
    ///<see cref="http://schema.org/elevation"/>
    ///</summary>
    public const string elevation = "http://schema.org/elevation";

    ///<summary>
    ///The type(s) of customers for which the given offer is valid.
    ///<see cref="http://schema.org/eligibleCustomerType"/>
    ///</summary>
    public const string eligibleCustomerType = "http://schema.org/eligibleCustomerType";

    ///<summary>
    ///The duration for which the given offer is valid.
    ///<see cref="http://schema.org/eligibleDuration"/>
    ///</summary>
    public const string eligibleDuration = "http://schema.org/eligibleDuration";

    ///<summary>
    ///The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.
    ///<see cref="http://schema.org/eligibleQuantity"/>
    ///</summary>
    public const string eligibleQuantity = "http://schema.org/eligibleQuantity";

    ///<summary>
    ///The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>
    ///
    ///See also <a class="localLink" href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
    ///<see cref="http://schema.org/eligibleRegion"/>
    ///</summary>
    public const string eligibleRegion = "http://schema.org/eligibleRegion";

    ///<summary>
    ///The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.
    ///<see cref="http://schema.org/eligibleTransactionVolume"/>
    ///</summary>
    public const string eligibleTransactionVolume = "http://schema.org/eligibleTransactionVolume";

    ///<summary>
    ///Email address.
    ///<see cref="http://schema.org/email"/>
    ///</summary>
    public const string email = "http://schema.org/email";

    ///<summary>
    ///A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.
    ///<see cref="http://schema.org/embedUrl"/>
    ///</summary>
    public const string embedUrl = "http://schema.org/embedUrl";

    ///<summary>
    ///The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put "g/km" into the unitText property of that value, since there is no UN/CEFACT Common Code for "g/km".
    ///<see cref="http://schema.org/emissionsCO2"/>
    ///</summary>
    public const string emissionsCO2 = "http://schema.org/emissionsCO2";

    ///<summary>
    ///People working for this organization.
    ///<see cref="http://schema.org/employees"/>
    ///</summary>
    public const string employees = "http://schema.org/employees";

    ///<summary>
    ///Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).
    ///<see cref="http://schema.org/employmentType"/>
    ///</summary>
    public const string employmentType = "http://schema.org/employmentType";

    ///<summary>
    ///The supported encoding type(s) for an EntryPoint request.
    ///<see cref="http://schema.org/encodingType"/>
    ///</summary>
    public const string encodingType = "http://schema.org/encodingType";

    ///<summary>
    ///A media object that encodes this CreativeWork.
    ///<see cref="http://schema.org/encodings"/>
    ///</summary>
    public const string encodings = "http://schema.org/encodings";

    ///<summary>
    ///The end date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
    ///<see cref="http://schema.org/endDate"/>
    ///</summary>
    public const string endDate = "http://schema.org/endDate";

    ///<summary>
    ///The end time of the clip expressed as the number of seconds from the beginning of the work.
    ///<see cref="http://schema.org/endOffset"/>
    ///</summary>
    public const string endOffset = "http://schema.org/endOffset";

    ///<summary>
    ///The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>. For media, including audio and video, it's the time offset of the end of a clip within a larger file.<br/><br/>
    ///
    ///Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    ///<see cref="http://schema.org/endTime"/>
    ///</summary>
    public const string endTime = "http://schema.org/endTime";

    ///<summary>
    ///A sub property of participant. The person/organization being supported.
    ///<see cref="http://schema.org/endorsee"/>
    ///</summary>
    public const string endorsee = "http://schema.org/endorsee";

    ///<summary>
    ///People or organizations that endorse the plan.
    ///<see cref="http://schema.org/endorsers"/>
    ///</summary>
    public const string endorsers = "http://schema.org/endorsers";

    ///<summary>
    ///The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. <br/><br/>
    ///
    ///Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches
    ///* Note 1: You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.
    ///* Note 2: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/engineDisplacement"/>
    ///</summary>
    public const string engineDisplacement = "http://schema.org/engineDisplacement";

    ///<summary>
    ///The power of the vehicle's engine.
    ///    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are many different ways of measuring an engine's power. For an overview, see  <a href="http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes">http://en.wikipedia.org/wiki/Horsepower#Engine<em>power</em>test_codes</a>.</li>
    ///<li>Note 2: You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.</li>
    ///<li>Note 3: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/enginePower"/>
    ///</summary>
    public const string enginePower = "http://schema.org/enginePower";

    ///<summary>
    ///The type of engine or engines powering the vehicle.
    ///<see cref="http://schema.org/engineType"/>
    ///</summary>
    public const string engineType = "http://schema.org/engineType";

    ///<summary>
    ///A sub property of location. The entertainment business where the action occurred.
    ///<see cref="http://schema.org/entertainmentBusiness"/>
    ///</summary>
    public const string entertainmentBusiness = "http://schema.org/entertainmentBusiness";

    ///<summary>
    ///The characteristics of associated patients, such as age, gender, race etc.
    ///<see cref="http://schema.org/epidemiology"/>
    ///</summary>
    public const string epidemiology = "http://schema.org/epidemiology";

    ///<summary>
    ///Position of the episode within an ordered group of episodes.
    ///<see cref="http://schema.org/episodeNumber"/>
    ///</summary>
    public const string episodeNumber = "http://schema.org/episodeNumber";

    ///<summary>
    ///An episode of a TV/radio series or season.
    ///<see cref="http://schema.org/episodes"/>
    ///</summary>
    public const string episodes = "http://schema.org/episodes";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is equal to the object.
    ///<see cref="http://schema.org/equal"/>
    ///</summary>
    public const string equal = "http://schema.org/equal";

    ///<summary>
    ///For failed actions, more information on the cause of the failure.
    ///<see cref="http://schema.org/error"/>
    ///</summary>
    public const string error = "http://schema.org/error";

    ///<summary>
    ///The estimated cost of the supply or supplies consumed when performing instructions.
    ///<see cref="http://schema.org/estimatedCost"/>
    ///</summary>
    public const string estimatedCost = "http://schema.org/estimatedCost";

    ///<summary>
    ///The estimated time the flight will take.
    ///<see cref="http://schema.org/estimatedFlightDuration"/>
    ///</summary>
    public const string estimatedFlightDuration = "http://schema.org/estimatedFlightDuration";

    ///<summary>
    ///An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.
    ///<see cref="http://schema.org/estimatedSalary"/>
    ///</summary>
    public const string estimatedSalary = "http://schema.org/estimatedSalary";

    ///<summary>
    ///The condition, complication, or symptom whose risk is being estimated.
    ///<see cref="http://schema.org/estimatesRiskOf"/>
    ///</summary>
    public const string estimatesRiskOf = "http://schema.org/estimatesRiskOf";

    ///<summary>
    ///Statement about ethics policy, e.g. of a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> regarding journalistic and publishing practices, or of a <a class="localLink" href="http://schema.org/Restaurant">Restaurant</a>, a page describing food source policies. In the case of a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.
    ///<see cref="http://schema.org/ethicsPolicy"/>
    ///</summary>
    public const string ethicsPolicy = "http://schema.org/ethicsPolicy";

    ///<summary>
    ///Associates an <a class="localLink" href="http://schema.org/Event">Event</a> with a <a class="localLink" href="http://schema.org/Schedule">Schedule</a>. There are circumstances where it is preferable to share a schedule for a series of
    ///      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly
    ///      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An <a class="localLink" href="http://schema.org/Event">Event</a> that
    ///      is associated with a <a class="localLink" href="http://schema.org/Schedule">Schedule</a> using this property should not have <a class="localLink" href="http://schema.org/startDate">startDate</a> or <a class="localLink" href="http://schema.org/endDate">endDate</a> properties. These are instead defined within the associated
    ///      <a class="localLink" href="http://schema.org/Schedule">Schedule</a>, this avoids any ambiguity for clients using the data. The propery might have repeated values to specify different schedules, e.g. for different months
    ///      or seasons.
    ///<see cref="http://schema.org/eventSchedule"/>
    ///</summary>
    public const string eventSchedule = "http://schema.org/eventSchedule";

    ///<summary>
    ///An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.
    ///<see cref="http://schema.org/eventStatus"/>
    ///</summary>
    public const string eventStatus = "http://schema.org/eventStatus";

    ///<summary>
    ///Upcoming or past events associated with this place or organization.
    ///<see cref="http://schema.org/events"/>
    ///</summary>
    public const string events = "http://schema.org/events";

    ///<summary>
    ///Strength of evidence of the data used to formulate the guideline (enumerated).
    ///<see cref="http://schema.org/evidenceLevel"/>
    ///</summary>
    public const string evidenceLevel = "http://schema.org/evidenceLevel";

    ///<summary>
    ///Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.
    ///<see cref="http://schema.org/evidenceOrigin"/>
    ///</summary>
    public const string evidenceOrigin = "http://schema.org/evidenceOrigin";

    ///<summary>
    ///Defines a <a class="localLink" href="http://schema.org/Date">Date</a> or <a class="localLink" href="http://schema.org/DateTime">DateTime</a> during which a scheduled <a class="localLink" href="http://schema.org/Event">Event</a> will not take place. The property allows exceptions to
    ///      a <a class="localLink" href="http://schema.org/Schedule">Schedule</a> to be specified. If an exception is specified as a <a class="localLink" href="http://schema.org/DateTime">DateTime</a> then only the event that would have started at that specific date and time
    ///      should be excluded from the schedule. If an exception is specified as a <a class="localLink" href="http://schema.org/Date">Date</a> then any event that is scheduled for that 24 hour period should be
    ///      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.
    ///<see cref="http://schema.org/exceptDate"/>
    ///</summary>
    public const string exceptDate = "http://schema.org/exceptDate";

    ///<summary>
    ///The difference between the price at which a broker or other intermediary buys and sells foreign currency.
    ///<see cref="http://schema.org/exchangeRateSpread"/>
    ///</summary>
    public const string exchangeRateSpread = "http://schema.org/exchangeRateSpread";

    ///<summary>
    ///A sub property of instrument. The exercise plan used on this action.
    ///<see cref="http://schema.org/exercisePlan"/>
    ///</summary>
    public const string exercisePlan = "http://schema.org/exercisePlan";

    ///<summary>
    ///A sub property of instrument. The diet used in this action.
    ///<see cref="http://schema.org/exerciseRelatedDiet"/>
    ///</summary>
    public const string exerciseRelatedDiet = "http://schema.org/exerciseRelatedDiet";

    ///<summary>
    ///Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.
    ///<see cref="http://schema.org/exerciseType"/>
    ///</summary>
    public const string exerciseType = "http://schema.org/exerciseType";

    ///<summary>
    ///exif data for this object.
    ///<see cref="http://schema.org/exifData"/>
    ///</summary>
    public const string exifData = "http://schema.org/exifData";

    ///<summary>
    ///The earliest date the package may arrive.
    ///<see cref="http://schema.org/expectedArrivalFrom"/>
    ///</summary>
    public const string expectedArrivalFrom = "http://schema.org/expectedArrivalFrom";

    ///<summary>
    ///The latest date the package may arrive.
    ///<see cref="http://schema.org/expectedArrivalUntil"/>
    ///</summary>
    public const string expectedArrivalUntil = "http://schema.org/expectedArrivalUntil";

    ///<summary>
    ///The likely outcome in either the short term or long term of the medical condition.
    ///<see cref="http://schema.org/expectedPrognosis"/>
    ///</summary>
    public const string expectedPrognosis = "http://schema.org/expectedPrognosis";

    ///<summary>
    ///An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.
    ///<see cref="http://schema.org/expectsAcceptanceOf"/>
    ///</summary>
    public const string expectsAcceptanceOf = "http://schema.org/expectsAcceptanceOf";

    ///<summary>
    ///Description of skills and experience needed for the position or Occupation.
    ///<see cref="http://schema.org/experienceRequirements"/>
    ///</summary>
    public const string experienceRequirements = "http://schema.org/experienceRequirements";

    ///<summary>
    ///Medical expert advice related to the plan.
    ///<see cref="http://schema.org/expertConsiderations"/>
    ///</summary>
    public const string expertConsiderations = "http://schema.org/expertConsiderations";

    ///<summary>
    ///Date the content expires and is no longer useful or available. For example a <a class="localLink" href="http://schema.org/VideoObject">VideoObject</a> or <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a> whose availability or relevance is time-limited, or a <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.
    ///<see cref="http://schema.org/expires"/>
    ///</summary>
    public const string expires = "http://schema.org/expires";

    ///<summary>
    ///Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.
    ///<see cref="http://schema.org/familyName"/>
    ///</summary>
    public const string familyName = "http://schema.org/familyName";

    ///<summary>
    ///The number of grams of fat.
    ///<see cref="http://schema.org/fatContent"/>
    ///</summary>
    public const string fatContent = "http://schema.org/fatContent";

    ///<summary>
    ///The fax number.
    ///<see cref="http://schema.org/faxNumber"/>
    ///</summary>
    public const string faxNumber = "http://schema.org/faxNumber";

    ///<summary>
    ///Features or modules provided by this application (and possibly required by other applications).
    ///<see cref="http://schema.org/featureList"/>
    ///</summary>
    public const string featureList = "http://schema.org/featureList";

    ///<summary>
    ///Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.
    ///<see cref="http://schema.org/feesAndCommissionsSpecification"/>
    ///</summary>
    public const string feesAndCommissionsSpecification = "http://schema.org/feesAndCommissionsSpecification";

    ///<summary>
    ///The number of grams of fiber.
    ///<see cref="http://schema.org/fiberContent"/>
    ///</summary>
    public const string fiberContent = "http://schema.org/fiberContent";

    ///<summary>
    ///Media type, typically MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.
    ///<see cref="http://schema.org/fileFormat"/>
    ///</summary>
    public const string fileFormat = "http://schema.org/fileFormat";

    ///<summary>
    ///Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.
    ///<see cref="http://schema.org/fileSize"/>
    ///</summary>
    public const string fileSize = "http://schema.org/fileSize";

    ///<summary>
    ///Indicates the first known occurence of a <a class="localLink" href="http://schema.org/Claim">Claim</a> in some <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.
    ///<see cref="http://schema.org/firstAppearance"/>
    ///</summary>
    public const string firstAppearance = "http://schema.org/firstAppearance";

    ///<summary>
    ///The date and place the work was first performed.
    ///<see cref="http://schema.org/firstPerformance"/>
    ///</summary>
    public const string firstPerformance = "http://schema.org/firstPerformance";

    ///<summary>
    ///The distance of the flight.
    ///<see cref="http://schema.org/flightDistance"/>
    ///</summary>
    public const string flightDistance = "http://schema.org/flightDistance";

    ///<summary>
    ///The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.
    ///<see cref="http://schema.org/flightNumber"/>
    ///</summary>
    public const string flightNumber = "http://schema.org/flightNumber";

    ///<summary>
    ///A floor limit is the amount of money above which credit card transactions must be authorized.
    ///<see cref="http://schema.org/floorLimit"/>
    ///</summary>
    public const string floorLimit = "http://schema.org/floorLimit";

    ///<summary>
    ///The size of the accommodation, e.g. in square meter or squarefoot.
    ///Typical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard
    ///<see cref="http://schema.org/floorSize"/>
    ///</summary>
    public const string floorSize = "http://schema.org/floorSize";

    ///<summary>
    ///A sub property of object. The person or organization being followed.
    ///<see cref="http://schema.org/followee"/>
    ///</summary>
    public const string followee = "http://schema.org/followee";

    ///<summary>
    ///The most generic uni-directional social relation.
    ///<see cref="http://schema.org/follows"/>
    ///</summary>
    public const string follows = "http://schema.org/follows";

    ///<summary>
    ///Typical or recommended followup care after the procedure is performed.
    ///<see cref="http://schema.org/followup"/>
    ///</summary>
    public const string followup = "http://schema.org/followup";

    ///<summary>
    ///A sub property of location. The specific food establishment where the action occurred.
    ///<see cref="http://schema.org/foodEstablishment"/>
    ///</summary>
    public const string foodEstablishment = "http://schema.org/foodEstablishment";

    ///<summary>
    ///A sub property of location. The specific food event where the action occurred.
    ///<see cref="http://schema.org/foodEvent"/>
    ///</summary>
    public const string foodEvent = "http://schema.org/foodEvent";

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.
    ///<see cref="http://schema.org/foodWarning"/>
    ///</summary>
    public const string foodWarning = "http://schema.org/foodWarning";

    ///<summary>
    ///A person who founded this organization.
    ///<see cref="http://schema.org/founders"/>
    ///</summary>
    public const string founders = "http://schema.org/founders";

    ///<summary>
    ///The date that this organization was founded.
    ///<see cref="http://schema.org/foundingDate"/>
    ///</summary>
    public const string foundingDate = "http://schema.org/foundingDate";

    ///<summary>
    ///The place where the Organization was founded.
    ///<see cref="http://schema.org/foundingLocation"/>
    ///</summary>
    public const string foundingLocation = "http://schema.org/foundingLocation";

    ///<summary>
    ///A flag to signal that the item, event, or place is accessible for free.
    ///<see cref="http://schema.org/free"/>
    ///</summary>
    public const string free = "http://schema.org/free";

    ///<summary>
    ///A sub property of location. The original location of the object or the agent before the action.
    ///<see cref="http://schema.org/fromLocation"/>
    ///</summary>
    public const string fromLocation = "http://schema.org/fromLocation";

    ///<summary>
    ///The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.<br/><br/>
    ///
    ///Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).
    ///<see cref="http://schema.org/fuelCapacity"/>
    ///</summary>
    public const string fuelCapacity = "http://schema.org/fuelCapacity";

    ///<summary>
    ///The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. L/100 km.</li>
    ///<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
    ///<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel consumption to another value.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/fuelConsumption"/>
    ///</summary>
    public const string fuelConsumption = "http://schema.org/fuelConsumption";

    ///<summary>
    ///The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use <a class="localLink" href="http://schema.org/unitText">unitText</a> to indicate the unit of measurement, e.g. mpg or km/L.</li>
    ///<li>Note 2: There are two ways of indicating the fuel consumption, <a class="localLink" href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8 liters per 100 km) and <a class="localLink" href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30 miles per gallon). They are reciprocal.</li>
    ///<li>Note 3: Often, the absolute value is useful only when related to driving speed ("at 80 km/h") or usage pattern ("city traffic"). You can use <a class="localLink" href="http://schema.org/valueReference">valueReference</a> to link the value for the fuel economy to another value.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/fuelEfficiency"/>
    ///</summary>
    public const string fuelEfficiency = "http://schema.org/fuelEfficiency";

    ///<summary>
    ///The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.
    ///<see cref="http://schema.org/fuelType"/>
    ///</summary>
    public const string fuelType = "http://schema.org/fuelType";

    ///<summary>
    ///Function of the anatomical structure.
    ///<see cref="http://schema.org/function"/>
    ///</summary>
    public const string function = "http://schema.org/function";

    ///<summary>
    ///The degree of mobility the joint allows.
    ///<see cref="http://schema.org/functionalClass"/>
    ///</summary>
    public const string functionalClass = "http://schema.org/functionalClass";

    ///<summary>
    ///Indicates an item funded or sponsored through a <a class="localLink" href="http://schema.org/Grant">Grant</a>.
    ///<see cref="http://schema.org/fundedItem"/>
    ///</summary>
    public const string fundedItem = "http://schema.org/fundedItem";

    ///<summary>
    ///A person or organization that supports (sponsors) something through some kind of financial contribution.
    ///<see cref="http://schema.org/funder"/>
    ///</summary>
    public const string funder = "http://schema.org/funder";

    ///<summary>
    ///An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.
    ///<see cref="http://schema.org/gameItem"/>
    ///</summary>
    public const string gameItem = "http://schema.org/gameItem";

    ///<summary>
    ///Real or fictional location of the game (or part of game).
    ///<see cref="http://schema.org/gameLocation"/>
    ///</summary>
    public const string gameLocation = "http://schema.org/gameLocation";

    ///<summary>
    ///The electronic systems used to play <a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video games</a>.
    ///<see cref="http://schema.org/gamePlatform"/>
    ///</summary>
    public const string gamePlatform = "http://schema.org/gamePlatform";

    ///<summary>
    ///Links to tips, tactics, etc.
    ///<see cref="http://schema.org/gameTip"/>
    ///</summary>
    public const string gameTip = "http://schema.org/gameTip";

    ///<summary>
    ///Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.
    ///<see cref="http://schema.org/gender"/>
    ///</summary>
    public const string gender = "http://schema.org/gender";

    ///<summary>
    ///The geo coordinates of the place.
    ///<see cref="http://schema.org/geo"/>
    ///</summary>
    public const string geo = "http://schema.org/geo";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. "a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoContains"/>
    ///</summary>
    public const string geoContains = "http://schema.org/geoContains";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCoveredBy"/>
    ///</summary>
    public const string geoCoveredBy = "http://schema.org/geoCoveredBy";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. "Every point of b is a point of (the interior or boundary of) a". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCovers"/>
    ///</summary>
    public const string geoCovers = "http://schema.org/geoCovers";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: "a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them". As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoCrosses"/>
    ///</summary>
    public const string geoCrosses = "http://schema.org/geoCrosses";

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: they have no point in common. They form a set of disconnected geometries." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)
    ///<see cref="http://schema.org/geoDisjoint"/>
    ///</summary>
    public const string geoDisjoint = "http://schema.org/geoDisjoint";

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other" (a symmetric relationship)
    ///<see cref="http://schema.org/geoEquals"/>
    ///</summary>
    public const string geoEquals = "http://schema.org/geoEquals";

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoIntersects"/>
    ///</summary>
    public const string geoIntersects = "http://schema.org/geoIntersects";

    ///<summary>
    ///Indicates the GeoCoordinates at the centre of a GeoShape e.g. GeoCircle.
    ///<see cref="http://schema.org/geoMidpoint"/>
    ///</summary>
    public const string geoMidpoint = "http://schema.org/geoMidpoint";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoOverlaps"/>
    ///</summary>
    public const string geoOverlaps = "http://schema.org/geoOverlaps";

    ///<summary>
    ///Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).
    ///<see cref="http://schema.org/geoRadius"/>
    ///</summary>
    public const string geoRadius = "http://schema.org/geoRadius";

    ///<summary>
    ///Represents spatial relations in which two geometries (or the places they represent) touch: they have at least one boundary point in common, but no interior points." (a symmetric relationship, as defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a> )
    ///<see cref="http://schema.org/geoTouches"/>
    ///</summary>
    public const string geoTouches = "http://schema.org/geoTouches";

    ///<summary>
    ///Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
    ///<see cref="http://schema.org/geoWithin"/>
    ///</summary>
    public const string geoWithin = "http://schema.org/geoWithin";

    ///<summary>
    ///The geographic area associated with the audience.
    ///<see cref="http://schema.org/geographicArea"/>
    ///</summary>
    public const string geographicArea = "http://schema.org/geographicArea";

    ///<summary>
    ///Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.
    ///<see cref="http://schema.org/givenName"/>
    ///</summary>
    public const string givenName = "http://schema.org/givenName";

    ///<summary>
    ///The <a href="http://www.gs1.org/gln">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
    ///<see cref="http://schema.org/globalLocationNumber"/>
    ///</summary>
    public const string globalLocationNumber = "http://schema.org/globalLocationNumber";

    ///<summary>
    ///The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.
    ///<see cref="http://schema.org/gracePeriod"/>
    ///</summary>
    public const string gracePeriod = "http://schema.org/gracePeriod";

    ///<summary>
    ///The person, organization, contact point, or audience that has been granted this permission.
    ///<see cref="http://schema.org/grantee"/>
    ///</summary>
    public const string grantee = "http://schema.org/grantee";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is greater than the object.
    ///<see cref="http://schema.org/greater"/>
    ///</summary>
    public const string greater = "http://schema.org/greater";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
    ///<see cref="http://schema.org/greaterOrEqual"/>
    ///</summary>
    public const string greaterOrEqual = "http://schema.org/greaterOrEqual";

    ///<summary>
    ///The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin12"/>
    ///</summary>
    public const string gtin12 = "http://schema.org/gtin12";

    ///<summary>
    ///The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin13"/>
    ///</summary>
    public const string gtin13 = "http://schema.org/gtin13";

    ///<summary>
    ///The GTIN-14 code of the product, or the product to which the offer refers. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin14"/>
    ///</summary>
    public const string gtin14 = "http://schema.org/gtin14";

    ///<summary>
    ///The <a href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN Summary</a> for more details.
    ///<see cref="http://schema.org/gtin8"/>
    ///</summary>
    public const string gtin8 = "http://schema.org/gtin8";

    ///<summary>
    ///A medical guideline related to this entity.
    ///<see cref="http://schema.org/guideline"/>
    ///</summary>
    public const string guideline = "http://schema.org/guideline";

    ///<summary>
    ///Date on which this guideline's recommendation was made.
    ///<see cref="http://schema.org/guidelineDate"/>
    ///</summary>
    public const string guidelineDate = "http://schema.org/guidelineDate";

    ///<summary>
    ///The medical conditions, treatments, etc. that are the subject of the guideline.
    ///<see cref="http://schema.org/guidelineSubject"/>
    ///</summary>
    public const string guidelineSubject = "http://schema.org/guidelineSubject";

    ///<summary>
    ///A Category code contained in this code set.
    ///<see cref="http://schema.org/hasCategoryCode"/>
    ///</summary>
    public const string hasCategoryCode = "http://schema.org/hasCategoryCode";

    ///<summary>
    ///An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.
    ///<see cref="http://schema.org/hasCourseInstance"/>
    ///</summary>
    public const string hasCourseInstance = "http://schema.org/hasCourseInstance";

    ///<summary>
    ///A credential awarded to the Person or Organization.
    ///<see cref="http://schema.org/hasCredential"/>
    ///</summary>
    public const string hasCredential = "http://schema.org/hasCredential";

    ///<summary>
    ///Method used for delivery or shipping.
    ///<see cref="http://schema.org/hasDeliveryMethod"/>
    ///</summary>
    public const string hasDeliveryMethod = "http://schema.org/hasDeliveryMethod";

    ///<summary>
    ///A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to "public".
    ///<see cref="http://schema.org/hasDigitalDocumentPermission"/>
    ///</summary>
    public const string hasDigitalDocumentPermission = "http://schema.org/hasDigitalDocumentPermission";

    ///<summary>
    ///A food or drink item contained in a menu or menu section.
    ///<see cref="http://schema.org/hasMenuItem"/>
    ///</summary>
    public const string hasMenuItem = "http://schema.org/hasMenuItem";

    ///<summary>
    ///A subgrouping of the menu (by dishes, course, serving time period, etc.).
    ///<see cref="http://schema.org/hasMenuSection"/>
    ///</summary>
    public const string hasMenuSection = "http://schema.org/hasMenuSection";

    ///<summary>
    ///The Person's occupation. For past professions, use Role for expressing dates.
    ///<see cref="http://schema.org/hasOccupation"/>
    ///</summary>
    public const string hasOccupation = "http://schema.org/hasOccupation";

    ///<summary>
    ///Indicates an OfferCatalog listing for this Organization, Person, or Service.
    ///<see cref="http://schema.org/hasOfferCatalog"/>
    ///</summary>
    public const string hasOfferCatalog = "http://schema.org/hasOfferCatalog";

    ///<summary>
    ///Points-of-Sales operated by the organization or person.
    ///<see cref="http://schema.org/hasPOS"/>
    ///</summary>
    public const string hasPOS = "http://schema.org/hasPOS";

    ///<summary>
    ///Indicates a ProductReturnPolicy that may be applicable.
    ///<see cref="http://schema.org/hasProductReturnPolicy"/>
    ///</summary>
    public const string hasProductReturnPolicy = "http://schema.org/hasProductReturnPolicy";

    ///<summary>
    ///Headline of the article.
    ///<see cref="http://schema.org/headline"/>
    ///</summary>
    public const string headline = "http://schema.org/headline";

    ///<summary>
    ///Specifying the health condition(s) of a patient, medical study, or other target audience.
    ///<see cref="http://schema.org/healthCondition"/>
    ///</summary>
    public const string healthCondition = "http://schema.org/healthCondition";

    ///<summary>
    ///Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?
    ///<see cref="http://schema.org/healthPlanCoinsuranceOption"/>
    ///</summary>
    public const string healthPlanCoinsuranceOption = "http://schema.org/healthPlanCoinsuranceOption";

    ///<summary>
    ///Whether The rate of coinsurance expressed as a number between 0.0 and 1.0.
    ///<see cref="http://schema.org/healthPlanCoinsuranceRate"/>
    ///</summary>
    public const string healthPlanCoinsuranceRate = "http://schema.org/healthPlanCoinsuranceRate";

    ///<summary>
    ///Whether The copay amount.
    ///<see cref="http://schema.org/healthPlanCopay"/>
    ///</summary>
    public const string healthPlanCopay = "http://schema.org/healthPlanCopay";

    ///<summary>
    ///Whether the copay is before or after deductible, etc. TODO: Is this a closed set?
    ///<see cref="http://schema.org/healthPlanCopayOption"/>
    ///</summary>
    public const string healthPlanCopayOption = "http://schema.org/healthPlanCopayOption";

    ///<summary>
    ///Whether The costs to the patient for services under this network or formulary.
    ///<see cref="http://schema.org/healthPlanCostSharing"/>
    ///</summary>
    public const string healthPlanCostSharing = "http://schema.org/healthPlanCostSharing";

    ///<summary>
    ///TODO.
    ///<see cref="http://schema.org/healthPlanDrugOption"/>
    ///</summary>
    public const string healthPlanDrugOption = "http://schema.org/healthPlanDrugOption";

    ///<summary>
    ///The tier(s) of drugs offered by this formulary or insurance plan.
    ///<see cref="http://schema.org/healthPlanDrugTier"/>
    ///</summary>
    public const string healthPlanDrugTier = "http://schema.org/healthPlanDrugTier";

    ///<summary>
    ///The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)
    ///<see cref="http://schema.org/healthPlanId"/>
    ///</summary>
    public const string healthPlanId = "http://schema.org/healthPlanId";

    ///<summary>
    ///The URL that goes directly to the plan brochure for the specific standard plan or plan variation.
    ///<see cref="http://schema.org/healthPlanMarketingUrl"/>
    ///</summary>
    public const string healthPlanMarketingUrl = "http://schema.org/healthPlanMarketingUrl";

    ///<summary>
    ///Name or unique ID of network. (Networks are often reused across different insurance plans).
    ///<see cref="http://schema.org/healthPlanNetworkId"/>
    ///</summary>
    public const string healthPlanNetworkId = "http://schema.org/healthPlanNetworkId";

    ///<summary>
    ///The tier(s) for this network.
    ///<see cref="http://schema.org/healthPlanNetworkTier"/>
    ///</summary>
    public const string healthPlanNetworkTier = "http://schema.org/healthPlanNetworkTier";

    ///<summary>
    ///The category or type of pharmacy associated with this cost sharing.
    ///<see cref="http://schema.org/healthPlanPharmacyCategory"/>
    ///</summary>
    public const string healthPlanPharmacyCategory = "http://schema.org/healthPlanPharmacyCategory";

    ///<summary>
    ///The height of the item.
    ///<see cref="http://schema.org/height"/>
    ///</summary>
    public const string height = "http://schema.org/height";

    ///<summary>
    ///The highest price of all offers available.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/highPrice"/>
    ///</summary>
    public const string highPrice = "http://schema.org/highPrice";

    ///<summary>
    ///Organization offering the job position.
    ///<see cref="http://schema.org/hiringOrganization"/>
    ///</summary>
    public const string hiringOrganization = "http://schema.org/hiringOrganization";

    ///<summary>
    ///A contact location for a person's residence.
    ///<see cref="http://schema.org/homeLocation"/>
    ///</summary>
    public const string homeLocation = "http://schema.org/homeLocation";

    ///<summary>
    ///The home team in a sports event.
    ///<see cref="http://schema.org/homeTeam"/>
    ///</summary>
    public const string homeTeam = "http://schema.org/homeTeam";

    ///<summary>
    ///An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
    ///<see cref="http://schema.org/honorificPrefix"/>
    ///</summary>
    public const string honorificPrefix = "http://schema.org/honorificPrefix";

    ///<summary>
    ///An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.
    ///<see cref="http://schema.org/honorificSuffix"/>
    ///</summary>
    public const string honorificSuffix = "http://schema.org/honorificSuffix";

    ///<summary>
    ///A hospital with which the physician or office is affiliated.
    ///<see cref="http://schema.org/hospitalAffiliation"/>
    ///</summary>
    public const string hospitalAffiliation = "http://schema.org/hospitalAffiliation";

    ///<summary>
    ///The organization (airline, travelers' club, etc.) the membership is made with.
    ///<see cref="http://schema.org/hostingOrganization"/>
    ///</summary>
    public const string hostingOrganization = "http://schema.org/hostingOrganization";

    ///<summary>
    ///The hours during which this service or contact is available.
    ///<see cref="http://schema.org/hoursAvailable"/>
    ///</summary>
    public const string hoursAvailable = "http://schema.org/hoursAvailable";

    ///<summary>
    ///How the procedure is performed.
    ///<see cref="http://schema.org/howPerformed"/>
    ///</summary>
    public const string howPerformed = "http://schema.org/howPerformed";

    ///<summary>
    ///An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.
    ///<see cref="http://schema.org/httpMethod"/>
    ///</summary>
    public const string httpMethod = "http://schema.org/httpMethod";

    ///<summary>
    ///IATA identifier for an airline or airport.
    ///<see cref="http://schema.org/iataCode"/>
    ///</summary>
    public const string iataCode = "http://schema.org/iataCode";

    ///<summary>
    ///ICAO identifier for an airport.
    ///<see cref="http://schema.org/icaoCode"/>
    ///</summary>
    public const string icaoCode = "http://schema.org/icaoCode";

    ///<summary>
    ///A physical examination that can identify this sign.
    ///<see cref="http://schema.org/identifyingExam"/>
    ///</summary>
    public const string identifyingExam = "http://schema.org/identifyingExam";

    ///<summary>
    ///A diagnostic test that can identify this sign.
    ///<see cref="http://schema.org/identifyingTest"/>
    ///</summary>
    public const string identifyingTest = "http://schema.org/identifyingTest";

    ///<summary>
    ///The illustrator of the book.
    ///<see cref="http://schema.org/illustrator"/>
    ///</summary>
    public const string illustrator = "http://schema.org/illustrator";

    ///<summary>
    ///Imaging technique used.
    ///<see cref="http://schema.org/imagingTechnique"/>
    ///</summary>
    public const string imagingTechnique = "http://schema.org/imagingTechnique";

    ///<summary>
    ///The album to which this recording belongs.
    ///<see cref="http://schema.org/inAlbum"/>
    ///</summary>
    public const string inAlbum = "http://schema.org/inAlbum";

    ///<summary>
    ///The CableOrSatelliteService offering the channel.
    ///<see cref="http://schema.org/inBroadcastLineup"/>
    ///</summary>
    public const string inBroadcastLineup = "http://schema.org/inBroadcastLineup";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/CategoryCodeSet">CategoryCodeSet</a> that contains this category code.
    ///<see cref="http://schema.org/inCodeSet"/>
    ///</summary>
    public const string inCodeSet = "http://schema.org/inCodeSet";

    ///<summary>
    ///The playlist to which this recording belongs.
    ///<see cref="http://schema.org/inPlaylist"/>
    ///</summary>
    public const string inPlaylist = "http://schema.org/inPlaylist";

    ///<summary>
    ///Are in-store returns offered?
    ///<see cref="http://schema.org/inStoreReturnsOffered"/>
    ///</summary>
    public const string inStoreReturnsOffered = "http://schema.org/inStoreReturnsOffered";

    ///<summary>
    ///Qualification, candidature, degree, application that Thesis supports.
    ///<see cref="http://schema.org/inSupportOf"/>
    ///</summary>
    public const string inSupportOf = "http://schema.org/inSupportOf";

    ///<summary>
    ///Description of bonus and commission compensation aspects of the job.
    ///<see cref="http://schema.org/incentives"/>
    ///</summary>
    public const string incentives = "http://schema.org/incentives";

    ///<summary>
    ///Smaller compositions included in this work (e.g. a movement in a symphony).
    ///<see cref="http://schema.org/includedComposition"/>
    ///</summary>
    public const string includedComposition = "http://schema.org/includedComposition";

    ///<summary>
    ///A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').
    ///<see cref="http://schema.org/includedDataCatalog"/>
    ///</summary>
    public const string includedDataCatalog = "http://schema.org/includedDataCatalog";

    ///<summary>
    ///The insurance plans that cover this drug.
    ///<see cref="http://schema.org/includedInHealthInsurancePlan"/>
    ///</summary>
    public const string includedInHealthInsurancePlan = "http://schema.org/includedInHealthInsurancePlan";

    ///<summary>
    ///A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.
    ///<see cref="http://schema.org/includedRiskFactor"/>
    ///</summary>
    public const string includedRiskFactor = "http://schema.org/includedRiskFactor";

    ///<summary>
    ///Attraction located at destination.
    ///<see cref="http://schema.org/includesAttraction"/>
    ///</summary>
    public const string includesAttraction = "http://schema.org/includesAttraction";

    ///<summary>
    ///Formularies covered by this plan.
    ///<see cref="http://schema.org/includesHealthPlanFormulary"/>
    ///</summary>
    public const string includesHealthPlanFormulary = "http://schema.org/includesHealthPlanFormulary";

    ///<summary>
    ///Networks covered by this plan.
    ///<see cref="http://schema.org/includesHealthPlanNetwork"/>
    ///</summary>
    public const string includesHealthPlanNetwork = "http://schema.org/includesHealthPlanNetwork";

    ///<summary>
    ///This links to a node or nodes indicating the exact quantity of the products included in the offer.
    ///<see cref="http://schema.org/includesObject"/>
    ///</summary>
    public const string includesObject = "http://schema.org/includesObject";

    ///<summary>
    ///The condition, complication, etc. influenced by this factor.
    ///<see cref="http://schema.org/increasesRiskOf"/>
    ///</summary>
    public const string increasesRiskOf = "http://schema.org/increasesRiskOf";

    ///<summary>
    ///A factor that indicates use of this therapy for treatment and/or prevention of a condition, symptom, etc. For therapies such as drugs, indications can include both officially-approved indications as well as off-label uses. These can be distinguished by using the ApprovedIndication subtype of MedicalIndication.
    ///<see cref="http://schema.org/indication"/>
    ///</summary>
    public const string indication = "http://schema.org/indication";

    ///<summary>
    ///The industry associated with the job position.
    ///<see cref="http://schema.org/industry"/>
    ///</summary>
    public const string industry = "http://schema.org/industry";

    ///<summary>
    ///The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>
    ///
    ///See also <a class="localLink" href="http://schema.org/eligibleRegion">eligibleRegion</a>.
    ///<see cref="http://schema.org/ineligibleRegion"/>
    ///</summary>
    public const string ineligibleRegion = "http://schema.org/ineligibleRegion";

    ///<summary>
    ///The actual infectious agent, such as a specific bacterium.
    ///<see cref="http://schema.org/infectiousAgent"/>
    ///</summary>
    public const string infectiousAgent = "http://schema.org/infectiousAgent";

    ///<summary>
    ///The class of infectious agent (bacteria, prion, etc.) that causes the disease.
    ///<see cref="http://schema.org/infectiousAgentClass"/>
    ///</summary>
    public const string infectiousAgentClass = "http://schema.org/infectiousAgentClass";

    ///<summary>
    ///A single ingredient used in the recipe, e.g. sugar, flour or garlic.
    ///<see cref="http://schema.org/ingredients"/>
    ///</summary>
    public const string ingredients = "http://schema.org/ingredients";

    ///<summary>
    ///The individual who traces over the pencil drawings in ink after pencils are complete.
    ///<see cref="http://schema.org/inker"/>
    ///</summary>
    public const string inker = "http://schema.org/inker";

    ///<summary>
    ///The place of attachment of a muscle, or what the muscle moves.
    ///<see cref="http://schema.org/insertion"/>
    ///</summary>
    public const string insertion = "http://schema.org/insertion";

    ///<summary>
    ///URL at which the app may be installed, if different from the URL of the item.
    ///<see cref="http://schema.org/installUrl"/>
    ///</summary>
    public const string installUrl = "http://schema.org/installUrl";

    ///<summary>
    ///A person assigned to instruct or provide instructional assistance for the <a class="localLink" href="http://schema.org/CourseInstance">CourseInstance</a>.
    ///<see cref="http://schema.org/instructor"/>
    ///</summary>
    public const string instructor = "http://schema.org/instructor";

    ///<summary>
    ///Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.
    ///<see cref="http://schema.org/intensity"/>
    ///</summary>
    public const string intensity = "http://schema.org/intensity";

    ///<summary>
    ///Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.
    ///<see cref="http://schema.org/interactingDrug"/>
    ///</summary>
    public const string interactingDrug = "http://schema.org/interactingDrug";

    ///<summary>
    ///This property is deprecated, alongside the UserInteraction types on which it depended.
    ///<see cref="http://schema.org/interactionCount"/>
    ///</summary>
    public const string interactionCount = "http://schema.org/interactionCount";

    ///<summary>
    ///The WebSite or SoftwareApplication where the interactions took place.
    ///<see cref="http://schema.org/interactionService"/>
    ///</summary>
    public const string interactionService = "http://schema.org/interactionService";

    ///<summary>
    ///The Action representing the type of interaction. For up votes, +1s, etc. use <a class="localLink" href="http://schema.org/LikeAction">LikeAction</a>. For down votes use <a class="localLink" href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise, use the most specific Action.
    ///<see cref="http://schema.org/interactionType"/>
    ///</summary>
    public const string interactionType = "http://schema.org/interactionType";

    ///<summary>
    ///The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
    ///<see cref="http://schema.org/interactivityType"/>
    ///</summary>
    public const string interactivityType = "http://schema.org/interactivityType";

    ///<summary>
    ///The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.
    ///<see cref="http://schema.org/interestRate"/>
    ///</summary>
    public const string interestRate = "http://schema.org/interestRate";

    ///<summary>
    ///The current approximate inventory level for the item or items.
    ///<see cref="http://schema.org/inventoryLevel"/>
    ///</summary>
    public const string inventoryLevel = "http://schema.org/inventoryLevel";

    ///<summary>
    ///Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.
    ///<see cref="http://schema.org/inverseOf"/>
    ///</summary>
    public const string inverseOf = "http://schema.org/inverseOf";

    ///<summary>
    ///Whether the provider is accepting new patients.
    ///<see cref="http://schema.org/isAcceptingNewPatients"/>
    ///</summary>
    public const string isAcceptingNewPatients = "http://schema.org/isAcceptingNewPatients";

    ///<summary>
    ///A pointer to another product (or multiple products) for which this product is an accessory or spare part.
    ///<see cref="http://schema.org/isAccessoryOrSparePartFor"/>
    ///</summary>
    public const string isAccessoryOrSparePartFor = "http://schema.org/isAccessoryOrSparePartFor";

    ///<summary>
    ///True if the drug is available in a generic form (regardless of name).
    ///<see cref="http://schema.org/isAvailableGenerically"/>
    ///</summary>
    public const string isAvailableGenerically = "http://schema.org/isAvailableGenerically";

    ///<summary>
    ///A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.
    ///<see cref="http://schema.org/isBasedOnUrl"/>
    ///</summary>
    public const string isBasedOnUrl = "http://schema.org/isBasedOnUrl";

    ///<summary>
    ///A pointer to another product (or multiple products) for which this product is a consumable.
    ///<see cref="http://schema.org/isConsumableFor"/>
    ///</summary>
    public const string isConsumableFor = "http://schema.org/isConsumableFor";

    ///<summary>
    ///Indicates whether this content is family friendly.
    ///<see cref="http://schema.org/isFamilyFriendly"/>
    ///</summary>
    public const string isFamilyFriendly = "http://schema.org/isFamilyFriendly";

    ///<summary>
    ///Was the offer accepted as a gift for someone other than the buyer.
    ///<see cref="http://schema.org/isGift"/>
    ///</summary>
    public const string isGift = "http://schema.org/isGift";

    ///<summary>
    ///True is the broadcast is of a live event.
    ///<see cref="http://schema.org/isLiveBroadcast"/>
    ///</summary>
    public const string isLiveBroadcast = "http://schema.org/isLiveBroadcast";

    ///<summary>
    ///True if this item's name is a proprietary/brand name (vs. generic name).
    ///<see cref="http://schema.org/isProprietary"/>
    ///</summary>
    public const string isProprietary = "http://schema.org/isProprietary";

    ///<summary>
    ///A pointer to another, somehow related product (or multiple products).
    ///<see cref="http://schema.org/isRelatedTo"/>
    ///</summary>
    public const string isRelatedTo = "http://schema.org/isRelatedTo";

    ///<summary>
    ///A pointer to another, functionally similar product (or multiple products).
    ///<see cref="http://schema.org/isSimilarTo"/>
    ///</summary>
    public const string isSimilarTo = "http://schema.org/isSimilarTo";

    ///<summary>
    ///A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.
    ///<see cref="http://schema.org/isVariantOf"/>
    ///</summary>
    public const string isVariantOf = "http://schema.org/isVariantOf";

    ///<summary>
    ///The ISBN of the book.
    ///<see cref="http://schema.org/isbn"/>
    ///</summary>
    public const string isbn = "http://schema.org/isbn";

    ///<summary>
    ///The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
    ///<see cref="http://schema.org/isicV4"/>
    ///</summary>
    public const string isicV4 = "http://schema.org/isicV4";

    ///<summary>
    ///The International Standard Recording Code for the recording.
    ///<see cref="http://schema.org/isrcCode"/>
    ///</summary>
    public const string isrcCode = "http://schema.org/isrcCode";

    ///<summary>
    ///The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.
    ///<see cref="http://schema.org/issn"/>
    ///</summary>
    public const string issn = "http://schema.org/issn";

    ///<summary>
    ///Identifies the issue of publication; for example, "iii" or "2".
    ///<see cref="http://schema.org/issueNumber"/>
    ///</summary>
    public const string issueNumber = "http://schema.org/issueNumber";

    ///<summary>
    ///The organization issuing the ticket or permit.
    ///<see cref="http://schema.org/issuedBy"/>
    ///</summary>
    public const string issuedBy = "http://schema.org/issuedBy";

    ///<summary>
    ///The service through with the permit was granted.
    ///<see cref="http://schema.org/issuedThrough"/>
    ///</summary>
    public const string issuedThrough = "http://schema.org/issuedThrough";

    ///<summary>
    ///The International Standard Musical Work Code for the composition.
    ///<see cref="http://schema.org/iswcCode"/>
    ///</summary>
    public const string iswcCode = "http://schema.org/iswcCode";

    ///<summary>
    ///An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')’.
    ///<see cref="http://schema.org/item"/>
    ///</summary>
    public const string item = "http://schema.org/item";

    ///<summary>
    ///A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.
    ///<see cref="http://schema.org/itemCondition"/>
    ///</summary>
    public const string itemCondition = "http://schema.org/itemCondition";

    ///<summary>
    ///For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", "Mary"), existing entities, or use ListItem.<br/><br/>
    ///
    ///Text values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>
    ///
    ///Note: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.
    ///<see cref="http://schema.org/itemListElement"/>
    ///</summary>
    public const string itemListElement = "http://schema.org/itemListElement";

    ///<summary>
    ///Type of ordering (e.g. Ascending, Descending, Unordered).
    ///<see cref="http://schema.org/itemListOrder"/>
    ///</summary>
    public const string itemListOrder = "http://schema.org/itemListOrder";

    ///<summary>
    ///Current location of the item.
    ///<see cref="http://schema.org/itemLocation"/>
    ///</summary>
    public const string itemLocation = "http://schema.org/itemLocation";

    ///<summary>
    ///The item being offered.
    ///<see cref="http://schema.org/itemOffered"/>
    ///</summary>
    public const string itemOffered = "http://schema.org/itemOffered";

    ///<summary>
    ///The item that is being reviewed/rated.
    ///<see cref="http://schema.org/itemReviewed"/>
    ///</summary>
    public const string itemReviewed = "http://schema.org/itemReviewed";

    ///<summary>
    ///Item(s) being shipped.
    ///<see cref="http://schema.org/itemShipped"/>
    ///</summary>
    public const string itemShipped = "http://schema.org/itemShipped";

    ///<summary>
    ///Destination(s) ( <a class="localLink" href="http://schema.org/Place">Place</a> ) that make up a trip. For a trip where destination order is important use <a class="localLink" href="http://schema.org/ItemList">ItemList</a> to specify that order (see examples).
    ///<see cref="http://schema.org/itinerary"/>
    ///</summary>
    public const string itinerary = "http://schema.org/itinerary";

    ///<summary>
    ///An indicator as to whether a position is available for an immediate start.
    ///<see cref="http://schema.org/jobImmediateStart"/>
    ///</summary>
    public const string jobImmediateStart = "http://schema.org/jobImmediateStart";

    ///<summary>
    ///A (typically single) geographic location associated with the job position.
    ///<see cref="http://schema.org/jobLocation"/>
    ///</summary>
    public const string jobLocation = "http://schema.org/jobLocation";

    ///<summary>
    ///A description of the job location (e.g TELECOMMUTE for telecommute jobs).
    ///<see cref="http://schema.org/jobLocationType"/>
    ///</summary>
    public const string jobLocationType = "http://schema.org/jobLocationType";

    ///<summary>
    ///The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.
    ///<see cref="http://schema.org/jobStartDate"/>
    ///</summary>
    public const string jobStartDate = "http://schema.org/jobStartDate";

    ///<summary>
    ///The job title of the person (for example, Financial Manager).
    ///<see cref="http://schema.org/jobTitle"/>
    ///</summary>
    public const string jobTitle = "http://schema.org/jobTitle";

    ///<summary>
    ///Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.
    ///<see cref="http://schema.org/keywords"/>
    ///</summary>
    public const string keywords = "http://schema.org/keywords";

    ///<summary>
    ///A textual description of known damages, both repaired and unrepaired.
    ///<see cref="http://schema.org/knownVehicleDamages"/>
    ///</summary>
    public const string knownVehicleDamages = "http://schema.org/knownVehicleDamages";

    ///<summary>
    ///The most generic bi-directional social/work relation.
    ///<see cref="http://schema.org/knows"/>
    ///</summary>
    public const string knows = "http://schema.org/knows";

    ///<summary>
    ///Of a <a class="localLink" href="http://schema.org/Person">Person</a>, and less typically of an <a class="localLink" href="http://schema.org/Organization">Organization</a>, to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or <a class="localLink" href="http://schema.org/JobPosting">JobPosting</a> descriptions.
    ///<see cref="http://schema.org/knowsAbout"/>
    ///</summary>
    public const string knowsAbout = "http://schema.org/knowsAbout";

    ///<summary>
    ///Of a <a class="localLink" href="http://schema.org/Person">Person</a>, and less typically of an <a class="localLink" href="http://schema.org/Organization">Organization</a>, to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
    ///<see cref="http://schema.org/knowsLanguage"/>
    ///</summary>
    public const string knowsLanguage = "http://schema.org/knowsLanguage";

    ///<summary>
    ///Link to the drug's label details.
    ///<see cref="http://schema.org/labelDetails"/>
    ///</summary>
    public const string labelDetails = "http://schema.org/labelDetails";

    ///<summary>
    ///A sub property of participant. The owner of the real estate property.
    ///<see cref="http://schema.org/landlord"/>
    ///</summary>
    public const string landlord = "http://schema.org/landlord";

    ///<summary>
    ///A sub property of instrument. The language used on this action.
    ///<see cref="http://schema.org/language"/>
    ///</summary>
    public const string language = "http://schema.org/language";

    ///<summary>
    ///Date on which the content on this web page was last reviewed for accuracy and/or completeness.
    ///<see cref="http://schema.org/lastReviewed"/>
    ///</summary>
    public const string lastReviewed = "http://schema.org/lastReviewed";

    ///<summary>
    ///The latitude of a location. For example <code>37.42242</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
    ///<see cref="http://schema.org/latitude"/>
    ///</summary>
    public const string latitude = "http://schema.org/latitude";

    ///<summary>
    ///The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
    ///<see cref="http://schema.org/learningResourceType"/>
    ///</summary>
    public const string learningResourceType = "http://schema.org/learningResourceType";

    ///<summary>
    ///The official name of the organization, e.g. the registered company name.
    ///<see cref="http://schema.org/legalName"/>
    ///</summary>
    public const string legalName = "http://schema.org/legalName";

    ///<summary>
    ///The drug or supplement's legal status, including any controlled substance schedules that apply.
    ///<see cref="http://schema.org/legalStatus"/>
    ///</summary>
    public const string legalStatus = "http://schema.org/legalStatus";

    ///<summary>
    ///Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href="/legislationConsolidates">legislationConsolidates</a> property.
    ///<see cref="http://schema.org/legislationChanges"/>
    ///</summary>
    public const string legislationChanges = "http://schema.org/legislationChanges";

    ///<summary>
    ///Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.
    ///<see cref="http://schema.org/legislationConsolidates"/>
    ///</summary>
    public const string legislationConsolidates = "http://schema.org/legislationConsolidates";

    ///<summary>
    ///The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.
    ///<see cref="http://schema.org/legislationDate"/>
    ///</summary>
    public const string legislationDate = "http://schema.org/legislationDate";

    ///<summary>
    ///The point-in-time at which the provided description of the legislation is valid (e.g. : when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the "National Insurance Contributions Act 2015")
    ///<see cref="http://schema.org/legislationDateVersion"/>
    ///</summary>
    public const string legislationDateVersion = "http://schema.org/legislationDateVersion";

    ///<summary>
    ///An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.
    ///<see cref="http://schema.org/legislationIdentifier"/>
    ///</summary>
    public const string legislationIdentifier = "http://schema.org/legislationIdentifier";

    ///<summary>
    ///The jurisdiction from which the legislation originates.
    ///<see cref="http://schema.org/legislationJurisdiction"/>
    ///</summary>
    public const string legislationJurisdiction = "http://schema.org/legislationJurisdiction";

    ///<summary>
    ///Whether the legislation is currently in force, not in force, or partially in force.
    ///<see cref="http://schema.org/legislationLegalForce"/>
    ///</summary>
    public const string legislationLegalForce = "http://schema.org/legislationLegalForce";

    ///<summary>
    ///The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a "stronger" legal value than the HTML file of the same act.
    ///<see cref="http://schema.org/legislationLegalValue"/>
    ///</summary>
    public const string legislationLegalValue = "http://schema.org/legislationLegalValue";

    ///<summary>
    ///The person or organization that originally passed or made the law : typically parliament (for primary legislation) or government (for secondary legislation). This indicates the "legal author" of the law, as opposed to its physical author.
    ///<see cref="http://schema.org/legislationPassedBy"/>
    ///</summary>
    public const string legislationPassedBy = "http://schema.org/legislationPassedBy";

    ///<summary>
    ///An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.
    ///<see cref="http://schema.org/legislationResponsible"/>
    ///</summary>
    public const string legislationResponsible = "http://schema.org/legislationResponsible";

    ///<summary>
    ///Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.
    ///<see cref="http://schema.org/legislationTransposes"/>
    ///</summary>
    public const string legislationTransposes = "http://schema.org/legislationTransposes";

    ///<summary>
    ///The type of the legislation. Examples of values are "law", "act", "directive", "decree", "regulation", "statutory instrument", "loi organique", "règlement grand-ducal", etc., depending on the country.
    ///<see cref="http://schema.org/legislationType"/>
    ///</summary>
    public const string legislationType = "http://schema.org/legislationType";

    ///<summary>
    ///An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.
    ///<see cref="http://schema.org/leiCode"/>
    ///</summary>
    public const string leiCode = "http://schema.org/leiCode";

    ///<summary>
    ///A sub property of participant. The person that lends the object being borrowed.
    ///<see cref="http://schema.org/lender"/>
    ///</summary>
    public const string lender = "http://schema.org/lender";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is lesser than the object.
    ///<see cref="http://schema.org/lesser"/>
    ///</summary>
    public const string lesser = "http://schema.org/lesser";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
    ///<see cref="http://schema.org/lesserOrEqual"/>
    ///</summary>
    public const string lesserOrEqual = "http://schema.org/lesserOrEqual";

    ///<summary>
    ///The individual who adds lettering, including speech balloons and sound effects, to artwork.
    ///<see cref="http://schema.org/letterer"/>
    ///</summary>
    public const string letterer = "http://schema.org/letterer";

    ///<summary>
    ///A license document that applies to this content, typically indicated by URL.
    ///<see cref="http://schema.org/license"/>
    ///</summary>
    public const string license = "http://schema.org/license";

    ///<summary>
    ///A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.
    ///<see cref="http://schema.org/line"/>
    ///</summary>
    public const string line = "http://schema.org/line";

    ///<summary>
    ///Indicates the relationship type of a Web link.
    ///<see cref="http://schema.org/linkRelationship"/>
    ///</summary>
    public const string linkRelationship = "http://schema.org/linkRelationship";

    ///<summary>
    ///An update to the LiveBlog.
    ///<see cref="http://schema.org/liveBlogUpdate"/>
    ///</summary>
    public const string liveBlogUpdate = "http://schema.org/liveBlogUpdate";

    ///<summary>
    ///Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.
    ///<see cref="http://schema.org/loanMortgageMandateAmount"/>
    ///</summary>
    public const string loanMortgageMandateAmount = "http://schema.org/loanMortgageMandateAmount";

    ///<summary>
    ///The amount of money to pay in a single payment.
    ///<see cref="http://schema.org/loanPaymentAmount"/>
    ///</summary>
    public const string loanPaymentAmount = "http://schema.org/loanPaymentAmount";

    ///<summary>
    ///Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.
    ///<see cref="http://schema.org/loanPaymentFrequency"/>
    ///</summary>
    public const string loanPaymentFrequency = "http://schema.org/loanPaymentFrequency";

    ///<summary>
    ///A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.
    ///<see cref="http://schema.org/loanRepaymentForm"/>
    ///</summary>
    public const string loanRepaymentForm = "http://schema.org/loanRepaymentForm";

    ///<summary>
    ///The duration of the loan or credit agreement.
    ///<see cref="http://schema.org/loanTerm"/>
    ///</summary>
    public const string loanTerm = "http://schema.org/loanTerm";

    ///<summary>
    ///The type of a loan or credit.
    ///<see cref="http://schema.org/loanType"/>
    ///</summary>
    public const string loanType = "http://schema.org/loanType";

    ///<summary>
    ///The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
    ///<see cref="http://schema.org/locationCreated"/>
    ///</summary>
    public const string locationCreated = "http://schema.org/locationCreated";

    ///<summary>
    ///A full description of the lodging unit.
    ///<see cref="http://schema.org/lodgingUnitDescription"/>
    ///</summary>
    public const string lodgingUnitDescription = "http://schema.org/lodgingUnitDescription";

    ///<summary>
    ///Textual description of the unit type (including suite vs. room, size of bed, etc.).
    ///<see cref="http://schema.org/lodgingUnitType"/>
    ///</summary>
    public const string lodgingUnitType = "http://schema.org/lodgingUnitType";

    ///<summary>
    ///An associated logo.
    ///<see cref="http://schema.org/logo"/>
    ///</summary>
    public const string logo = "http://schema.org/logo";

    ///<summary>
    ///The longitude of a location. For example <code>-122.08585</code> (<a href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS 84</a>).
    ///<see cref="http://schema.org/longitude"/>
    ///</summary>
    public const string longitude = "http://schema.org/longitude";

    ///<summary>
    ///A sub property of participant. The loser of the action.
    ///<see cref="http://schema.org/loser"/>
    ///</summary>
    public const string loser = "http://schema.org/loser";

    ///<summary>
    ///The lowest price of all offers available.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/lowPrice"/>
    ///</summary>
    public const string lowPrice = "http://schema.org/lowPrice";

    ///<summary>
    ///The person who wrote the words.
    ///<see cref="http://schema.org/lyricist"/>
    ///</summary>
    public const string lyricist = "http://schema.org/lyricist";

    ///<summary>
    ///The words in the song.
    ///<see cref="http://schema.org/lyrics"/>
    ///</summary>
    public const string lyrics = "http://schema.org/lyrics";

    ///<summary>
    ///The manufacturer of the product.
    ///<see cref="http://schema.org/manufacturer"/>
    ///</summary>
    public const string manufacturer = "http://schema.org/manufacturer";

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/map"/>
    ///</summary>
    public const string map = "http://schema.org/map";

    ///<summary>
    ///Indicates the kind of Map, from the MapCategoryType Enumeration.
    ///<see cref="http://schema.org/mapType"/>
    ///</summary>
    public const string mapType = "http://schema.org/mapType";

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/maps"/>
    ///</summary>
    public const string maps = "http://schema.org/maps";

    ///<summary>
    ///A marginOfError for an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/marginOfError"/>
    ///</summary>
    public const string marginOfError = "http://schema.org/marginOfError";

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a link to the masthead page or a page listing top editorial management.
    ///<see cref="http://schema.org/masthead"/>
    ///</summary>
    public const string masthead = "http://schema.org/masthead";

    ///<summary>
    ///The quantity of the materials being described or an expression of the physical space they occupy.
    ///<see cref="http://schema.org/materialExtent"/>
    ///</summary>
    public const string materialExtent = "http://schema.org/materialExtent";

    ///<summary>
    ///The highest price if the price is a range.
    ///<see cref="http://schema.org/maxPrice"/>
    ///</summary>
    public const string maxPrice = "http://schema.org/maxPrice";

    ///<summary>
    ///The upper value of some characteristic or property.
    ///<see cref="http://schema.org/maxValue"/>
    ///</summary>
    public const string maxValue = "http://schema.org/maxValue";

    ///<summary>
    ///The total number of individuals that may attend an event or venue.
    ///<see cref="http://schema.org/maximumAttendeeCapacity"/>
    ///</summary>
    public const string maximumAttendeeCapacity = "http://schema.org/maximumAttendeeCapacity";

    ///<summary>
    ///Recommended intake of this supplement for a given population as defined by a specific recommending authority.
    ///<see cref="http://schema.org/maximumIntake"/>
    ///</summary>
    public const string maximumIntake = "http://schema.org/maximumIntake";

    ///<summary>
    ///Description of the meals that will be provided or available for purchase.
    ///<see cref="http://schema.org/mealService"/>
    ///</summary>
    public const string mealService = "http://schema.org/mealService";

    ///<summary>
    ///The measuredProperty of an <a class="localLink" href="http://schema.org/Observation">Observation</a>, either a schema.org property, a property from other RDF-compatible systems e.g. W3C RDF Data Cube, or schema.org extensions such as <a href="https://www.gs1.org/voc/?show=properties">GS1's</a>.
    ///<see cref="http://schema.org/measuredProperty"/>
    ///</summary>
    public const string measuredProperty = "http://schema.org/measuredProperty";

    ///<summary>
    ///The measuredValue of an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/measuredValue"/>
    ///</summary>
    public const string measuredValue = "http://schema.org/measuredValue";

    ///<summary>
    ///A technique or technology used in a <a class="localLink" href="http://schema.org/Dataset">Dataset</a> (or <a class="localLink" href="http://schema.org/DataDownload">DataDownload</a>, <a class="localLink" href="http://schema.org/DataCatalog">DataCatalog</a>),
    ///corresponding to the method used for measuring the corresponding variable(s) (described using <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a>). This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but rather as a high level summary for dataset discovery.<br/><br/>
    ///
    ///For example, if <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> is: molecule concentration, <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a> could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence".<br/><br/>
    ///
    ///If the <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> is "depression rating", the <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a> could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory".<br/><br/>
    ///
    ///If there are several <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> properties recorded for some given data object, use a <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a> for each <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> and attach the corresponding <a class="localLink" href="http://schema.org/measurementTechnique">measurementTechnique</a>.
    ///<see cref="http://schema.org/measurementTechnique"/>
    ///</summary>
    public const string measurementTechnique = "http://schema.org/measurementTechnique";

    ///<summary>
    ///The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.
    ///<see cref="http://schema.org/mechanismOfAction"/>
    ///</summary>
    public const string mechanismOfAction = "http://schema.org/mechanismOfAction";

    ///<summary>
    ///The median value.
    ///<see cref="http://schema.org/median"/>
    ///</summary>
    public const string median = "http://schema.org/median";

    ///<summary>
    ///A medical specialty of the provider.
    ///<see cref="http://schema.org/medicalSpecialty"/>
    ///</summary>
    public const string medicalSpecialty = "http://schema.org/medicalSpecialty";

    ///<summary>
    ///The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.
    ///<see cref="http://schema.org/medicineSystem"/>
    ///</summary>
    public const string medicineSystem = "http://schema.org/medicineSystem";

    ///<summary>
    ///Indicates that the vehicle meets the respective emission standard.
    ///<see cref="http://schema.org/meetsEmissionStandard"/>
    ///</summary>
    public const string meetsEmissionStandard = "http://schema.org/meetsEmissionStandard";

    ///<summary>
    ///A member of this organization.
    ///<see cref="http://schema.org/members"/>
    ///</summary>
    public const string members = "http://schema.org/members";

    ///<summary>
    ///A unique identifier for the membership.
    ///<see cref="http://schema.org/membershipNumber"/>
    ///</summary>
    public const string membershipNumber = "http://schema.org/membershipNumber";

    ///<summary>
    ///The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (e.g. stars, miles, etc.)
    ///<see cref="http://schema.org/membershipPointsEarned"/>
    ///</summary>
    public const string membershipPointsEarned = "http://schema.org/membershipPointsEarned";

    ///<summary>
    ///Minimum memory requirements.
    ///<see cref="http://schema.org/memoryRequirements"/>
    ///</summary>
    public const string memoryRequirements = "http://schema.org/memoryRequirements";

    ///<summary>
    ///Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
    ///<see cref="http://schema.org/mentions"/>
    ///</summary>
    public const string mentions = "http://schema.org/mentions";

    ///<summary>
    ///Either the actual menu as a structured representation, as text, or a URL of the menu.
    ///<see cref="http://schema.org/menu"/>
    ///</summary>
    public const string menu = "http://schema.org/menu";

    ///<summary>
    ///Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.
    ///<see cref="http://schema.org/menuAddOn"/>
    ///</summary>
    public const string menuAddOn = "http://schema.org/menuAddOn";

    ///<summary>
    ///'merchant' is an out-dated term for 'seller'.
    ///<see cref="http://schema.org/merchant"/>
    ///</summary>
    public const string merchant = "http://schema.org/merchant";

    ///<summary>
    ///A CreativeWork attached to the message.
    ///<see cref="http://schema.org/messageAttachment"/>
    ///</summary>
    public const string messageAttachment = "http://schema.org/messageAttachment";

    ///<summary>
    ///The total distance travelled by the particular vehicle since its initial production, as read from its odometer.<br/><br/>
    ///
    ///Typical unit code(s): KMT for kilometers, SMI for statute miles
    ///<see cref="http://schema.org/mileageFromOdometer"/>
    ///</summary>
    public const string mileageFromOdometer = "http://schema.org/mileageFromOdometer";

    ///<summary>
    ///The lowest price if the price is a range.
    ///<see cref="http://schema.org/minPrice"/>
    ///</summary>
    public const string minPrice = "http://schema.org/minPrice";

    ///<summary>
    ///The lower value of some characteristic or property.
    ///<see cref="http://schema.org/minValue"/>
    ///</summary>
    public const string minValue = "http://schema.org/minValue";

    ///<summary>
    ///The minimum payment required at this time.
    ///<see cref="http://schema.org/minimumPaymentDue"/>
    ///</summary>
    public const string minimumPaymentDue = "http://schema.org/minimumPaymentDue";

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>, a statement on coverage priorities, including any public agenda or stance on issues.
    ///<see cref="http://schema.org/missionCoveragePrioritiesPolicy"/>
    ///</summary>
    public const string missionCoveragePrioritiesPolicy = "http://schema.org/missionCoveragePrioritiesPolicy";

    ///<summary>
    ///The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.
    ///<see cref="http://schema.org/model"/>
    ///</summary>
    public const string model = "http://schema.org/model";

    ///<summary>
    ///The release date of a vehicle model (often used to differentiate versions of the same make and model).
    ///<see cref="http://schema.org/modelDate"/>
    ///</summary>
    public const string modelDate = "http://schema.org/modelDate";

    ///<summary>
    ///The date and time the reservation was modified.
    ///<see cref="http://schema.org/modifiedTime"/>
    ///</summary>
    public const string modifiedTime = "http://schema.org/modifiedTime";

    ///<summary>
    ///The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.
    ///<see cref="http://schema.org/monthlyMinimumRepaymentAmount"/>
    ///</summary>
    public const string monthlyMinimumRepaymentAmount = "http://schema.org/monthlyMinimumRepaymentAmount";

    ///<summary>
    ///The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.
    ///<see cref="http://schema.org/mpn"/>
    ///</summary>
    public const string mpn = "http://schema.org/mpn";

    ///<summary>
    ///Whether multiple values are allowed for the property.  Default is false.
    ///<see cref="http://schema.org/multipleValues"/>
    ///</summary>
    public const string multipleValues = "http://schema.org/multipleValues";

    ///<summary>
    ///The movement the muscle generates.
    ///<see cref="http://schema.org/muscleAction"/>
    ///</summary>
    public const string muscleAction = "http://schema.org/muscleAction";

    ///<summary>
    ///An arrangement derived from the composition.
    ///<see cref="http://schema.org/musicArrangement"/>
    ///</summary>
    public const string musicArrangement = "http://schema.org/musicArrangement";

    ///<summary>
    ///The composer of the soundtrack.
    ///<see cref="http://schema.org/musicBy"/>
    ///</summary>
    public const string musicBy = "http://schema.org/musicBy";

    ///<summary>
    ///The type of composition (e.g. overture, sonata, symphony, etc.).
    ///<see cref="http://schema.org/musicCompositionForm"/>
    ///</summary>
    public const string musicCompositionForm = "http://schema.org/musicCompositionForm";

    ///<summary>
    ///A member of a music group&#x2014;for example, John, Paul, George, or Ringo.
    ///<see cref="http://schema.org/musicGroupMember"/>
    ///</summary>
    public const string musicGroupMember = "http://schema.org/musicGroupMember";

    ///<summary>
    ///Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).
    ///<see cref="http://schema.org/musicReleaseFormat"/>
    ///</summary>
    public const string musicReleaseFormat = "http://schema.org/musicReleaseFormat";

    ///<summary>
    ///The key, mode, or scale this composition uses.
    ///<see cref="http://schema.org/musicalKey"/>
    ///</summary>
    public const string musicalKey = "http://schema.org/musicalKey";

    ///<summary>
    ///The North American Industry Classification System (NAICS) code for a particular organization or business person.
    ///<see cref="http://schema.org/naics"/>
    ///</summary>
    public const string naics = "http://schema.org/naics";

    ///<summary>
    ///The name of the item.
    ///<see cref="http://schema.org/name"/>
    ///</summary>
    public const string name = "http://schema.org/name";

    ///<summary>
    ///A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.
    ///<see cref="http://schema.org/namedPosition"/>
    ///</summary>
    public const string namedPosition = "http://schema.org/namedPosition";

    ///<summary>
    ///Nationality of the person.
    ///<see cref="http://schema.org/nationality"/>
    ///</summary>
    public const string nationality = "http://schema.org/nationality";

    ///<summary>
    ///The expected progression of the condition if it is not treated and allowed to progress naturally.
    ///<see cref="http://schema.org/naturalProgression"/>
    ///</summary>
    public const string naturalProgression = "http://schema.org/naturalProgression";

    ///<summary>
    ///The underlying innervation associated with the muscle.
    ///<see cref="http://schema.org/nerve"/>
    ///</summary>
    public const string nerve = "http://schema.org/nerve";

    ///<summary>
    ///The neurological pathway extension that involves muscle control.
    ///<see cref="http://schema.org/nerveMotor"/>
    ///</summary>
    public const string nerveMotor = "http://schema.org/nerveMotor";

    ///<summary>
    ///The total financial value of the person as calculated by subtracting assets from liabilities.
    ///<see cref="http://schema.org/netWorth"/>
    ///</summary>
    public const string netWorth = "http://schema.org/netWorth";

    ///<summary>
    ///A link to the ListItem that follows the current one.
    ///<see cref="http://schema.org/nextItem"/>
    ///</summary>
    public const string nextItem = "http://schema.org/nextItem";

    ///<summary>
    ///For a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other news-related <a class="localLink" href="http://schema.org/Organization">Organization</a>, a statement explaining when authors of articles are not named in bylines.
    ///<see cref="http://schema.org/noBylinesPolicy"/>
    ///</summary>
    public const string noBylinesPolicy = "http://schema.org/noBylinesPolicy";

    ///<summary>
    ///This ordering relation for qualitative values indicates that the subject is not equal to the object.
    ///<see cref="http://schema.org/nonEqual"/>
    ///</summary>
    public const string nonEqual = "http://schema.org/nonEqual";

    ///<summary>
    ///The generic name of this drug or supplement.
    ///<see cref="http://schema.org/nonProprietaryName"/>
    ///</summary>
    public const string nonProprietaryName = "http://schema.org/nonProprietaryName";

    ///<summary>
    ///Range of acceptable values for a typical patient, when applicable.
    ///<see cref="http://schema.org/normalRange"/>
    ///</summary>
    public const string normalRange = "http://schema.org/normalRange";

    ///<summary>
    ///Indicates the <a href="https://en.wikipedia.org/wiki/NATO_Stock_Number">NATO stock number</a> (nsn) of a <a class="localLink" href="http://schema.org/Product">Product</a>.
    ///<see cref="http://schema.org/nsn"/>
    ///</summary>
    public const string nsn = "http://schema.org/nsn";

    ///<summary>
    ///The number of adults staying in the unit.
    ///<see cref="http://schema.org/numAdults"/>
    ///</summary>
    public const string numAdults = "http://schema.org/numAdults";

    ///<summary>
    ///The number of children staying in the unit.
    ///<see cref="http://schema.org/numChildren"/>
    ///</summary>
    public const string numChildren = "http://schema.org/numChildren";

    ///<summary>
    ///Indicates the number of constraints (not counting <a class="localLink" href="http://schema.org/populationType">populationType</a>) defined for a particular <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>. This helps applications understand if they have access to a sufficiently complete description of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/numConstraints"/>
    ///</summary>
    public const string numConstraints = "http://schema.org/numConstraints";

    ///<summary>
    ///The number of tracks in this album or playlist.
    ///<see cref="http://schema.org/numTracks"/>
    ///</summary>
    public const string numTracks = "http://schema.org/numTracks";

    ///<summary>
    ///The number or type of airbags in the vehicle.
    ///<see cref="http://schema.org/numberOfAirbags"/>
    ///</summary>
    public const string numberOfAirbags = "http://schema.org/numberOfAirbags";

    ///<summary>
    ///The number of axles.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfAxles"/>
    ///</summary>
    public const string numberOfAxles = "http://schema.org/numberOfAxles";

    ///<summary>
    ///The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.
    ///<see cref="http://schema.org/numberOfBeds"/>
    ///</summary>
    public const string numberOfBeds = "http://schema.org/numberOfBeds";

    ///<summary>
    ///The number of doors.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfDoors"/>
    ///</summary>
    public const string numberOfDoors = "http://schema.org/numberOfDoors";

    ///<summary>
    ///The number of employees in an organization e.g. business.
    ///<see cref="http://schema.org/numberOfEmployees"/>
    ///</summary>
    public const string numberOfEmployees = "http://schema.org/numberOfEmployees";

    ///<summary>
    ///The number of episodes in this season or series.
    ///<see cref="http://schema.org/numberOfEpisodes"/>
    ///</summary>
    public const string numberOfEpisodes = "http://schema.org/numberOfEpisodes";

    ///<summary>
    ///The total number of forward gears available for the transmission system of the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfForwardGears"/>
    ///</summary>
    public const string numberOfForwardGears = "http://schema.org/numberOfForwardGears";

    ///<summary>
    ///The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.
    ///<see cref="http://schema.org/numberOfItems"/>
    ///</summary>
    public const string numberOfItems = "http://schema.org/numberOfItems";

    ///<summary>
    ///The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.
    ///<see cref="http://schema.org/numberOfLoanPayments"/>
    ///</summary>
    public const string numberOfLoanPayments = "http://schema.org/numberOfLoanPayments";

    ///<summary>
    ///The number of pages in the book.
    ///<see cref="http://schema.org/numberOfPages"/>
    ///</summary>
    public const string numberOfPages = "http://schema.org/numberOfPages";

    ///<summary>
    ///Indicate how many people can play this game (minimum, maximum, or range).
    ///<see cref="http://schema.org/numberOfPlayers"/>
    ///</summary>
    public const string numberOfPlayers = "http://schema.org/numberOfPlayers";

    ///<summary>
    ///The number of owners of the vehicle, including the current one.<br/><br/>
    ///
    ///Typical unit code(s): C62
    ///<see cref="http://schema.org/numberOfPreviousOwners"/>
    ///</summary>
    public const string numberOfPreviousOwners = "http://schema.org/numberOfPreviousOwners";

    ///<summary>
    ///The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.
    ///Typical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.
    ///<see cref="http://schema.org/numberOfRooms"/>
    ///</summary>
    public const string numberOfRooms = "http://schema.org/numberOfRooms";

    ///<summary>
    ///The number of seasons in this series.
    ///<see cref="http://schema.org/numberOfSeasons"/>
    ///</summary>
    public const string numberOfSeasons = "http://schema.org/numberOfSeasons";

    ///<summary>
    ///A number associated with a role in an organization, for example, the number on an athlete's jersey.
    ///<see cref="http://schema.org/numberedPosition"/>
    ///</summary>
    public const string numberedPosition = "http://schema.org/numberedPosition";

    ///<summary>
    ///Nutrition information about the recipe or menu item.
    ///<see cref="http://schema.org/nutrition"/>
    ///</summary>
    public const string nutrition = "http://schema.org/nutrition";

    ///<summary>
    ///The observationDate of an <a class="localLink" href="http://schema.org/Observation">Observation</a>.
    ///<see cref="http://schema.org/observationDate"/>
    ///</summary>
    public const string observationDate = "http://schema.org/observationDate";

    ///<summary>
    ///The observedNode of an <a class="localLink" href="http://schema.org/Observation">Observation</a>, often a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/observedNode"/>
    ///</summary>
    public const string observedNode = "http://schema.org/observedNode";

    ///<summary>
    ///The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).
    ///Typical unit code(s): C62 for person
    ///<see cref="http://schema.org/occupancy"/>
    ///</summary>
    public const string occupancy = "http://schema.org/occupancy";

    ///<summary>
    ///The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.
    ///<see cref="http://schema.org/occupationLocation"/>
    ///</summary>
    public const string occupationLocation = "http://schema.org/occupationLocation";

    ///<summary>
    ///A category describing the job, preferably using a term from a taxonomy such as <a href="http://www.onetcenter.org/taxonomy.html">BLS O*NET-SOC</a>, <a href="https://www.ilo.org/public/english/bureau/stat/isco/isco08/">ISCO-08</a> or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.<br/><br/>
    ///
    ///Note: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.
    ///<see cref="http://schema.org/occupationalCategory"/>
    ///</summary>
    public const string occupationalCategory = "http://schema.org/occupationalCategory";

    ///<summary>
    ///A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.
    ///<see cref="http://schema.org/occupationalCredentialAwarded"/>
    ///</summary>
    public const string occupationalCredentialAwarded = "http://schema.org/occupationalCredentialAwarded";

    ///<summary>
    ///The number of offers for the product.
    ///<see cref="http://schema.org/offerCount"/>
    ///</summary>
    public const string offerCount = "http://schema.org/offerCount";

    ///<summary>
    ///An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
    ///<see cref="http://schema.org/offers"/>
    ///</summary>
    public const string offers = "http://schema.org/offers";

    ///<summary>
    ///Whether prescriptions can be delivered by mail.
    ///<see cref="http://schema.org/offersPrescriptionByMail"/>
    ///</summary>
    public const string offersPrescriptionByMail = "http://schema.org/offersPrescriptionByMail";

    ///<summary>
    ///The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.<br/><br/>
    ///
    ///<ul>
    ///<li>Days are specified using the following two-letter combinations: <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>, <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>
    ///<li>Times are specified using 24:00 time. For example, 3pm is specified as <code>15:00</code>. </li>
    ///<li>Here is an example: <code>&lt;time itemprop="openingHours" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.</li>
    ///<li>If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/openingHours"/>
    ///</summary>
    public const string openingHours = "http://schema.org/openingHours";

    ///<summary>
    ///The opening hours of a certain place.
    ///<see cref="http://schema.org/openingHoursSpecification"/>
    ///</summary>
    public const string openingHoursSpecification = "http://schema.org/openingHoursSpecification";

    ///<summary>
    ///The opening hour of the place or service on the given day(s) of the week.
    ///<see cref="http://schema.org/opens"/>
    ///</summary>
    public const string opens = "http://schema.org/opens";

    ///<summary>
    ///Operating systems supported (Windows 7, OSX 10.6, Android 1.6).
    ///<see cref="http://schema.org/operatingSystem"/>
    ///</summary>
    public const string operatingSystem = "http://schema.org/operatingSystem";

    ///<summary>
    ///A sub property of participant. The opponent on this action.
    ///<see cref="http://schema.org/opponent"/>
    ///</summary>
    public const string opponent = "http://schema.org/opponent";

    ///<summary>
    ///A sub property of object. The options subject to this action.
    ///<see cref="http://schema.org/option"/>
    ///</summary>
    public const string option = "http://schema.org/option";

    ///<summary>
    ///Date order was placed.
    ///<see cref="http://schema.org/orderDate"/>
    ///</summary>
    public const string orderDate = "http://schema.org/orderDate";

    ///<summary>
    ///The delivery of the parcel related to this order or order item.
    ///<see cref="http://schema.org/orderDelivery"/>
    ///</summary>
    public const string orderDelivery = "http://schema.org/orderDelivery";

    ///<summary>
    ///The identifier of the order item.
    ///<see cref="http://schema.org/orderItemNumber"/>
    ///</summary>
    public const string orderItemNumber = "http://schema.org/orderItemNumber";

    ///<summary>
    ///The current status of the order item.
    ///<see cref="http://schema.org/orderItemStatus"/>
    ///</summary>
    public const string orderItemStatus = "http://schema.org/orderItemStatus";

    ///<summary>
    ///The identifier of the transaction.
    ///<see cref="http://schema.org/orderNumber"/>
    ///</summary>
    public const string orderNumber = "http://schema.org/orderNumber";

    ///<summary>
    ///The number of the item ordered. If the property is not set, assume the quantity is one.
    ///<see cref="http://schema.org/orderQuantity"/>
    ///</summary>
    public const string orderQuantity = "http://schema.org/orderQuantity";

    ///<summary>
    ///The current status of the order.
    ///<see cref="http://schema.org/orderStatus"/>
    ///</summary>
    public const string orderStatus = "http://schema.org/orderStatus";

    ///<summary>
    ///The item ordered.
    ///<see cref="http://schema.org/orderedItem"/>
    ///</summary>
    public const string orderedItem = "http://schema.org/orderedItem";

    ///<summary>
    ///An organizer of an Event.
    ///<see cref="http://schema.org/organizer"/>
    ///</summary>
    public const string organizer = "http://schema.org/organizer";

    ///<summary>
    ///The place or point where a muscle arises.
    ///<see cref="http://schema.org/origin"/>
    ///</summary>
    public const string origin = "http://schema.org/origin";

    ///<summary>
    ///Shipper's address.
    ///<see cref="http://schema.org/originAddress"/>
    ///</summary>
    public const string originAddress = "http://schema.org/originAddress";

    ///<summary>
    ///The vasculature the lymphatic structure originates, or afferents, from.
    ///<see cref="http://schema.org/originatesFrom"/>
    ///</summary>
    public const string originatesFrom = "http://schema.org/originatesFrom";

    ///<summary>
    ///Expected or actual outcomes of the study.
    ///<see cref="http://schema.org/outcome"/>
    ///</summary>
    public const string outcome = "http://schema.org/outcome";

    ///<summary>
    ///Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.
    ///<see cref="http://schema.org/overdosage"/>
    ///</summary>
    public const string overdosage = "http://schema.org/overdosage";

    ///<summary>
    ///Descriptive information establishing the overarching theory/philosophy of the plan. May include the rationale for the name, the population where the plan first came to prominence, etc.
    ///<see cref="http://schema.org/overview"/>
    ///</summary>
    public const string overview = "http://schema.org/overview";

    ///<summary>
    ///The date and time of obtaining the product.
    ///<see cref="http://schema.org/ownedFrom"/>
    ///</summary>
    public const string ownedFrom = "http://schema.org/ownedFrom";

    ///<summary>
    ///The date and time of giving up ownership on the product.
    ///<see cref="http://schema.org/ownedThrough"/>
    ///</summary>
    public const string ownedThrough = "http://schema.org/ownedThrough";

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (often but not necessarily a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the <a class="localLink" href="http://schema.org/funder">funder</a> is also available and can be used to make basic funder information machine-readable.
    ///<see cref="http://schema.org/ownershipFundingInfo"/>
    ///</summary>
    public const string ownershipFundingInfo = "http://schema.org/ownershipFundingInfo";

    ///<summary>
    ///Products owned by the organization or person.
    ///<see cref="http://schema.org/owns"/>
    ///</summary>
    public const string owns = "http://schema.org/owns";

    ///<summary>
    ///The page on which the work ends; for example "138" or "xvi".
    ///<see cref="http://schema.org/pageEnd"/>
    ///</summary>
    public const string pageEnd = "http://schema.org/pageEnd";

    ///<summary>
    ///The page on which the work starts; for example "135" or "xiii".
    ///<see cref="http://schema.org/pageStart"/>
    ///</summary>
    public const string pageStart = "http://schema.org/pageStart";

    ///<summary>
    ///Any description of pages that is not separated into pageStart and pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
    ///<see cref="http://schema.org/pagination"/>
    ///</summary>
    public const string pagination = "http://schema.org/pagination";

    ///<summary>
    ///The parent of a question, answer or item in general.
    ///<see cref="http://schema.org/parentItem"/>
    ///</summary>
    public const string parentItem = "http://schema.org/parentItem";

    ///<summary>
    ///A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.
    ///<see cref="http://schema.org/parentService"/>
    ///</summary>
    public const string parentService = "http://schema.org/parentService";

    ///<summary>
    ///A parents of the person.
    ///<see cref="http://schema.org/parents"/>
    ///</summary>
    public const string parents = "http://schema.org/parents";

    ///<summary>
    ///The episode to which this clip belongs.
    ///<see cref="http://schema.org/partOfEpisode"/>
    ///</summary>
    public const string partOfEpisode = "http://schema.org/partOfEpisode";

    ///<summary>
    ///The order is being paid as part of the referenced Invoice.
    ///<see cref="http://schema.org/partOfInvoice"/>
    ///</summary>
    public const string partOfInvoice = "http://schema.org/partOfInvoice";

    ///<summary>
    ///The overall order the items in this delivery were included in.
    ///<see cref="http://schema.org/partOfOrder"/>
    ///</summary>
    public const string partOfOrder = "http://schema.org/partOfOrder";

    ///<summary>
    ///The season to which this episode belongs.
    ///<see cref="http://schema.org/partOfSeason"/>
    ///</summary>
    public const string partOfSeason = "http://schema.org/partOfSeason";

    ///<summary>
    ///The anatomical or organ system that this structure is part of.
    ///<see cref="http://schema.org/partOfSystem"/>
    ///</summary>
    public const string partOfSystem = "http://schema.org/partOfSystem";

    ///<summary>
    ///The TV series to which this episode or season belongs.
    ///<see cref="http://schema.org/partOfTVSeries"/>
    ///</summary>
    public const string partOfTVSeries = "http://schema.org/partOfTVSeries";

    ///<summary>
    ///Number of people the reservation should accommodate.
    ///<see cref="http://schema.org/partySize"/>
    ///</summary>
    public const string partySize = "http://schema.org/partySize";

    ///<summary>
    ///The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).
    ///<see cref="http://schema.org/passengerPriorityStatus"/>
    ///</summary>
    public const string passengerPriorityStatus = "http://schema.org/passengerPriorityStatus";

    ///<summary>
    ///The passenger's sequence number as assigned by the airline.
    ///<see cref="http://schema.org/passengerSequenceNumber"/>
    ///</summary>
    public const string passengerSequenceNumber = "http://schema.org/passengerSequenceNumber";

    ///<summary>
    ///Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.
    ///<see cref="http://schema.org/pathophysiology"/>
    ///</summary>
    public const string pathophysiology = "http://schema.org/pathophysiology";

    ///<summary>
    ///The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of <a class="localLink" href="http://schema.org/weight">weight</a> and <a class="localLink" href="http://schema.org/payload">payload</a></li>
    ///<li>Note 2: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 3: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 4: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/payload"/>
    ///</summary>
    public const string payload = "http://schema.org/payload";

    ///<summary>
    ///Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.
    ///<see cref="http://schema.org/paymentAccepted"/>
    ///</summary>
    public const string paymentAccepted = "http://schema.org/paymentAccepted";

    ///<summary>
    ///The date that payment is due.
    ///<see cref="http://schema.org/paymentDue"/>
    ///</summary>
    public const string paymentDue = "http://schema.org/paymentDue";

    ///<summary>
    ///The name of the credit card or other method of payment for the order.
    ///<see cref="http://schema.org/paymentMethod"/>
    ///</summary>
    public const string paymentMethod = "http://schema.org/paymentMethod";

    ///<summary>
    ///An identifier for the method of payment used (e.g. the last 4 digits of the credit card).
    ///<see cref="http://schema.org/paymentMethodId"/>
    ///</summary>
    public const string paymentMethodId = "http://schema.org/paymentMethodId";

    ///<summary>
    ///The status of payment; whether the invoice has been paid or not.
    ///<see cref="http://schema.org/paymentStatus"/>
    ///</summary>
    public const string paymentStatus = "http://schema.org/paymentStatus";

    ///<summary>
    ///The URL for sending a payment.
    ///<see cref="http://schema.org/paymentUrl"/>
    ///</summary>
    public const string paymentUrl = "http://schema.org/paymentUrl";

    ///<summary>
    ///The individual who draws the primary narrative artwork.
    ///<see cref="http://schema.org/penciler"/>
    ///</summary>
    public const string penciler = "http://schema.org/penciler";

    ///<summary>
    ///The 10th percentile value.
    ///<see cref="http://schema.org/percentile10"/>
    ///</summary>
    public const string percentile10 = "http://schema.org/percentile10";

    ///<summary>
    ///The 25th percentile value.
    ///<see cref="http://schema.org/percentile25"/>
    ///</summary>
    public const string percentile25 = "http://schema.org/percentile25";

    ///<summary>
    ///The 75th percentile value.
    ///<see cref="http://schema.org/percentile75"/>
    ///</summary>
    public const string percentile75 = "http://schema.org/percentile75";

    ///<summary>
    ///The 90th percentile value.
    ///<see cref="http://schema.org/percentile90"/>
    ///</summary>
    public const string percentile90 = "http://schema.org/percentile90";

    ///<summary>
    ///Event that this person is a performer or participant in.
    ///<see cref="http://schema.org/performerIn"/>
    ///</summary>
    public const string performerIn = "http://schema.org/performerIn";

    ///<summary>
    ///The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.
    ///<see cref="http://schema.org/performers"/>
    ///</summary>
    public const string performers = "http://schema.org/performers";

    ///<summary>
    ///The type of permission granted the person, organization, or audience.
    ///<see cref="http://schema.org/permissionType"/>
    ///</summary>
    public const string permissionType = "http://schema.org/permissionType";

    ///<summary>
    ///Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).
    ///<see cref="http://schema.org/permissions"/>
    ///</summary>
    public const string permissions = "http://schema.org/permissions";

    ///<summary>
    ///The target audience for this permit.
    ///<see cref="http://schema.org/permitAudience"/>
    ///</summary>
    public const string permitAudience = "http://schema.org/permitAudience";

    ///<summary>
    ///Indications regarding the permitted usage of the accommodation.
    ///<see cref="http://schema.org/permittedUsage"/>
    ///</summary>
    public const string permittedUsage = "http://schema.org/permittedUsage";

    ///<summary>
    ///Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.
    ///<see cref="http://schema.org/petsAllowed"/>
    ///</summary>
    public const string petsAllowed = "http://schema.org/petsAllowed";

    ///<summary>
    ///The phase of the clinical trial.
    ///<see cref="http://schema.org/phase"/>
    ///</summary>
    public const string phase = "http://schema.org/phase";

    ///<summary>
    ///Photographs of this place.
    ///<see cref="http://schema.org/photos"/>
    ///</summary>
    public const string photos = "http://schema.org/photos";

    ///<summary>
    ///Specific physiologic benefits associated to the plan.
    ///<see cref="http://schema.org/physiologicalBenefits"/>
    ///</summary>
    public const string physiologicalBenefits = "http://schema.org/physiologicalBenefits";

    ///<summary>
    ///Where a taxi will pick up a passenger or a rental car can be picked up.
    ///<see cref="http://schema.org/pickupLocation"/>
    ///</summary>
    public const string pickupLocation = "http://schema.org/pickupLocation";

    ///<summary>
    ///When a taxi will pickup a passenger or a rental car can be picked up.
    ///<see cref="http://schema.org/pickupTime"/>
    ///</summary>
    public const string pickupTime = "http://schema.org/pickupTime";

    ///<summary>
    ///Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.
    ///<see cref="http://schema.org/playMode"/>
    ///</summary>
    public const string playMode = "http://schema.org/playMode";

    ///<summary>
    ///Player type required&#x2014;for example, Flash or Silverlight.
    ///<see cref="http://schema.org/playerType"/>
    ///</summary>
    public const string playerType = "http://schema.org/playerType";

    ///<summary>
    ///Number of players on the server.
    ///<see cref="http://schema.org/playersOnline"/>
    ///</summary>
    public const string playersOnline = "http://schema.org/playersOnline";

    ///<summary>
    ///A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.
    ///<see cref="http://schema.org/polygon"/>
    ///</summary>
    public const string polygon = "http://schema.org/polygon";

    ///<summary>
    ///Any characteristics of the population used in the study, e.g. 'males under 65'.
    ///<see cref="http://schema.org/population"/>
    ///</summary>
    public const string population = "http://schema.org/population";

    ///<summary>
    ///Indicates the populationType common to all members of a <a class="localLink" href="http://schema.org/StatisticalPopulation">StatisticalPopulation</a>.
    ///<see cref="http://schema.org/populationType"/>
    ///</summary>
    public const string populationType = "http://schema.org/populationType";

    ///<summary>
    ///A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.
    ///<see cref="http://schema.org/possibleComplication"/>
    ///</summary>
    public const string possibleComplication = "http://schema.org/possibleComplication";

    ///<summary>
    ///A possible treatment to address this condition, sign or symptom.
    ///<see cref="http://schema.org/possibleTreatment"/>
    ///</summary>
    public const string possibleTreatment = "http://schema.org/possibleTreatment";

    ///<summary>
    ///The post office box number for PO box addresses.
    ///<see cref="http://schema.org/postOfficeBoxNumber"/>
    ///</summary>
    public const string postOfficeBoxNumber = "http://schema.org/postOfficeBoxNumber";

    ///<summary>
    ///A description of the postoperative procedures, care, and/or followups for this device.
    ///<see cref="http://schema.org/postOp"/>
    ///</summary>
    public const string postOp = "http://schema.org/postOp";

    ///<summary>
    ///The postal code. For example, 94043.
    ///<see cref="http://schema.org/postalCode"/>
    ///</summary>
    public const string postalCode = "http://schema.org/postalCode";

    ///<summary>
    ///Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.
    ///<see cref="http://schema.org/potentialAction"/>
    ///</summary>
    public const string potentialAction = "http://schema.org/potentialAction";

    ///<summary>
    ///A description of the workup, testing, and other preparations required before implanting this device.
    ///<see cref="http://schema.org/preOp"/>
    ///</summary>
    public const string preOp = "http://schema.org/preOp";

    ///<summary>
    ///A pointer from a previous, often discontinued variant of the product to its newer variant.
    ///<see cref="http://schema.org/predecessorOf"/>
    ///</summary>
    public const string predecessorOf = "http://schema.org/predecessorOf";

    ///<summary>
    ///Pregnancy category of this drug.
    ///<see cref="http://schema.org/pregnancyCategory"/>
    ///</summary>
    public const string pregnancyCategory = "http://schema.org/pregnancyCategory";

    ///<summary>
    ///Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.
    ///<see cref="http://schema.org/pregnancyWarning"/>
    ///</summary>
    public const string pregnancyWarning = "http://schema.org/pregnancyWarning";

    ///<summary>
    ///The length of time it takes to prepare the items to be used in instructions or a direction, in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/prepTime"/>
    ///</summary>
    public const string prepTime = "http://schema.org/prepTime";

    ///<summary>
    ///Typical preparation that a patient must undergo before having the procedure performed.
    ///<see cref="http://schema.org/preparation"/>
    ///</summary>
    public const string preparation = "http://schema.org/preparation";

    ///<summary>
    ///Link to prescribing information for the drug.
    ///<see cref="http://schema.org/prescribingInfo"/>
    ///</summary>
    public const string prescribingInfo = "http://schema.org/prescribingInfo";

    ///<summary>
    ///Indicates the status of drug prescription eg. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.
    ///<see cref="http://schema.org/prescriptionStatus"/>
    ///</summary>
    public const string prescriptionStatus = "http://schema.org/prescriptionStatus";

    ///<summary>
    ///A link to the ListItem that preceeds the current one.
    ///<see cref="http://schema.org/previousItem"/>
    ///</summary>
    public const string previousItem = "http://schema.org/previousItem";

    ///<summary>
    ///Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.
    ///<see cref="http://schema.org/previousStartDate"/>
    ///</summary>
    public const string previousStartDate = "http://schema.org/previousStartDate";

    ///<summary>
    ///The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use the <a class="localLink" href="http://schema.org/priceCurrency">priceCurrency</a> property (with standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR") instead of including <a href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous symbols</a> such as '$' in the value.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///<li>Note that both <a href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a> and Microdata syntax allow the use of a "content=" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/price"/>
    ///</summary>
    public const string price = "http://schema.org/price";

    ///<summary>
    ///This property links to all <a class="localLink" href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a> nodes that apply in parallel for the <a class="localLink" href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a> node.
    ///<see cref="http://schema.org/priceComponent"/>
    ///</summary>
    public const string priceComponent = "http://schema.org/priceComponent";

    ///<summary>
    ///The currency of the price, or a price component when attached to <a class="localLink" href="http://schema.org/PriceSpecification">PriceSpecification</a> and its subtypes.<br/><br/>
    ///
    ///Use standard formats: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency format</a> e.g. "USD"; <a href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. "Ithaca HOUR".
    ///<see cref="http://schema.org/priceCurrency"/>
    ///</summary>
    public const string priceCurrency = "http://schema.org/priceCurrency";

    ///<summary>
    ///The price range of the business, for example <code>$$$</code>.
    ///<see cref="http://schema.org/priceRange"/>
    ///</summary>
    public const string priceRange = "http://schema.org/priceRange";

    ///<summary>
    ///One or more detailed price specifications, indicating the unit price and delivery or payment charges.
    ///<see cref="http://schema.org/priceSpecification"/>
    ///</summary>
    public const string priceSpecification = "http://schema.org/priceSpecification";

    ///<summary>
    ///A short text or acronym indicating multiple price specifications for the same offer, e.g. SRP for the suggested retail price or INVOICE for the invoice price, mostly used in the car industry.
    ///<see cref="http://schema.org/priceType"/>
    ///</summary>
    public const string priceType = "http://schema.org/priceType";

    ///<summary>
    ///The date after which the price is no longer available.
    ///<see cref="http://schema.org/priceValidUntil"/>
    ///</summary>
    public const string priceValidUntil = "http://schema.org/priceValidUntil";

    ///<summary>
    ///Indicates the main image on the page.
    ///<see cref="http://schema.org/primaryImageOfPage"/>
    ///</summary>
    public const string primaryImageOfPage = "http://schema.org/primaryImageOfPage";

    ///<summary>
    ///A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.
    ///<see cref="http://schema.org/primaryPrevention"/>
    ///</summary>
    public const string primaryPrevention = "http://schema.org/primaryPrevention";

    ///<summary>
    ///The number of the column in which the NewsArticle appears in the print edition.
    ///<see cref="http://schema.org/printColumn"/>
    ///</summary>
    public const string printColumn = "http://schema.org/printColumn";

    ///<summary>
    ///The edition of the print product in which the NewsArticle appears.
    ///<see cref="http://schema.org/printEdition"/>
    ///</summary>
    public const string printEdition = "http://schema.org/printEdition";

    ///<summary>
    ///If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
    ///<see cref="http://schema.org/printPage"/>
    ///</summary>
    public const string printPage = "http://schema.org/printPage";

    ///<summary>
    ///If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
    ///<see cref="http://schema.org/printSection"/>
    ///</summary>
    public const string printSection = "http://schema.org/printSection";

    ///<summary>
    ///A description of the procedure involved in setting up, using, and/or installing the device.
    ///<see cref="http://schema.org/procedure"/>
    ///</summary>
    public const string procedure = "http://schema.org/procedure";

    ///<summary>
    ///The type of procedure, for example Surgical, Noninvasive, or Percutaneous.
    ///<see cref="http://schema.org/procedureType"/>
    ///</summary>
    public const string procedureType = "http://schema.org/procedureType";

    ///<summary>
    ///Estimated processing time for the service using this channel.
    ///<see cref="http://schema.org/processingTime"/>
    ///</summary>
    public const string processingTime = "http://schema.org/processingTime";

    ///<summary>
    ///Processor architecture required to run the application (e.g. IA64).
    ///<see cref="http://schema.org/processorRequirements"/>
    ///</summary>
    public const string processorRequirements = "http://schema.org/processorRequirements";

    ///<summary>
    ///The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).
    ///<see cref="http://schema.org/producer"/>
    ///</summary>
    public const string producer = "http://schema.org/producer";

    ///<summary>
    ///The tangible thing generated by the service, e.g. a passport, permit, etc.
    ///<see cref="http://schema.org/produces"/>
    ///</summary>
    public const string produces = "http://schema.org/produces";

    ///<summary>
    ///The product identifier, such as ISBN. For example: <code>meta itemprop="productID" content="isbn:123-456-789"</code>.
    ///<see cref="http://schema.org/productID"/>
    ///</summary>
    public const string productID = "http://schema.org/productID";

    ///<summary>
    ///The productReturnDays property indicates the number of days (from purchase) within which relevant product return policy is applicable.
    ///<see cref="http://schema.org/productReturnDays"/>
    ///</summary>
    public const string productReturnDays = "http://schema.org/productReturnDays";

    ///<summary>
    ///Indicates a Web page or service by URL, for product return.
    ///<see cref="http://schema.org/productReturnLink"/>
    ///</summary>
    public const string productReturnLink = "http://schema.org/productReturnLink";

    ///<summary>
    ///The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. "iPhone") or a general category of products or services (e.g. "smartphones").
    ///<see cref="http://schema.org/productSupported"/>
    ///</summary>
    public const string productSupported = "http://schema.org/productSupported";

    ///<summary>
    ///The production company or studio responsible for the item e.g. series, video game, episode etc.
    ///<see cref="http://schema.org/productionCompany"/>
    ///</summary>
    public const string productionCompany = "http://schema.org/productionCompany";

    ///<summary>
    ///The date of production of the item, e.g. vehicle.
    ///<see cref="http://schema.org/productionDate"/>
    ///</summary>
    public const string productionDate = "http://schema.org/productionDate";

    ///<summary>
    ///Proficiency needed for this content; expected values: 'Beginner', 'Expert'.
    ///<see cref="http://schema.org/proficiencyLevel"/>
    ///</summary>
    public const string proficiencyLevel = "http://schema.org/proficiencyLevel";

    ///<summary>
    ///Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.
    ///<see cref="http://schema.org/programMembershipUsed"/>
    ///</summary>
    public const string programMembershipUsed = "http://schema.org/programMembershipUsed";

    ///<summary>
    ///The program providing the membership.
    ///<see cref="http://schema.org/programName"/>
    ///</summary>
    public const string programName = "http://schema.org/programName";

    ///<summary>
    ///Prerequisites for enrolling in the program.
    ///<see cref="http://schema.org/programPrerequisites"/>
    ///</summary>
    public const string programPrerequisites = "http://schema.org/programPrerequisites";

    ///<summary>
    ///The computer programming language.
    ///<see cref="http://schema.org/programmingLanguage"/>
    ///</summary>
    public const string programmingLanguage = "http://schema.org/programmingLanguage";

    ///<summary>
    ///Indicates whether API is managed or unmanaged.
    ///<see cref="http://schema.org/programmingModel"/>
    ///</summary>
    public const string programmingModel = "http://schema.org/programmingModel";

    ///<summary>
    ///A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be
    ///(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)
    ///a URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).
    ///Standards bodies should promote a standard prefix for the identifiers of properties from their standards.
    ///<see cref="http://schema.org/propertyID"/>
    ///</summary>
    public const string propertyID = "http://schema.org/propertyID";

    ///<summary>
    ///Proprietary name given to the diet plan, typically by its originator or creator.
    ///<see cref="http://schema.org/proprietaryName"/>
    ///</summary>
    public const string proprietaryName = "http://schema.org/proprietaryName";

    ///<summary>
    ///The number of grams of protein.
    ///<see cref="http://schema.org/proteinContent"/>
    ///</summary>
    public const string proteinContent = "http://schema.org/proteinContent";

    ///<summary>
    ///Indicates the mobility of a provided service (e.g. 'static', 'dynamic').
    ///<see cref="http://schema.org/providerMobility"/>
    ///</summary>
    public const string providerMobility = "http://schema.org/providerMobility";

    ///<summary>
    ///The service provided by this channel.
    ///<see cref="http://schema.org/providesService"/>
    ///</summary>
    public const string providesService = "http://schema.org/providesService";

    ///<summary>
    ///A flag to signal that the <a class="localLink" href="http://schema.org/Place">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value
    ///<see cref="http://schema.org/publicAccess"/>
    ///</summary>
    public const string publicAccess = "http://schema.org/publicAccess";

    ///<summary>
    ///A publication event associated with the item.
    ///<see cref="http://schema.org/publication"/>
    ///</summary>
    public const string publication = "http://schema.org/publication";

    ///<summary>
    ///The type of the medical article, taken from the US NLM MeSH publication type catalog. See also <a href="http://www.nlm.nih.gov/mesh/pubtypes.html">MeSH documentation</a>.
    ///<see cref="http://schema.org/publicationType"/>
    ///</summary>
    public const string publicationType = "http://schema.org/publicationType";

    ///<summary>
    ///An agent associated with the publication event.
    ///<see cref="http://schema.org/publishedBy"/>
    ///</summary>
    public const string publishedBy = "http://schema.org/publishedBy";

    ///<summary>
    ///A broadcast service associated with the publication event.
    ///<see cref="http://schema.org/publishedOn"/>
    ///</summary>
    public const string publishedOn = "http://schema.org/publishedOn";

    ///<summary>
    ///The publisher of the creative work.
    ///<see cref="http://schema.org/publisher"/>
    ///</summary>
    public const string publisher = "http://schema.org/publisher";

    ///<summary>
    ///The publishing division which published the comic.
    ///<see cref="http://schema.org/publisherImprint"/>
    ///</summary>
    public const string publisherImprint = "http://schema.org/publisherImprint";

    ///<summary>
    ///The date the item e.g. vehicle was purchased by the current owner.
    ///<see cref="http://schema.org/purchaseDate"/>
    ///</summary>
    public const string purchaseDate = "http://schema.org/purchaseDate";

    ///<summary>
    ///A goal towards an action is taken. Can be concrete or abstract.
    ///<see cref="http://schema.org/purpose"/>
    ///</summary>
    public const string purpose = "http://schema.org/purpose";

    ///<summary>
    ///Specific qualifications required for this role or Occupation.
    ///<see cref="http://schema.org/qualifications"/>
    ///</summary>
    public const string qualifications = "http://schema.org/qualifications";

    ///<summary>
    ///A sub property of instrument. The query used on this action.
    ///<see cref="http://schema.org/query"/>
    ///</summary>
    public const string query = "http://schema.org/query";

    ///<summary>
    ///The task that a player-controlled character, or group of characters may complete in order to gain a reward.
    ///<see cref="http://schema.org/quest"/>
    ///</summary>
    public const string quest = "http://schema.org/quest";

    ///<summary>
    ///A sub property of object. A question.
    ///<see cref="http://schema.org/question"/>
    ///</summary>
    public const string question = "http://schema.org/question";

    ///<summary>
    ///Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.
    ///<see cref="http://schema.org/rangeIncludes"/>
    ///</summary>
    public const string rangeIncludes = "http://schema.org/rangeIncludes";

    ///<summary>
    ///The count of total number of ratings.
    ///<see cref="http://schema.org/ratingCount"/>
    ///</summary>
    public const string ratingCount = "http://schema.org/ratingCount";

    ///<summary>
    ///A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with "fact check" markup using <a class="localLink" href="http://schema.org/ClaimReview">ClaimReview</a>.
    ///<see cref="http://schema.org/ratingExplanation"/>
    ///</summary>
    public const string ratingExplanation = "http://schema.org/ratingExplanation";

    ///<summary>
    ///The rating for the content.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/ratingValue"/>
    ///</summary>
    public const string ratingValue = "http://schema.org/ratingValue";

    ///<summary>
    ///A person who reads (performs) the audiobook.
    ///<see cref="http://schema.org/readBy"/>
    ///</summary>
    public const string readBy = "http://schema.org/readBy";

    ///<summary>
    ///Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a "hidden" input in an HTML form.
    ///<see cref="http://schema.org/readonlyValue"/>
    ///</summary>
    public const string readonlyValue = "http://schema.org/readonlyValue";

    ///<summary>
    ///A sub property of participant. The real estate agent involved in the action.
    ///<see cref="http://schema.org/realEstateAgent"/>
    ///</summary>
    public const string realEstateAgent = "http://schema.org/realEstateAgent";

    ///<summary>
    ///A sub property of instrument. The recipe/instructions used to perform the action.
    ///<see cref="http://schema.org/recipe"/>
    ///</summary>
    public const string recipe = "http://schema.org/recipe";

    ///<summary>
    ///The category of the recipe—for example, appetizer, entree, etc.
    ///<see cref="http://schema.org/recipeCategory"/>
    ///</summary>
    public const string recipeCategory = "http://schema.org/recipeCategory";

    ///<summary>
    ///The cuisine of the recipe (for example, French or Ethiopian).
    ///<see cref="http://schema.org/recipeCuisine"/>
    ///</summary>
    public const string recipeCuisine = "http://schema.org/recipeCuisine";

    ///<summary>
    ///A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.
    ///<see cref="http://schema.org/recipeInstructions"/>
    ///</summary>
    public const string recipeInstructions = "http://schema.org/recipeInstructions";

    ///<summary>
    ///The quantity produced by the recipe (for example, number of people served, number of servings, etc).
    ///<see cref="http://schema.org/recipeYield"/>
    ///</summary>
    public const string recipeYield = "http://schema.org/recipeYield";

    ///<summary>
    ///An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.
    ///<see cref="http://schema.org/recognizedBy"/>
    ///</summary>
    public const string recognizedBy = "http://schema.org/recognizedBy";

    ///<summary>
    ///If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.
    ///<see cref="http://schema.org/recognizingAuthority"/>
    ///</summary>
    public const string recognizingAuthority = "http://schema.org/recognizingAuthority";

    ///<summary>
    ///Strength of the guideline's recommendation (e.g. 'class I').
    ///<see cref="http://schema.org/recommendationStrength"/>
    ///</summary>
    public const string recommendationStrength = "http://schema.org/recommendationStrength";

    ///<summary>
    ///Recommended intake of this supplement for a given population as defined by a specific recommending authority.
    ///<see cref="http://schema.org/recommendedIntake"/>
    ///</summary>
    public const string recommendedIntake = "http://schema.org/recommendedIntake";

    ///<summary>
    ///The label that issued the release.
    ///<see cref="http://schema.org/recordLabel"/>
    ///</summary>
    public const string recordLabel = "http://schema.org/recordLabel";

    ///<summary>
    ///The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.
    ///<see cref="http://schema.org/recourseLoan"/>
    ///</summary>
    public const string recourseLoan = "http://schema.org/recourseLoan";

    ///<summary>
    ///The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.
    ///<see cref="http://schema.org/referenceQuantity"/>
    ///</summary>
    public const string referenceQuantity = "http://schema.org/referenceQuantity";

    ///<summary>
    ///The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.
    ///<see cref="http://schema.org/referencesOrder"/>
    ///</summary>
    public const string referencesOrder = "http://schema.org/referencesOrder";

    ///<summary>
    ///A refundType, from an enumerated list.
    ///<see cref="http://schema.org/refundType"/>
    ///</summary>
    public const string refundType = "http://schema.org/refundType";

    ///<summary>
    ///The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.
    ///<see cref="http://schema.org/regionDrained"/>
    ///</summary>
    public const string regionDrained = "http://schema.org/regionDrained";

    ///<summary>
    ///The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>.
    ///<see cref="http://schema.org/regionsAllowed"/>
    ///</summary>
    public const string regionsAllowed = "http://schema.org/regionsAllowed";

    ///<summary>
    ///Anatomical systems or structures that relate to the superficial anatomy.
    ///<see cref="http://schema.org/relatedAnatomy"/>
    ///</summary>
    public const string relatedAnatomy = "http://schema.org/relatedAnatomy";

    ///<summary>
    ///A medical condition associated with this anatomy.
    ///<see cref="http://schema.org/relatedCondition"/>
    ///</summary>
    public const string relatedCondition = "http://schema.org/relatedCondition";

    ///<summary>
    ///Any other drug related to this one, for example commonly-prescribed alternatives.
    ///<see cref="http://schema.org/relatedDrug"/>
    ///</summary>
    public const string relatedDrug = "http://schema.org/relatedDrug";

    ///<summary>
    ///A link related to this web page, for example to other related web pages.
    ///<see cref="http://schema.org/relatedLink"/>
    ///</summary>
    public const string relatedLink = "http://schema.org/relatedLink";

    ///<summary>
    ///Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.
    ///<see cref="http://schema.org/relatedStructure"/>
    ///</summary>
    public const string relatedStructure = "http://schema.org/relatedStructure";

    ///<summary>
    ///A medical therapy related to this anatomy.
    ///<see cref="http://schema.org/relatedTherapy"/>
    ///</summary>
    public const string relatedTherapy = "http://schema.org/relatedTherapy";

    ///<summary>
    ///The most generic familial relation.
    ///<see cref="http://schema.org/relatedTo"/>
    ///</summary>
    public const string relatedTo = "http://schema.org/relatedTo";

    ///<summary>
    ///The release date of a product or product model. This can be used to distinguish the exact variant of a product.
    ///<see cref="http://schema.org/releaseDate"/>
    ///</summary>
    public const string releaseDate = "http://schema.org/releaseDate";

    ///<summary>
    ///Description of what changed in this version.
    ///<see cref="http://schema.org/releaseNotes"/>
    ///</summary>
    public const string releaseNotes = "http://schema.org/releaseNotes";

    ///<summary>
    ///The place and time the release was issued, expressed as a PublicationEvent.
    ///<see cref="http://schema.org/releasedEvent"/>
    ///</summary>
    public const string releasedEvent = "http://schema.org/releasedEvent";

    ///<summary>
    ///The Occupation for the JobPosting.
    ///<see cref="http://schema.org/relevantOccupation"/>
    ///</summary>
    public const string relevantOccupation = "http://schema.org/relevantOccupation";

    ///<summary>
    ///If applicable, a medical specialty in which this entity is relevant.
    ///<see cref="http://schema.org/relevantSpecialty"/>
    ///</summary>
    public const string relevantSpecialty = "http://schema.org/relevantSpecialty";

    ///<summary>
    ///The number of attendee places for an event that remain unallocated.
    ///<see cref="http://schema.org/remainingAttendeeCapacity"/>
    ///</summary>
    public const string remainingAttendeeCapacity = "http://schema.org/remainingAttendeeCapacity";

    ///<summary>
    ///Whether the terms for payment of interest can be renegotiated during the life of the loan.
    ///<see cref="http://schema.org/renegotiableLoan"/>
    ///</summary>
    public const string renegotiableLoan = "http://schema.org/renegotiableLoan";

    ///<summary>
    ///Defines the number of times a recurring <a class="localLink" href="http://schema.org/Event">Event</a> will take place
    ///<see cref="http://schema.org/repeatCount"/>
    ///</summary>
    public const string repeatCount = "http://schema.org/repeatCount";

    ///<summary>
    ///Defines the frequency at which <a class="localLink" href="http://schema.org/Events">Events</a> will occur according to a schedule <a class="localLink" href="http://schema.org/Schedule">Schedule</a>. The intervals between
    ///      events should be defined as a <a class="localLink" href="http://schema.org/Duration">Duration</a> of time.
    ///<see cref="http://schema.org/repeatFrequency"/>
    ///</summary>
    public const string repeatFrequency = "http://schema.org/repeatFrequency";

    ///<summary>
    ///Number of times one should repeat the activity.
    ///<see cref="http://schema.org/repetitions"/>
    ///</summary>
    public const string repetitions = "http://schema.org/repetitions";

    ///<summary>
    ///A sub property of object. The object that is being replaced.
    ///<see cref="http://schema.org/replacee"/>
    ///</summary>
    public const string replacee = "http://schema.org/replacee";

    ///<summary>
    ///A sub property of object. The object that replaces.
    ///<see cref="http://schema.org/replacer"/>
    ///</summary>
    public const string replacer = "http://schema.org/replacer";

    ///<summary>
    ///The URL at which a reply may be posted to the specified UserComment.
    ///<see cref="http://schema.org/replyToUrl"/>
    ///</summary>
    public const string replyToUrl = "http://schema.org/replyToUrl";

    ///<summary>
    ///The number or other unique designator assigned to a Report by the publishing organization.
    ///<see cref="http://schema.org/reportNumber"/>
    ///</summary>
    public const string reportNumber = "http://schema.org/reportNumber";

    ///<summary>
    ///Indicates whether this image is representative of the content of the page.
    ///<see cref="http://schema.org/representativeOfPage"/>
    ///</summary>
    public const string representativeOfPage = "http://schema.org/representativeOfPage";

    ///<summary>
    ///Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)
    ///<see cref="http://schema.org/requiredCollateral"/>
    ///</summary>
    public const string requiredCollateral = "http://schema.org/requiredCollateral";

    ///<summary>
    ///Audiences defined by a person's gender.
    ///<see cref="http://schema.org/requiredGender"/>
    ///</summary>
    public const string requiredGender = "http://schema.org/requiredGender";

    ///<summary>
    ///Audiences defined by a person's maximum age.
    ///<see cref="http://schema.org/requiredMaxAge"/>
    ///</summary>
    public const string requiredMaxAge = "http://schema.org/requiredMaxAge";

    ///<summary>
    ///Audiences defined by a person's minimum age.
    ///<see cref="http://schema.org/requiredMinAge"/>
    ///</summary>
    public const string requiredMinAge = "http://schema.org/requiredMinAge";

    ///<summary>
    ///The required quantity of the item(s).
    ///<see cref="http://schema.org/requiredQuantity"/>
    ///</summary>
    public const string requiredQuantity = "http://schema.org/requiredQuantity";

    ///<summary>
    ///Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
    ///<see cref="http://schema.org/requirements"/>
    ///</summary>
    public const string requirements = "http://schema.org/requirements";

    ///<summary>
    ///Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').
    ///<see cref="http://schema.org/requiresSubscription"/>
    ///</summary>
    public const string requiresSubscription = "http://schema.org/requiresSubscription";

    ///<summary>
    ///The thing -- flight, event, restaurant,etc. being reserved.
    ///<see cref="http://schema.org/reservationFor"/>
    ///</summary>
    public const string reservationFor = "http://schema.org/reservationFor";

    ///<summary>
    ///A unique identifier for the reservation.
    ///<see cref="http://schema.org/reservationId"/>
    ///</summary>
    public const string reservationId = "http://schema.org/reservationId";

    ///<summary>
    ///The current status of the reservation.
    ///<see cref="http://schema.org/reservationStatus"/>
    ///</summary>
    public const string reservationStatus = "http://schema.org/reservationStatus";

    ///<summary>
    ///A ticket associated with the reservation.
    ///<see cref="http://schema.org/reservedTicket"/>
    ///</summary>
    public const string reservedTicket = "http://schema.org/reservedTicket";

    ///<summary>
    ///Responsibilities associated with this role or Occupation.
    ///<see cref="http://schema.org/responsibilities"/>
    ///</summary>
    public const string responsibilities = "http://schema.org/responsibilities";

    ///<summary>
    ///How often one should break from the activity.
    ///<see cref="http://schema.org/restPeriods"/>
    ///</summary>
    public const string restPeriods = "http://schema.org/restPeriods";

    ///<summary>
    ///A sub property of result. The Comment created or sent as a result of this action.
    ///<see cref="http://schema.org/resultComment"/>
    ///</summary>
    public const string resultComment = "http://schema.org/resultComment";

    ///<summary>
    ///A sub property of result. The review that resulted in the performing of the action.
    ///<see cref="http://schema.org/resultReview"/>
    ///</summary>
    public const string resultReview = "http://schema.org/resultReview";

    ///<summary>
    ///Indicates (via enumerated options) the return fees policy for a ProductReturnPolicy
    ///<see cref="http://schema.org/returnFees"/>
    ///</summary>
    public const string returnFees = "http://schema.org/returnFees";

    ///<summary>
    ///A returnPolicyCategory expresses at most one of several enumerated kinds of return.
    ///<see cref="http://schema.org/returnPolicyCategory"/>
    ///</summary>
    public const string returnPolicyCategory = "http://schema.org/returnPolicyCategory";

    ///<summary>
    ///This Review or Rating is relevant to this part or facet of the itemReviewed.
    ///<see cref="http://schema.org/reviewAspect"/>
    ///</summary>
    public const string reviewAspect = "http://schema.org/reviewAspect";

    ///<summary>
    ///The actual body of the review.
    ///<see cref="http://schema.org/reviewBody"/>
    ///</summary>
    public const string reviewBody = "http://schema.org/reviewBody";

    ///<summary>
    ///The count of total number of reviews.
    ///<see cref="http://schema.org/reviewCount"/>
    ///</summary>
    public const string reviewCount = "http://schema.org/reviewCount";

    ///<summary>
    ///The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class="localLink" href="http://schema.org/aggregateRating">aggregateRating</a> property applies to the review itself, as a creative work.
    ///<see cref="http://schema.org/reviewRating"/>
    ///</summary>
    public const string reviewRating = "http://schema.org/reviewRating";

    ///<summary>
    ///People or organizations that have reviewed the content on this web page for accuracy and/or completeness.
    ///<see cref="http://schema.org/reviewedBy"/>
    ///</summary>
    public const string reviewedBy = "http://schema.org/reviewedBy";

    ///<summary>
    ///Review of the item.
    ///<see cref="http://schema.org/reviews"/>
    ///</summary>
    public const string reviews = "http://schema.org/reviews";

    ///<summary>
    ///A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.
    ///<see cref="http://schema.org/riskFactor"/>
    ///</summary>
    public const string riskFactor = "http://schema.org/riskFactor";

    ///<summary>
    ///Specific physiologic risks associated to the diet plan.
    ///<see cref="http://schema.org/risks"/>
    ///</summary>
    public const string risks = "http://schema.org/risks";

    ///<summary>
    ///The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a></li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/roofLoad"/>
    ///</summary>
    public const string roofLoad = "http://schema.org/roofLoad";

    ///<summary>
    ///The response (yes, no, maybe) to the RSVP.
    ///<see cref="http://schema.org/rsvpResponse"/>
    ///</summary>
    public const string rsvpResponse = "http://schema.org/rsvpResponse";

    ///<summary>
    ///The vasculature the lymphatic structure runs, or efferents, to.
    ///<see cref="http://schema.org/runsTo"/>
    ///</summary>
    public const string runsTo = "http://schema.org/runsTo";

    ///<summary>
    ///Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
    ///<see cref="http://schema.org/runtime"/>
    ///</summary>
    public const string runtime = "http://schema.org/runtime";

    ///<summary>
    ///The RxCUI drug identifier from RXNORM.
    ///<see cref="http://schema.org/rxcui"/>
    ///</summary>
    public const string rxcui = "http://schema.org/rxcui";

    ///<summary>
    ///Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.
    ///<see cref="http://schema.org/safetyConsideration"/>
    ///</summary>
    public const string safetyConsideration = "http://schema.org/safetyConsideration";

    ///<summary>
    ///The currency (coded using <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for the main salary information in this job posting or for this employee.
    ///<see cref="http://schema.org/salaryCurrency"/>
    ///</summary>
    public const string salaryCurrency = "http://schema.org/salaryCurrency";

    ///<summary>
    ///The expected salary upon completing the training.
    ///<see cref="http://schema.org/salaryUponCompletion"/>
    ///</summary>
    public const string salaryUponCompletion = "http://schema.org/salaryUponCompletion";

    ///<summary>
    ///URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
    ///<see cref="http://schema.org/sameAs"/>
    ///</summary>
    public const string sameAs = "http://schema.org/sameAs";

    ///<summary>
    ///What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
    ///<see cref="http://schema.org/sampleType"/>
    ///</summary>
    public const string sampleType = "http://schema.org/sampleType";

    ///<summary>
    ///The number of grams of saturated fat.
    ///<see cref="http://schema.org/saturatedFatContent"/>
    ///</summary>
    public const string saturatedFatContent = "http://schema.org/saturatedFatContent";

    ///<summary>
    ///The date the invoice is scheduled to be paid.
    ///<see cref="http://schema.org/scheduledPaymentDate"/>
    ///</summary>
    public const string scheduledPaymentDate = "http://schema.org/scheduledPaymentDate";

    ///<summary>
    ///The time the object is scheduled to.
    ///<see cref="http://schema.org/scheduledTime"/>
    ///</summary>
    public const string scheduledTime = "http://schema.org/scheduledTime";

    ///<summary>
    ///Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.
    ///<see cref="http://schema.org/schemaVersion"/>
    ///</summary>
    public const string schemaVersion = "http://schema.org/schemaVersion";

    ///<summary>
    ///The number of screens in the movie theater.
    ///<see cref="http://schema.org/screenCount"/>
    ///</summary>
    public const string screenCount = "http://schema.org/screenCount";

    ///<summary>
    ///A link to a screenshot image of the app.
    ///<see cref="http://schema.org/screenshot"/>
    ///</summary>
    public const string screenshot = "http://schema.org/screenshot";

    ///<summary>
    ///Indicates the date on which the current structured data was generated / published. Typically used alongside <a class="localLink" href="http://schema.org/sdPublisher">sdPublisher</a>
    ///<see cref="http://schema.org/sdDatePublished"/>
    ///</summary>
    public const string sdDatePublished = "http://schema.org/sdDatePublished";

    ///<summary>
    ///A license document that applies to this structured data, typically indicated by URL.
    ///<see cref="http://schema.org/sdLicense"/>
    ///</summary>
    public const string sdLicense = "http://schema.org/sdLicense";

    ///<summary>
    ///Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The
    ///<a class="localLink" href="http://schema.org/sdPublisher">sdPublisher</a> property helps make such practices more explicit.
    ///<see cref="http://schema.org/sdPublisher"/>
    ///</summary>
    public const string sdPublisher = "http://schema.org/sdPublisher";

    ///<summary>
    ///Position of the season within an ordered group of seasons.
    ///<see cref="http://schema.org/seasonNumber"/>
    ///</summary>
    public const string seasonNumber = "http://schema.org/seasonNumber";

    ///<summary>
    ///A season in a media series.
    ///<see cref="http://schema.org/seasons"/>
    ///</summary>
    public const string seasons = "http://schema.org/seasons";

    ///<summary>
    ///The location of the reserved seat (e.g., 27).
    ///<see cref="http://schema.org/seatNumber"/>
    ///</summary>
    public const string seatNumber = "http://schema.org/seatNumber";

    ///<summary>
    ///The row location of the reserved seat (e.g., B).
    ///<see cref="http://schema.org/seatRow"/>
    ///</summary>
    public const string seatRow = "http://schema.org/seatRow";

    ///<summary>
    ///The section location of the reserved seat (e.g. Orchestra).
    ///<see cref="http://schema.org/seatSection"/>
    ///</summary>
    public const string seatSection = "http://schema.org/seatSection";

    ///<summary>
    ///The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
    ///
    ///Typical unit code(s): C62 for persons
    ///<see cref="http://schema.org/seatingCapacity"/>
    ///</summary>
    public const string seatingCapacity = "http://schema.org/seatingCapacity";

    ///<summary>
    ///The type/class of the seat.
    ///<see cref="http://schema.org/seatingType"/>
    ///</summary>
    public const string seatingType = "http://schema.org/seatingType";

    ///<summary>
    ///A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.
    ///<see cref="http://schema.org/secondaryPrevention"/>
    ///</summary>
    public const string secondaryPrevention = "http://schema.org/secondaryPrevention";

    ///<summary>
    ///The type of security screening the passenger is subject to.
    ///<see cref="http://schema.org/securityScreening"/>
    ///</summary>
    public const string securityScreening = "http://schema.org/securityScreening";

    ///<summary>
    ///A pointer to products or services sought by the organization or person (demand).
    ///<see cref="http://schema.org/seeks"/>
    ///</summary>
    public const string seeks = "http://schema.org/seeks";

    ///<summary>
    ///A sub property of participant. The participant who is at the sending end of the action.
    ///<see cref="http://schema.org/sender"/>
    ///</summary>
    public const string sender = "http://schema.org/sender";

    ///<summary>
    ///The neurological pathway extension that inputs and sends information to the brain or spinal cord.
    ///<see cref="http://schema.org/sensoryUnit"/>
    ///</summary>
    public const string sensoryUnit = "http://schema.org/sensoryUnit";

    ///<summary>
    ///A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.
    ///<see cref="http://schema.org/seriousAdverseOutcome"/>
    ///</summary>
    public const string seriousAdverseOutcome = "http://schema.org/seriousAdverseOutcome";

    ///<summary>
    ///Status of a game server.
    ///<see cref="http://schema.org/serverStatus"/>
    ///</summary>
    public const string serverStatus = "http://schema.org/serverStatus";

    ///<summary>
    ///The cuisine of the restaurant.
    ///<see cref="http://schema.org/servesCuisine"/>
    ///</summary>
    public const string servesCuisine = "http://schema.org/servesCuisine";

    ///<summary>
    ///The audience eligible for this service.
    ///<see cref="http://schema.org/serviceAudience"/>
    ///</summary>
    public const string serviceAudience = "http://schema.org/serviceAudience";

    ///<summary>
    ///The location (e.g. civic structure, local business, etc.) where a person can go to access the service.
    ///<see cref="http://schema.org/serviceLocation"/>
    ///</summary>
    public const string serviceLocation = "http://schema.org/serviceLocation";

    ///<summary>
    ///The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.
    ///<see cref="http://schema.org/serviceOperator"/>
    ///</summary>
    public const string serviceOperator = "http://schema.org/serviceOperator";

    ///<summary>
    ///The phone number to use to access the service.
    ///<see cref="http://schema.org/servicePhone"/>
    ///</summary>
    public const string servicePhone = "http://schema.org/servicePhone";

    ///<summary>
    ///The address for accessing the service by mail.
    ///<see cref="http://schema.org/servicePostalAddress"/>
    ///</summary>
    public const string servicePostalAddress = "http://schema.org/servicePostalAddress";

    ///<summary>
    ///The number to access the service by text message.
    ///<see cref="http://schema.org/serviceSmsNumber"/>
    ///</summary>
    public const string serviceSmsNumber = "http://schema.org/serviceSmsNumber";

    ///<summary>
    ///The type of service being offered, e.g. veterans' benefits, emergency relief, etc.
    ///<see cref="http://schema.org/serviceType"/>
    ///</summary>
    public const string serviceType = "http://schema.org/serviceType";

    ///<summary>
    ///The website to access the service.
    ///<see cref="http://schema.org/serviceUrl"/>
    ///</summary>
    public const string serviceUrl = "http://schema.org/serviceUrl";

    ///<summary>
    ///The serving size, in terms of the number of volume or mass.
    ///<see cref="http://schema.org/servingSize"/>
    ///</summary>
    public const string servingSize = "http://schema.org/servingSize";

    ///<summary>
    ///A CreativeWork such as an image, video, or audio clip shared as part of this posting.
    ///<see cref="http://schema.org/sharedContent"/>
    ///</summary>
    public const string sharedContent = "http://schema.org/sharedContent";

    ///<summary>
    ///A sibling of the person.
    ///<see cref="http://schema.org/siblings"/>
    ///</summary>
    public const string siblings = "http://schema.org/siblings";

    ///<summary>
    ///A sign detected by the test.
    ///<see cref="http://schema.org/signDetected"/>
    ///</summary>
    public const string signDetected = "http://schema.org/signDetected";

    ///<summary>
    ///A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.
    ///<see cref="http://schema.org/signOrSymptom"/>
    ///</summary>
    public const string signOrSymptom = "http://schema.org/signOrSymptom";

    ///<summary>
    ///The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.
    ///<see cref="http://schema.org/significance"/>
    ///</summary>
    public const string significance = "http://schema.org/significance";

    ///<summary>
    ///The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
    ///<see cref="http://schema.org/significantLinks"/>
    ///</summary>
    public const string significantLinks = "http://schema.org/significantLinks";

    ///<summary>
    ///Skills required to fulfill this role or in this Occupation.
    ///<see cref="http://schema.org/skills"/>
    ///</summary>
    public const string skills = "http://schema.org/skills";

    ///<summary>
    ///The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.
    ///<see cref="http://schema.org/sku"/>
    ///</summary>
    public const string sku = "http://schema.org/sku";

    ///<summary>
    ///A slogan or motto associated with the item.
    ///<see cref="http://schema.org/slogan"/>
    ///</summary>
    public const string slogan = "http://schema.org/slogan";

    ///<summary>
    ///Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
    ///<see cref="http://schema.org/smokingAllowed"/>
    ///</summary>
    public const string smokingAllowed = "http://schema.org/smokingAllowed";

    ///<summary>
    ///The number of milligrams of sodium.
    ///<see cref="http://schema.org/sodiumContent"/>
    ///</summary>
    public const string sodiumContent = "http://schema.org/sodiumContent";

    ///<summary>
    ///Additional content for a software application.
    ///<see cref="http://schema.org/softwareAddOn"/>
    ///</summary>
    public const string softwareAddOn = "http://schema.org/softwareAddOn";

    ///<summary>
    ///Software application help.
    ///<see cref="http://schema.org/softwareHelp"/>
    ///</summary>
    public const string softwareHelp = "http://schema.org/softwareHelp";

    ///<summary>
    ///Version of the software instance.
    ///<see cref="http://schema.org/softwareVersion"/>
    ///</summary>
    public const string softwareVersion = "http://schema.org/softwareVersion";

    ///<summary>
    ///The anatomical or organ system that the artery originates from.
    ///<see cref="http://schema.org/source"/>
    ///</summary>
    public const string source = "http://schema.org/source";

    ///<summary>
    ///The Organization on whose behalf the creator was working.
    ///<see cref="http://schema.org/sourceOrganization"/>
    ///</summary>
    public const string sourceOrganization = "http://schema.org/sourceOrganization";

    ///<summary>
    ///The neurological pathway that originates the neurons.
    ///<see cref="http://schema.org/sourcedFrom"/>
    ///</summary>
    public const string sourcedFrom = "http://schema.org/sourcedFrom";

    ///<summary>
    ///The "spatial" property can be used in cases when more specific properties
    ///(e.g. <a class="localLink" href="http://schema.org/locationCreated">locationCreated</a>, <a class="localLink" href="http://schema.org/spatialCoverage">spatialCoverage</a>, <a class="localLink" href="http://schema.org/contentLocation">contentLocation</a>) are not known to be appropriate.
    ///<see cref="http://schema.org/spatial"/>
    ///</summary>
    public const string spatial = "http://schema.org/spatial";

    ///<summary>
    ///Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.<br/><br/>
    ///
    ///The <em>speakable</em> property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:<br/><br/>
    ///
    ///1.) <em>id-value</em> URL references - uses <em>id-value</em> of an element in the page being annotated. The simplest use of <em>speakable</em> has (potentially relative) URL values, referencing identified sections of the document concerned.<br/><br/>
    ///
    ///2.) CSS Selectors - addresses content in the annotated page, eg. via class attribute. Use the <a class="localLink" href="http://schema.org/cssSelector">cssSelector</a> property.<br/><br/>
    ///
    ///3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the <a class="localLink" href="http://schema.org/xpath">xpath</a> property.<br/><br/>
    ///
    ///For more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this
    ///we define a supporting type, <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>  which is defined to be a possible value of the <em>speakable</em> property.
    ///<see cref="http://schema.org/speakable"/>
    ///</summary>
    public const string speakable = "http://schema.org/speakable";

    ///<summary>
    ///Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.
    ///<see cref="http://schema.org/specialCommitments"/>
    ///</summary>
    public const string specialCommitments = "http://schema.org/specialCommitments";

    ///<summary>
    ///The special opening hours of a certain place.<br/><br/>
    ///
    ///Use this to explicitly override general opening hours brought in scope by <a class="localLink" href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a> or <a class="localLink" href="http://schema.org/openingHours">openingHours</a>.
    ///<see cref="http://schema.org/specialOpeningHoursSpecification"/>
    ///</summary>
    public const string specialOpeningHoursSpecification = "http://schema.org/specialOpeningHoursSpecification";

    ///<summary>
    ///One of the domain specialities to which this web page's content applies.
    ///<see cref="http://schema.org/specialty"/>
    ///</summary>
    public const string specialty = "http://schema.org/specialty";

    ///<summary>
    ///The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by <a class="localLink" href="http://schema.org/maxValue">maxValue</a> should be the maximum speed achievable under regular conditions.<br/><br/>
    ///
    ///Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot<br/><br/>
    ///
    ///*Note 1: Use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate the range. Typically, the minimal value is zero.
    ///* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.
    ///<see cref="http://schema.org/speed"/>
    ///</summary>
    public const string speed = "http://schema.org/speed";

    ///<summary>
    ///The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.
    ///<see cref="http://schema.org/spokenByCharacter"/>
    ///</summary>
    public const string spokenByCharacter = "http://schema.org/spokenByCharacter";

    ///<summary>
    ///A type of sport (e.g. Baseball).
    ///<see cref="http://schema.org/sport"/>
    ///</summary>
    public const string sport = "http://schema.org/sport";

    ///<summary>
    ///A sub property of location. The sports activity location where this action occurred.
    ///<see cref="http://schema.org/sportsActivityLocation"/>
    ///</summary>
    public const string sportsActivityLocation = "http://schema.org/sportsActivityLocation";

    ///<summary>
    ///A sub property of location. The sports event where this action occurred.
    ///<see cref="http://schema.org/sportsEvent"/>
    ///</summary>
    public const string sportsEvent = "http://schema.org/sportsEvent";

    ///<summary>
    ///A sub property of participant. The sports team that participated on this action.
    ///<see cref="http://schema.org/sportsTeam"/>
    ///</summary>
    public const string sportsTeam = "http://schema.org/sportsTeam";

    ///<summary>
    ///The person's spouse.
    ///<see cref="http://schema.org/spouse"/>
    ///</summary>
    public const string spouse = "http://schema.org/spouse";

    ///<summary>
    ///The stage of the condition, if applicable.
    ///<see cref="http://schema.org/stage"/>
    ///</summary>
    public const string stage = "http://schema.org/stage";

    ///<summary>
    ///The stage represented as a number, e.g. 3.
    ///<see cref="http://schema.org/stageAsNumber"/>
    ///</summary>
    public const string stageAsNumber = "http://schema.org/stageAsNumber";

    ///<summary>
    ///An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).
    ///<see cref="http://schema.org/starRating"/>
    ///</summary>
    public const string starRating = "http://schema.org/starRating";

    ///<summary>
    ///The start date and time of the item (in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
    ///<see cref="http://schema.org/startDate"/>
    ///</summary>
    public const string startDate = "http://schema.org/startDate";

    ///<summary>
    ///The start time of the clip expressed as the number of seconds from the beginning of the work.
    ///<see cref="http://schema.org/startOffset"/>
    ///</summary>
    public const string startOffset = "http://schema.org/startOffset";

    ///<summary>
    ///The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.<br/><br/>
    ///
    ///Note that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.
    ///<see cref="http://schema.org/startTime"/>
    ///</summary>
    public const string startTime = "http://schema.org/startTime";

    ///<summary>
    ///The status of the study (enumerated).
    ///<see cref="http://schema.org/status"/>
    ///</summary>
    public const string status = "http://schema.org/status";

    ///<summary>
    ///The position of the steering wheel or similar device (mostly for cars).
    ///<see cref="http://schema.org/steeringPosition"/>
    ///</summary>
    public const string steeringPosition = "http://schema.org/steeringPosition";

    ///<summary>
    ///The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.
    ///<see cref="http://schema.org/stepValue"/>
    ///</summary>
    public const string stepValue = "http://schema.org/stepValue";

    ///<summary>
    ///A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).
    ///<see cref="http://schema.org/steps"/>
    ///</summary>
    public const string steps = "http://schema.org/steps";

    ///<summary>
    ///Storage requirements (free space required).
    ///<see cref="http://schema.org/storageRequirements"/>
    ///</summary>
    public const string storageRequirements = "http://schema.org/storageRequirements";

    ///<summary>
    ///The street address. For example, 1600 Amphitheatre Pkwy.
    ///<see cref="http://schema.org/streetAddress"/>
    ///</summary>
    public const string streetAddress = "http://schema.org/streetAddress";

    ///<summary>
    ///The units of an active ingredient's strength, e.g. mg.
    ///<see cref="http://schema.org/strengthUnit"/>
    ///</summary>
    public const string strengthUnit = "http://schema.org/strengthUnit";

    ///<summary>
    ///The value of an active ingredient's strength, e.g. 325.
    ///<see cref="http://schema.org/strengthValue"/>
    ///</summary>
    public const string strengthValue = "http://schema.org/strengthValue";

    ///<summary>
    ///The name given to how bone physically connects to each other.
    ///<see cref="http://schema.org/structuralClass"/>
    ///</summary>
    public const string structuralClass = "http://schema.org/structuralClass";

    ///<summary>
    ///A medical study or trial related to this entity.
    ///<see cref="http://schema.org/study"/>
    ///</summary>
    public const string study = "http://schema.org/study";

    ///<summary>
    ///Specifics about the observational study design (enumerated).
    ///<see cref="http://schema.org/studyDesign"/>
    ///</summary>
    public const string studyDesign = "http://schema.org/studyDesign";

    ///<summary>
    ///The location in which the study is taking/took place.
    ///<see cref="http://schema.org/studyLocation"/>
    ///</summary>
    public const string studyLocation = "http://schema.org/studyLocation";

    ///<summary>
    ///A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.
    ///<see cref="http://schema.org/studySubject"/>
    ///</summary>
    public const string studySubject = "http://schema.org/studySubject";

    ///<summary>
    ///This is a StupidProperty! - for testing only
    ///<see cref="http://schema.org/stupidProperty"/>
    ///</summary>
    public const string stupidProperty = "http://schema.org/stupidProperty";

    ///<summary>
    ///Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.
    ///<see cref="http://schema.org/subEvents"/>
    ///</summary>
    public const string subEvents = "http://schema.org/subEvents";

    ///<summary>
    ///The individual reservations included in the package. Typically a repeated property.
    ///<see cref="http://schema.org/subReservation"/>
    ///</summary>
    public const string subReservation = "http://schema.org/subReservation";

    ///<summary>
    ///The substage, e.g. 'a' for Stage IIIa.
    ///<see cref="http://schema.org/subStageSuffix"/>
    ///</summary>
    public const string subStageSuffix = "http://schema.org/subStageSuffix";

    ///<summary>
    ///Component (sub-)structure(s) that comprise this anatomical structure.
    ///<see cref="http://schema.org/subStructure"/>
    ///</summary>
    public const string subStructure = "http://schema.org/subStructure";

    ///<summary>
    ///A component test of the panel.
    ///<see cref="http://schema.org/subTest"/>
    ///</summary>
    public const string subTest = "http://schema.org/subTest";

    ///<summary>
    ///Languages in which subtitles/captions are available, in <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard format</a>.
    ///<see cref="http://schema.org/subtitleLanguage"/>
    ///</summary>
    public const string subtitleLanguage = "http://schema.org/subtitleLanguage";

    ///<summary>
    ///A more specific type of the condition, where applicable, for example 'Type 1 Diabetes', 'Type 2 Diabetes', or 'Gestational Diabetes' for Diabetes.
    ///<see cref="http://schema.org/subtype"/>
    ///</summary>
    public const string subtype = "http://schema.org/subtype";

    ///<summary>
    ///A pointer from a newer variant of a product  to its previous, often discontinued predecessor.
    ///<see cref="http://schema.org/successorOf"/>
    ///</summary>
    public const string successorOf = "http://schema.org/successorOf";

    ///<summary>
    ///The number of grams of sugar.
    ///<see cref="http://schema.org/sugarContent"/>
    ///</summary>
    public const string sugarContent = "http://schema.org/sugarContent";

    ///<summary>
    ///The gender of the person or audience.
    ///<see cref="http://schema.org/suggestedGender"/>
    ///</summary>
    public const string suggestedGender = "http://schema.org/suggestedGender";

    ///<summary>
    ///Maximal age recommended for viewing content.
    ///<see cref="http://schema.org/suggestedMaxAge"/>
    ///</summary>
    public const string suggestedMaxAge = "http://schema.org/suggestedMaxAge";

    ///<summary>
    ///Minimal age recommended for viewing content.
    ///<see cref="http://schema.org/suggestedMinAge"/>
    ///</summary>
    public const string suggestedMinAge = "http://schema.org/suggestedMinAge";

    ///<summary>
    ///Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.
    ///<see cref="http://schema.org/suitableForDiet"/>
    ///</summary>
    public const string suitableForDiet = "http://schema.org/suitableForDiet";

    ///<summary>
    ///Relates a term (i.e. a property, class or enumeration) to one that supersedes it.
    ///<see cref="http://schema.org/supersededBy"/>
    ///</summary>
    public const string supersededBy = "http://schema.org/supersededBy";

    ///<summary>
    ///The area to which the artery supplies blood.
    ///<see cref="http://schema.org/supplyTo"/>
    ///</summary>
    public const string supplyTo = "http://schema.org/supplyTo";

    ///<summary>
    ///Supporting data for a SoftwareApplication.
    ///<see cref="http://schema.org/supportingData"/>
    ///</summary>
    public const string supportingData = "http://schema.org/supportingData";

    ///<summary>
    ///A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.
    ///<see cref="http://schema.org/surface"/>
    ///</summary>
    public const string surface = "http://schema.org/surface";

    ///<summary>
    ///Indicates a target EntryPoint for an Action.
    ///<see cref="http://schema.org/target"/>
    ///</summary>
    public const string target = "http://schema.org/target";

    ///<summary>
    ///The description of a node in an established educational framework.
    ///<see cref="http://schema.org/targetDescription"/>
    ///</summary>
    public const string targetDescription = "http://schema.org/targetDescription";

    ///<summary>
    ///The name of a node in an established educational framework.
    ///<see cref="http://schema.org/targetName"/>
    ///</summary>
    public const string targetName = "http://schema.org/targetName";

    ///<summary>
    ///Type of app development: phone, Metro style, desktop, XBox, etc.
    ///<see cref="http://schema.org/targetPlatform"/>
    ///</summary>
    public const string targetPlatform = "http://schema.org/targetPlatform";

    ///<summary>
    ///Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.
    ///<see cref="http://schema.org/targetPopulation"/>
    ///</summary>
    public const string targetPopulation = "http://schema.org/targetPopulation";

    ///<summary>
    ///Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.
    ///<see cref="http://schema.org/targetProduct"/>
    ///</summary>
    public const string targetProduct = "http://schema.org/targetProduct";

    ///<summary>
    ///The URL of a node in an established educational framework.
    ///<see cref="http://schema.org/targetUrl"/>
    ///</summary>
    public const string targetUrl = "http://schema.org/targetUrl";

    ///<summary>
    ///The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.
    ///<see cref="http://schema.org/taxID"/>
    ///</summary>
    public const string taxID = "http://schema.org/taxID";

    ///<summary>
    ///The telephone number.
    ///<see cref="http://schema.org/telephone"/>
    ///</summary>
    public const string telephone = "http://schema.org/telephone";

    ///<summary>
    ///The "temporal" property can be used in cases where more specific properties
    ///(e.g. <a class="localLink" href="http://schema.org/temporalCoverage">temporalCoverage</a>, <a class="localLink" href="http://schema.org/dateCreated">dateCreated</a>, <a class="localLink" href="http://schema.org/dateModified">dateModified</a>, <a class="localLink" href="http://schema.org/datePublished">datePublished</a>) are not known to be appropriate.
    ///<see cref="http://schema.org/temporal"/>
    ///</summary>
    public const string temporal = "http://schema.org/temporal";

    ///<summary>
    ///Human-readable terms of service documentation.
    ///<see cref="http://schema.org/termsOfService"/>
    ///</summary>
    public const string termsOfService = "http://schema.org/termsOfService";

    ///<summary>
    ///The textual content of this CreativeWork.
    ///<see cref="http://schema.org/text"/>
    ///</summary>
    public const string text = "http://schema.org/text";

    ///<summary>
    ///Thumbnail image for an image or video.
    ///<see cref="http://schema.org/thumbnail"/>
    ///</summary>
    public const string thumbnail = "http://schema.org/thumbnail";

    ///<summary>
    ///A thumbnail image relevant to the Thing.
    ///<see cref="http://schema.org/thumbnailUrl"/>
    ///</summary>
    public const string thumbnailUrl = "http://schema.org/thumbnailUrl";

    ///<summary>
    ///The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO15022.
    ///<see cref="http://schema.org/tickerSymbol"/>
    ///</summary>
    public const string tickerSymbol = "http://schema.org/tickerSymbol";

    ///<summary>
    ///The unique identifier for the ticket.
    ///<see cref="http://schema.org/ticketNumber"/>
    ///</summary>
    public const string ticketNumber = "http://schema.org/ticketNumber";

    ///<summary>
    ///Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.
    ///<see cref="http://schema.org/ticketToken"/>
    ///</summary>
    public const string ticketToken = "http://schema.org/ticketToken";

    ///<summary>
    ///The seat associated with the ticket.
    ///<see cref="http://schema.org/ticketedSeat"/>
    ///</summary>
    public const string ticketedSeat = "http://schema.org/ticketedSeat";

    ///<summary>
    ///Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'PT30M', 'PT1H25M'.
    ///<see cref="http://schema.org/timeRequired"/>
    ///</summary>
    public const string timeRequired = "http://schema.org/timeRequired";

    ///<summary>
    ///The expected length of time to complete the program if attending full-time.
    ///<see cref="http://schema.org/timeToComplete"/>
    ///</summary>
    public const string timeToComplete = "http://schema.org/timeToComplete";

    ///<summary>
    ///The type of tissue sample required for the test.
    ///<see cref="http://schema.org/tissueSample"/>
    ///</summary>
    public const string tissueSample = "http://schema.org/tissueSample";

    ///<summary>
    ///The title of the job.
    ///<see cref="http://schema.org/title"/>
    ///</summary>
    public const string title = "http://schema.org/title";

    ///<summary>
    ///A sub property of location. The final location of the object or the agent after the action.
    ///<see cref="http://schema.org/toLocation"/>
    ///</summary>
    public const string toLocation = "http://schema.org/toLocation";

    ///<summary>
    ///A sub property of recipient. The recipient who was directly sent the message.
    ///<see cref="http://schema.org/toRecipient"/>
    ///</summary>
    public const string toRecipient = "http://schema.org/toRecipient";

    ///<summary>
    ///The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR)<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/tongueWeight"/>
    ///</summary>
    public const string tongueWeight = "http://schema.org/tongueWeight";

    ///<summary>
    ///A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.
    ///<see cref="http://schema.org/tool"/>
    ///</summary>
    public const string tool = "http://schema.org/tool";

    ///<summary>
    ///The torque (turning force) of the vehicle's engine.<br/><br/>
    ///
    ///Typical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the <a class="localLink" href="http://schema.org/valueReference">valueReference</a> property.</li>
    ///<li>Note 2: You can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/torque"/>
    ///</summary>
    public const string torque = "http://schema.org/torque";

    ///<summary>
    ///The total amount due.
    ///<see cref="http://schema.org/totalPaymentDue"/>
    ///</summary>
    public const string totalPaymentDue = "http://schema.org/totalPaymentDue";

    ///<summary>
    ///The total price for the reservation or ticket, including applicable taxes, shipping, etc.<br/><br/>
    ///
    ///Usage guidelines:<br/><br/>
    ///
    ///<ul>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/totalPrice"/>
    ///</summary>
    public const string totalPrice = "http://schema.org/totalPrice";

    ///<summary>
    ///The total time required to perform instructions or a direction (including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/totalTime"/>
    ///</summary>
    public const string totalTime = "http://schema.org/totalTime";

    ///<summary>
    ///Attraction suitable for type(s) of tourist. eg. Children, visitors from a particular country, etc.
    ///<see cref="http://schema.org/touristType"/>
    ///</summary>
    public const string touristType = "http://schema.org/touristType";

    ///<summary>
    ///Shipper tracking number.
    ///<see cref="http://schema.org/trackingNumber"/>
    ///</summary>
    public const string trackingNumber = "http://schema.org/trackingNumber";

    ///<summary>
    ///Tracking url for the parcel delivery.
    ///<see cref="http://schema.org/trackingUrl"/>
    ///</summary>
    public const string trackingUrl = "http://schema.org/trackingUrl";

    ///<summary>
    ///A music recording (track)&#x2014;usually a single song.
    ///<see cref="http://schema.org/tracks"/>
    ///</summary>
    public const string tracks = "http://schema.org/tracks";

    ///<summary>
    ///The trailer of a movie or tv/radio series, season, episode, etc.
    ///<see cref="http://schema.org/trailer"/>
    ///</summary>
    public const string trailer = "http://schema.org/trailer";

    ///<summary>
    ///The permitted weight of a trailer attached to the vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound
    ///* Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.
    ///* Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.
    ///* Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.
    ///<see cref="http://schema.org/trailerWeight"/>
    ///</summary>
    public const string trailerWeight = "http://schema.org/trailerWeight";

    ///<summary>
    ///The name of the train (e.g. The Orient Express).
    ///<see cref="http://schema.org/trainName"/>
    ///</summary>
    public const string trainName = "http://schema.org/trainName";

    ///<summary>
    ///The unique identifier for the train.
    ///<see cref="http://schema.org/trainNumber"/>
    ///</summary>
    public const string trainNumber = "http://schema.org/trainNumber";

    ///<summary>
    ///The estimated salary earned while in the program.
    ///<see cref="http://schema.org/trainingSalary"/>
    ///</summary>
    public const string trainingSalary = "http://schema.org/trainingSalary";

    ///<summary>
    ///The number of grams of trans fat.
    ///<see cref="http://schema.org/transFatContent"/>
    ///</summary>
    public const string transFatContent = "http://schema.org/transFatContent";

    ///<summary>
    ///If this MediaObject is an AudioObject or VideoObject, the transcript of that object.
    ///<see cref="http://schema.org/transcript"/>
    ///</summary>
    public const string transcript = "http://schema.org/transcript";

    ///<summary>
    ///Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
    ///<see cref="http://schema.org/translator"/>
    ///</summary>
    public const string translator = "http://schema.org/translator";

    ///<summary>
    ///How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.
    ///<see cref="http://schema.org/transmissionMethod"/>
    ///</summary>
    public const string transmissionMethod = "http://schema.org/transmissionMethod";

    ///<summary>
    ///Specifics about the trial design (enumerated).
    ///<see cref="http://schema.org/trialDesign"/>
    ///</summary>
    public const string trialDesign = "http://schema.org/trialDesign";

    ///<summary>
    ///The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.
    ///<see cref="http://schema.org/tributary"/>
    ///</summary>
    public const string tributary = "http://schema.org/tributary";

    ///<summary>
    ///The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.
    ///<see cref="http://schema.org/typeOfBed"/>
    ///</summary>
    public const string typeOfBed = "http://schema.org/typeOfBed";

    ///<summary>
    ///The product that this structured value is referring to.
    ///<see cref="http://schema.org/typeOfGood"/>
    ///</summary>
    public const string typeOfGood = "http://schema.org/typeOfGood";

    ///<summary>
    ///The typical expected age range, e.g. '7-9', '11-'.
    ///<see cref="http://schema.org/typicalAgeRange"/>
    ///</summary>
    public const string typicalAgeRange = "http://schema.org/typicalAgeRange";

    ///<summary>
    ///A medical test typically performed given this condition.
    ///<see cref="http://schema.org/typicalTest"/>
    ///</summary>
    public const string typicalTest = "http://schema.org/typicalTest";

    ///<summary>
    ///The person or organization the reservation or ticket is for.
    ///<see cref="http://schema.org/underName"/>
    ///</summary>
    public const string underName = "http://schema.org/underName";

    ///<summary>
    ///The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
    ///<see cref="http://schema.org/unitCode"/>
    ///</summary>
    public const string unitCode = "http://schema.org/unitCode";

    ///<summary>
    ///A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for
    ///<a href='unitCode'>unitCode</a>.
    ///<see cref="http://schema.org/unitText"/>
    ///</summary>
    public const string unitText = "http://schema.org/unitText";

    ///<summary>
    ///For an <a class="localLink" href="http://schema.org/Organization">Organization</a> (typically a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>), a statement about policy on use of unnamed sources and the decision process required.
    ///<see cref="http://schema.org/unnamedSourcesPolicy"/>
    ///</summary>
    public const string unnamedSourcesPolicy = "http://schema.org/unnamedSourcesPolicy";

    ///<summary>
    ///The number of grams of unsaturated fat.
    ///<see cref="http://schema.org/unsaturatedFatContent"/>
    ///</summary>
    public const string unsaturatedFatContent = "http://schema.org/unsaturatedFatContent";

    ///<summary>
    ///Date when this media object was uploaded to this site.
    ///<see cref="http://schema.org/uploadDate"/>
    ///</summary>
    public const string uploadDate = "http://schema.org/uploadDate";

    ///<summary>
    ///The number of upvotes this question, answer or comment has received from the community.
    ///<see cref="http://schema.org/upvoteCount"/>
    ///</summary>
    public const string upvoteCount = "http://schema.org/upvoteCount";

    ///<summary>
    ///URL of the item.
    ///<see cref="http://schema.org/url"/>
    ///</summary>
    public const string url = "http://schema.org/url";

    ///<summary>
    ///An url template (RFC6570) that will be used to construct the target of the execution of the action.
    ///<see cref="http://schema.org/urlTemplate"/>
    ///</summary>
    public const string urlTemplate = "http://schema.org/urlTemplate";

    ///<summary>
    ///A condition the test is used to diagnose.
    ///<see cref="http://schema.org/usedToDiagnose"/>
    ///</summary>
    public const string usedToDiagnose = "http://schema.org/usedToDiagnose";

    ///<summary>
    ///The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.
    ///<see cref="http://schema.org/userInteractionCount"/>
    ///</summary>
    public const string userInteractionCount = "http://schema.org/userInteractionCount";

    ///<summary>
    ///Device used to perform the test.
    ///<see cref="http://schema.org/usesDevice"/>
    ///</summary>
    public const string usesDevice = "http://schema.org/usesDevice";

    ///<summary>
    ///The standard for interpreting thePlan ID. The preferred is "HIOS". See the Centers for Medicare &amp; Medicaid Services for more details.
    ///<see cref="http://schema.org/usesHealthPlanIdStandard"/>
    ///</summary>
    public const string usesHealthPlanIdStandard = "http://schema.org/usesHealthPlanIdStandard";

    ///<summary>
    ///The duration of validity of a permit or similar thing.
    ///<see cref="http://schema.org/validFor"/>
    ///</summary>
    public const string validFor = "http://schema.org/validFor";

    ///<summary>
    ///The date when the item becomes valid.
    ///<see cref="http://schema.org/validFrom"/>
    ///</summary>
    public const string validFrom = "http://schema.org/validFrom";

    ///<summary>
    ///The geographic area where a permit or similar thing is valid.
    ///<see cref="http://schema.org/validIn"/>
    ///</summary>
    public const string validIn = "http://schema.org/validIn";

    ///<summary>
    ///The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.
    ///<see cref="http://schema.org/validThrough"/>
    ///</summary>
    public const string validThrough = "http://schema.org/validThrough";

    ///<summary>
    ///The date when the item is no longer valid.
    ///<see cref="http://schema.org/validUntil"/>
    ///</summary>
    public const string validUntil = "http://schema.org/validUntil";

    ///<summary>
    ///The value of the quantitative value or property value node.<br/><br/>
    ///
    ///<ul>
    ///<li>For <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and <a class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>
    ///<li>For <a class="localLink" href="http://schema.org/PropertyValue">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>
    ///<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>
    ///<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/value"/>
    ///</summary>
    public const string value = "http://schema.org/value";

    ///<summary>
    ///Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.
    ///<see cref="http://schema.org/valueAddedTaxIncluded"/>
    ///</summary>
    public const string valueAddedTaxIncluded = "http://schema.org/valueAddedTaxIncluded";

    ///<summary>
    ///Specifies the allowed range for number of characters in a literal value.
    ///<see cref="http://schema.org/valueMaxLength"/>
    ///</summary>
    public const string valueMaxLength = "http://schema.org/valueMaxLength";

    ///<summary>
    ///Specifies the minimum allowed range for number of characters in a literal value.
    ///<see cref="http://schema.org/valueMinLength"/>
    ///</summary>
    public const string valueMinLength = "http://schema.org/valueMinLength";

    ///<summary>
    ///Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.
    ///<see cref="http://schema.org/valueName"/>
    ///</summary>
    public const string valueName = "http://schema.org/valueName";

    ///<summary>
    ///Specifies a regular expression for testing literal values according to the HTML spec.
    ///<see cref="http://schema.org/valuePattern"/>
    ///</summary>
    public const string valuePattern = "http://schema.org/valuePattern";

    ///<summary>
    ///A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
    ///<see cref="http://schema.org/valueReference"/>
    ///</summary>
    public const string valueReference = "http://schema.org/valueReference";

    ///<summary>
    ///Whether the property must be filled in to complete the action.  Default is false.
    ///<see cref="http://schema.org/valueRequired"/>
    ///</summary>
    public const string valueRequired = "http://schema.org/valueRequired";

    ///<summary>
    ///The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.
    ///<see cref="http://schema.org/variableMeasured"/>
    ///</summary>
    public const string variableMeasured = "http://schema.org/variableMeasured";

    ///<summary>
    ///Originally named <a class="localLink" href="http://schema.org/variablesMeasured">variablesMeasured</a>, The <a class="localLink" href="http://schema.org/variableMeasured">variableMeasured</a> property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue.
    ///<see cref="http://schema.org/variablesMeasured"/>
    ///</summary>
    public const string variablesMeasured = "http://schema.org/variablesMeasured";

    ///<summary>
    ///A description of the variant cover
    ///    for the issue, if the issue is a variant printing. For example, "Bryan Hitch
    ///    Variant Cover" or "2nd Printing Variant".
    ///<see cref="http://schema.org/variantCover"/>
    ///</summary>
    public const string variantCover = "http://schema.org/variantCover";

    ///<summary>
    ///The Value-added Tax ID of the organization or person.
    ///<see cref="http://schema.org/vatID"/>
    ///</summary>
    public const string vatID = "http://schema.org/vatID";

    ///<summary>
    ///A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.
    ///<see cref="http://schema.org/vehicleConfiguration"/>
    ///</summary>
    public const string vehicleConfiguration = "http://schema.org/vehicleConfiguration";

    ///<summary>
    ///Information about the engine or engines of the vehicle.
    ///<see cref="http://schema.org/vehicleEngine"/>
    ///</summary>
    public const string vehicleEngine = "http://schema.org/vehicleEngine";

    ///<summary>
    ///The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.
    ///<see cref="http://schema.org/vehicleIdentificationNumber"/>
    ///</summary>
    public const string vehicleIdentificationNumber = "http://schema.org/vehicleIdentificationNumber";

    ///<summary>
    ///The color or color combination of the interior of the vehicle.
    ///<see cref="http://schema.org/vehicleInteriorColor"/>
    ///</summary>
    public const string vehicleInteriorColor = "http://schema.org/vehicleInteriorColor";

    ///<summary>
    ///The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.
    ///<see cref="http://schema.org/vehicleInteriorType"/>
    ///</summary>
    public const string vehicleInteriorType = "http://schema.org/vehicleInteriorType";

    ///<summary>
    ///The release date of a vehicle model (often used to differentiate versions of the same make and model).
    ///<see cref="http://schema.org/vehicleModelDate"/>
    ///</summary>
    public const string vehicleModelDate = "http://schema.org/vehicleModelDate";

    ///<summary>
    ///The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.<br/><br/>
    ///
    ///Typical unit code(s): C62 for persons.
    ///<see cref="http://schema.org/vehicleSeatingCapacity"/>
    ///</summary>
    public const string vehicleSeatingCapacity = "http://schema.org/vehicleSeatingCapacity";

    ///<summary>
    ///Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.
    ///<see cref="http://schema.org/vehicleSpecialUsage"/>
    ///</summary>
    public const string vehicleSpecialUsage = "http://schema.org/vehicleSpecialUsage";

    ///<summary>
    ///The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) ("gearbox" for cars).
    ///<see cref="http://schema.org/vehicleTransmission"/>
    ///</summary>
    public const string vehicleTransmission = "http://schema.org/vehicleTransmission";

    ///<summary>
    ///'vendor' is an earlier term for 'seller'.
    ///<see cref="http://schema.org/vendor"/>
    ///</summary>
    public const string vendor = "http://schema.org/vendor";

    ///<summary>
    ///Disclosure about verification and fact-checking processes for a <a class="localLink" href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a> or other fact-checking <a class="localLink" href="http://schema.org/Organization">Organization</a>.
    ///<see cref="http://schema.org/verificationFactCheckingPolicy"/>
    ///</summary>
    public const string verificationFactCheckingPolicy = "http://schema.org/verificationFactCheckingPolicy";

    ///<summary>
    ///The version of the CreativeWork embodied by a specified resource.
    ///<see cref="http://schema.org/version"/>
    ///</summary>
    public const string version = "http://schema.org/version";

    ///<summary>
    ///An embedded video object.
    ///<see cref="http://schema.org/video"/>
    ///</summary>
    public const string video = "http://schema.org/video";

    ///<summary>
    ///The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).
    ///<see cref="http://schema.org/videoFormat"/>
    ///</summary>
    public const string videoFormat = "http://schema.org/videoFormat";

    ///<summary>
    ///The frame size of the video.
    ///<see cref="http://schema.org/videoFrameSize"/>
    ///</summary>
    public const string videoFrameSize = "http://schema.org/videoFrameSize";

    ///<summary>
    ///The quality of the video.
    ///<see cref="http://schema.org/videoQuality"/>
    ///</summary>
    public const string videoQuality = "http://schema.org/videoQuality";

    ///<summary>
    ///Identifies the volume of publication or multi-part work; for example, "iii" or "2".
    ///<see cref="http://schema.org/volumeNumber"/>
    ///</summary>
    public const string volumeNumber = "http://schema.org/volumeNumber";

    ///<summary>
    ///Any FDA or other warnings about the drug (text or URL).
    ///<see cref="http://schema.org/warning"/>
    ///</summary>
    public const string warning = "http://schema.org/warning";

    ///<summary>
    ///The warranty promise(s) included in the offer.
    ///<see cref="http://schema.org/warrantyPromise"/>
    ///</summary>
    public const string warrantyPromise = "http://schema.org/warrantyPromise";

    ///<summary>
    ///The scope of the warranty promise.
    ///<see cref="http://schema.org/warrantyScope"/>
    ///</summary>
    public const string warrantyScope = "http://schema.org/warrantyScope";

    ///<summary>
    ///The time when a passenger can check into the flight online.
    ///<see cref="http://schema.org/webCheckinTime"/>
    ///</summary>
    public const string webCheckinTime = "http://schema.org/webCheckinTime";

    ///<summary>
    ///The weight of the product or person.
    ///<see cref="http://schema.org/weight"/>
    ///</summary>
    public const string weight = "http://schema.org/weight";

    ///<summary>
    ///The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.<br/><br/>
    ///
    ///Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>
    ///
    ///<ul>
    ///<li>Note 1: You can indicate additional information in the <a class="localLink" href="http://schema.org/name">name</a> of the <a class="localLink" href="http://schema.org/QuantitativeValue">QuantitativeValue</a> node.</li>
    ///<li>Note 2: You may also link to a <a class="localLink" href="http://schema.org/QualitativeValue">QualitativeValue</a> node that provides additional information using <a class="localLink" href="http://schema.org/valueReference">valueReference</a>.</li>
    ///<li>Note 3: Note that you can use <a class="localLink" href="http://schema.org/minValue">minValue</a> and <a class="localLink" href="http://schema.org/maxValue">maxValue</a> to indicate ranges.</li>
    ///</ul>
    ///
    ///<see cref="http://schema.org/weightTotal"/>
    ///</summary>
    public const string weightTotal = "http://schema.org/weightTotal";

    ///<summary>
    ///The distance between the centers of the front and rear wheels.<br/><br/>
    ///
    ///Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet
    ///<see cref="http://schema.org/wheelbase"/>
    ///</summary>
    public const string wheelbase = "http://schema.org/wheelbase";

    ///<summary>
    ///The width of the item.
    ///<see cref="http://schema.org/width"/>
    ///</summary>
    public const string width = "http://schema.org/width";

    ///<summary>
    ///A sub property of participant. The winner of the action.
    ///<see cref="http://schema.org/winner"/>
    ///</summary>
    public const string winner = "http://schema.org/winner";

    ///<summary>
    ///The number of words in the text of the Article.
    ///<see cref="http://schema.org/wordCount"/>
    ///</summary>
    public const string wordCount = "http://schema.org/wordCount";

    ///<summary>
    ///The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).
    ///<see cref="http://schema.org/workHours"/>
    ///</summary>
    public const string workHours = "http://schema.org/workHours";

    ///<summary>
    ///A contact location for a person's place of work.
    ///<see cref="http://schema.org/workLocation"/>
    ///</summary>
    public const string workLocation = "http://schema.org/workLocation";

    ///<summary>
    ///A work performed in some event, for example a play performed in a TheaterEvent.
    ///<see cref="http://schema.org/workPerformed"/>
    ///</summary>
    public const string workPerformed = "http://schema.org/workPerformed";

    ///<summary>
    ///The movie presented during this event.
    ///<see cref="http://schema.org/workPresented"/>
    ///</summary>
    public const string workPresented = "http://schema.org/workPresented";

    ///<summary>
    ///Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.
    ///<see cref="http://schema.org/workload"/>
    ///</summary>
    public const string workload = "http://schema.org/workload";

    ///<summary>
    ///Organizations that the person works for.
    ///<see cref="http://schema.org/worksFor"/>
    ///</summary>
    public const string worksFor = "http://schema.org/worksFor";

    ///<summary>
    ///The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.
    ///<see cref="http://schema.org/worstRating"/>
    ///</summary>
    public const string worstRating = "http://schema.org/worstRating";

    ///<summary>
    ///An XPath, e.g. of a <a class="localLink" href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> or <a class="localLink" href="http://schema.org/WebPageElement">WebPageElement</a>. In the latter case, multiple matches within a page can constitute a single conceptual "Web page element".
    ///<see cref="http://schema.org/xpath"/>
    ///</summary>
    public const string xpath = "http://schema.org/xpath";

    ///<summary>
    ///The size of the business in annual revenue.
    ///<see cref="http://schema.org/yearlyRevenue"/>
    ///</summary>
    public const string yearlyRevenue = "http://schema.org/yearlyRevenue";

    ///<summary>
    ///The age of the business.
    ///<see cref="http://schema.org/yearsInOperation"/>
    ///</summary>
    public const string yearsInOperation = "http://schema.org/yearsInOperation";

    ///<summary>
    ///A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.
    ///<see cref="http://schema.org/Dermatology"/>
    ///</summary>
    public const string Dermatology = "http://schema.org/Dermatology";

    ///<summary>
    ///An application that can complete the request.
    ///<see cref="http://schema.org/actionApplication"/>
    ///</summary>
    public const string actionApplication = "http://schema.org/actionApplication";

    ///<summary>
    ///A sub property of object. The options subject to this action.
    ///<see cref="http://schema.org/actionOption"/>
    ///</summary>
    public const string actionOption = "http://schema.org/actionOption";

    ///<summary>
    ///A music album.
    ///<see cref="http://schema.org/album"/>
    ///</summary>
    public const string album = "http://schema.org/album";

    ///<summary>
    ///A release of this album.
    ///<see cref="http://schema.org/albumRelease"/>
    ///</summary>
    public const string albumRelease = "http://schema.org/albumRelease";

    ///<summary>
    ///Alumni of an organization.
    ///<see cref="http://schema.org/alumni"/>
    ///</summary>
    public const string alumni = "http://schema.org/alumni";

    ///<summary>
    ///An organization that the person is an alumni of.
    ///<see cref="http://schema.org/alumniOf"/>
    ///</summary>
    public const string alumniOf = "http://schema.org/alumniOf";

    ///<summary>
    ///Collection, <a href="https://en.wikipedia.org/wiki/Fonds">fonds</a>, or item held, kept or maintained by an <a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a>.
    ///<see cref="http://schema.org/archiveHeld"/>
    ///</summary>
    public const string archiveHeld = "http://schema.org/archiveHeld";

    ///<summary>
    ///The branches that comprise the arterial structure.
    ///<see cref="http://schema.org/arterialBranch"/>
    ///</summary>
    public const string arterialBranch = "http://schema.org/arterialBranch";

    ///<summary>
    ///The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.
    ///<see cref="http://schema.org/artworkSurface"/>
    ///</summary>
    public const string artworkSurface = "http://schema.org/artworkSurface";

    ///<summary>
    ///A person or organization attending the event.
    ///<see cref="http://schema.org/attendee"/>
    ///</summary>
    public const string attendee = "http://schema.org/attendee";

    ///<summary>
    ///An intended audience, i.e. a group for whom something was created.
    ///<see cref="http://schema.org/audience"/>
    ///</summary>
    public const string audience = "http://schema.org/audience";

    ///<summary>
    ///Device required to run the application. Used in cases where a specific make/model is required to run the application.
    ///<see cref="http://schema.org/availableOnDevice"/>
    ///</summary>
    public const string availableOnDevice = "http://schema.org/availableOnDevice";

    ///<summary>
    ///An award won by or for this item.
    ///<see cref="http://schema.org/award"/>
    ///</summary>
    public const string award = "http://schema.org/award";

    ///<summary>
    ///A posting that is part of this blog.
    ///<see cref="http://schema.org/blogPost"/>
    ///</summary>
    public const string blogPost = "http://schema.org/blogPost";

    ///<summary>
    ///An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.
    ///<see cref="http://schema.org/broker"/>
    ///</summary>
    public const string broker = "http://schema.org/broker";

    ///<summary>
    ///Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).
    ///<see cref="http://schema.org/clinicalPharmacology"/>
    ///</summary>
    public const string clinicalPharmacology = "http://schema.org/clinicalPharmacology";

    ///<summary>
    ///What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.
    ///<see cref="http://schema.org/codeSampleType"/>
    ///</summary>
    public const string codeSampleType = "http://schema.org/codeSampleType";

    ///<summary>
    ///A colleague of the person.
    ///<see cref="http://schema.org/colleague"/>
    ///</summary>
    public const string colleague = "http://schema.org/colleague";

    ///<summary>
    ///A contact point for a person or organization.
    ///<see cref="http://schema.org/contactPoint"/>
    ///</summary>
    public const string contactPoint = "http://schema.org/contactPoint";

    ///<summary>
    ///The basic containment relation between a place and another that it contains.
    ///<see cref="http://schema.org/containsPlace"/>
    ///</summary>
    public const string containsPlace = "http://schema.org/containsPlace";

    ///<summary>
    ///A season that is part of the media series.
    ///<see cref="http://schema.org/containsSeason"/>
    ///</summary>
    public const string containsSeason = "http://schema.org/containsSeason";

    ///<summary>
    ///The location depicted or described in the content. For example, the location in a photograph or painting.
    ///<see cref="http://schema.org/contentLocation"/>
    ///</summary>
    public const string contentLocation = "http://schema.org/contentLocation";

    ///<summary>
    ///The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
    ///<see cref="http://schema.org/creator"/>
    ///</summary>
    public const string creator = "http://schema.org/creator";

    ///<summary>
    ///A dataset contained in this catalog.
    ///<see cref="http://schema.org/dataset"/>
    ///</summary>
    public const string dataset = "http://schema.org/dataset";

    ///<summary>
    ///The date on which the CreativeWork was created or the item was added to a DataFeed.
    ///<see cref="http://schema.org/dateCreated"/>
    ///</summary>
    public const string dateCreated = "http://schema.org/dateCreated";

    ///<summary>
    ///A description of the item.
    ///<see cref="http://schema.org/description"/>
    ///</summary>
    public const string description = "http://schema.org/description";

    ///<summary>
    ///A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/director"/>
    ///</summary>
    public const string director = "http://schema.org/director";

    ///<summary>
    ///The duration of the item (movie, audio recording, event, etc.) in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>.
    ///<see cref="http://schema.org/duration"/>
    ///</summary>
    public const string duration = "http://schema.org/duration";

    ///<summary>
    ///Someone working for this organization.
    ///<see cref="http://schema.org/employee"/>
    ///</summary>
    public const string employee = "http://schema.org/employee";

    ///<summary>
    ///The CreativeWork encoded by this media object.
    ///<see cref="http://schema.org/encodesCreativeWork"/>
    ///</summary>
    public const string encodesCreativeWork = "http://schema.org/encodesCreativeWork";

    ///<summary>
    ///Media type typically expressed using a MIME format (see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA site</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>
    ///
    ///In cases where a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> has several media type representations, <a class="localLink" href="http://schema.org/encoding">encoding</a> can be used to indicate each <a class="localLink" href="http://schema.org/MediaObject">MediaObject</a> alongside particular <a class="localLink" href="http://schema.org/encodingFormat">encodingFormat</a> information.<br/><br/>
    ///
    ///Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.
    ///<see cref="http://schema.org/encodingFormat"/>
    ///</summary>
    public const string encodingFormat = "http://schema.org/encodingFormat";

    ///<summary>
    ///An episode of a tv, radio or game media within a series or season.
    ///<see cref="http://schema.org/episode"/>
    ///</summary>
    public const string episode = "http://schema.org/episode";

    ///<summary>
    ///Upcoming or past event associated with this place, organization, or action.
    ///<see cref="http://schema.org/event"/>
    ///</summary>
    public const string _event = "http://schema.org/event";

    ///<summary>
    ///A creative work that this work is an example/instance/realization/derivation of.
    ///<see cref="http://schema.org/exampleOfWork"/>
    ///</summary>
    public const string exampleOfWork = "http://schema.org/exampleOfWork";

    ///<summary>
    ///Library file name e.g., mscorlib.dll, system.web.dll.
    ///<see cref="http://schema.org/executableLibraryName"/>
    ///</summary>
    public const string executableLibraryName = "http://schema.org/executableLibraryName";

    ///<summary>
    ///A sub property of location. The course where this action was taken.
    ///<see cref="http://schema.org/exerciseCourse"/>
    ///</summary>
    public const string exerciseCourse = "http://schema.org/exerciseCourse";

    ///<summary>
    ///A person who founded this organization.
    ///<see cref="http://schema.org/founder"/>
    ///</summary>
    public const string founder = "http://schema.org/founder";

    ///<summary>
    ///How often the dose is taken, e.g. 'daily'.
    ///<see cref="http://schema.org/frequency"/>
    ///</summary>
    public const string frequency = "http://schema.org/frequency";

    ///<summary>
    ///Video game which is played on this server.
    ///<see cref="http://schema.org/game"/>
    ///</summary>
    public const string game = "http://schema.org/game";

    ///<summary>
    ///The server on which  it is possible to play the game.
    ///<see cref="http://schema.org/gameServer"/>
    ///</summary>
    public const string gameServer = "http://schema.org/gameServer";

    ///<summary>
    ///Genre of the creative work, broadcast channel or group.
    ///<see cref="http://schema.org/genre"/>
    ///</summary>
    public const string genre = "http://schema.org/genre";

    ///<summary>
    ///A broadcast channel of a broadcast service.
    ///<see cref="http://schema.org/hasBroadcastChannel"/>
    ///</summary>
    public const string hasBroadcastChannel = "http://schema.org/hasBroadcastChannel";

    ///<summary>
    ///A Defined Term contained in this term set.
    ///<see cref="http://schema.org/hasDefinedTerm"/>
    ///</summary>
    public const string hasDefinedTerm = "http://schema.org/hasDefinedTerm";

    ///<summary>
    ///Either the actual menu as a structured representation, as text, or a URL of the menu.
    ///<see cref="http://schema.org/hasMenu"/>
    ///</summary>
    public const string hasMenu = "http://schema.org/hasMenu";

    ///<summary>
    ///<a class="localLink" href="http://schema.org/ArchiveOrganization">ArchiveOrganization</a> that holds, keeps or maintains the <a class="localLink" href="http://schema.org/ArchiveComponent">ArchiveComponent</a>.
    ///<see cref="http://schema.org/holdingArchive"/>
    ///</summary>
    public const string holdingArchive = "http://schema.org/holdingArchive";

    ///<summary>
    ///A <a class="localLink" href="http://schema.org/DefinedTermSet">DefinedTermSet</a> that contains this term.
    ///<see cref="http://schema.org/inDefinedTermSet"/>
    ///</summary>
    public const string inDefinedTermSet = "http://schema.org/inDefinedTermSet";

    ///<summary>
    ///The language of the content or performance or used in an action. Please use one of the language codes from the <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>. See also <a class="localLink" href="http://schema.org/availableLanguage">availableLanguage</a>.
    ///<see cref="http://schema.org/inLanguage"/>
    ///</summary>
    public const string inLanguage = "http://schema.org/inLanguage";

    ///<summary>
    ///Description of bonus and commission compensation aspects of the job.
    ///<see cref="http://schema.org/incentiveCompensation"/>
    ///</summary>
    public const string incentiveCompensation = "http://schema.org/incentiveCompensation";

    ///<summary>
    ///The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.
    ///<see cref="http://schema.org/interactionStatistic"/>
    ///</summary>
    public const string interactionStatistic = "http://schema.org/interactionStatistic";

    ///<summary>
    ///A flag to signal that the item, event, or place is accessible for free.
    ///<see cref="http://schema.org/isAccessibleForFree"/>
    ///</summary>
    public const string isAccessibleForFree = "http://schema.org/isAccessibleForFree";

    ///<summary>
    ///A resource from which this work is derived or from which it is a modification or adaption.
    ///<see cref="http://schema.org/isBasedOn"/>
    ///</summary>
    public const string isBasedOn = "http://schema.org/isBasedOn";

    ///<summary>
    ///Description of benefits associated with the job.
    ///<see cref="http://schema.org/jobBenefits"/>
    ///</summary>
    public const string jobBenefits = "http://schema.org/jobBenefits";

    ///<summary>
    ///Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href="/legislationTransposes">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state "applies" the consolidated version of the European Directive implemented in it.
    ///<see cref="http://schema.org/legislationApplies"/>
    ///</summary>
    public const string legislationApplies = "http://schema.org/legislationApplies";

    ///<summary>
    ///Indicates if this web page element is the main subject of the page.
    ///<see cref="http://schema.org/mainContentOfPage"/>
    ///</summary>
    public const string mainContentOfPage = "http://schema.org/mainContentOfPage";

    ///<summary>
    ///Indicates the primary entity described in some page or other CreativeWork.
    ///<see cref="http://schema.org/mainEntity"/>
    ///</summary>
    public const string mainEntity = "http://schema.org/mainEntity";

    ///<summary>
    ///Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href="/docs/datamodel.html#mainEntityBackground">background notes</a> for details.
    ///<see cref="http://schema.org/mainEntityOfPage"/>
    ///</summary>
    public const string mainEntityOfPage = "http://schema.org/mainEntityOfPage";

    ///<summary>
    ///A pointer to products or services offered by the organization or person.
    ///<see cref="http://schema.org/makesOffer"/>
    ///</summary>
    public const string makesOffer = "http://schema.org/makesOffer";

    ///<summary>
    ///A pointer to the organization or person making the offer.
    ///<see cref="http://schema.org/offeredBy"/>
    ///</summary>
    public const string offeredBy = "http://schema.org/offeredBy";

    ///<summary>
    ///A parent of this person.
    ///<see cref="http://schema.org/parent"/>
    ///</summary>
    public const string parent = "http://schema.org/parent";

    ///<summary>
    ///The series to which this episode or season belongs.
    ///<see cref="http://schema.org/partOfSeries"/>
    ///</summary>
    public const string partOfSeries = "http://schema.org/partOfSeries";

    ///<summary>
    ///Identifies that this <a class="localLink" href="http://schema.org/Trip">Trip</a> is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
    ///<see cref="http://schema.org/partOfTrip"/>
    ///</summary>
    public const string partOfTrip = "http://schema.org/partOfTrip";

    ///<summary>
    ///The date that payment is due.
    ///<see cref="http://schema.org/paymentDueDate"/>
    ///</summary>
    public const string paymentDueDate = "http://schema.org/paymentDueDate";

    ///<summary>
    ///The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration format</a>.
    ///<see cref="http://schema.org/performTime"/>
    ///</summary>
    public const string performTime = "http://schema.org/performTime";

    ///<summary>
    ///A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.
    ///<see cref="http://schema.org/performer"/>
    ///</summary>
    public const string performer = "http://schema.org/performer";

    ///<summary>
    ///A photograph of this place.
    ///<see cref="http://schema.org/photo"/>
    ///</summary>
    public const string photo = "http://schema.org/photo";

    ///<summary>
    ///The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.
    ///<see cref="http://schema.org/provider"/>
    ///</summary>
    public const string provider = "http://schema.org/provider";

    ///<summary>
    ///The BroadcastService offered on this channel.
    ///<see cref="http://schema.org/providesBroadcastService"/>
    ///</summary>
    public const string providesBroadcastService = "http://schema.org/providesBroadcastService";

    ///<summary>
    ///A single ingredient used in the recipe, e.g. sugar, flour or garlic.
    ///<see cref="http://schema.org/recipeIngredient"/>
    ///</summary>
    public const string recipeIngredient = "http://schema.org/recipeIngredient";

    ///<summary>
    ///An audio recording of the work.
    ///<see cref="http://schema.org/recordedAs"/>
    ///</summary>
    public const string recordedAs = "http://schema.org/recordedAs";

    ///<summary>
    ///The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.
    ///<see cref="http://schema.org/recordedAt"/>
    ///</summary>
    public const string recordedAt = "http://schema.org/recordedAt";

    ///<summary>
    ///The CreativeWork that captured all or part of this Event.
    ///<see cref="http://schema.org/recordedIn"/>
    ///</summary>
    public const string recordedIn = "http://schema.org/recordedIn";

    ///<summary>
    ///The composition this track is a recording of.
    ///<see cref="http://schema.org/recordingOf"/>
    ///</summary>
    public const string recordingOf = "http://schema.org/recordingOf";

    ///<summary>
    ///The album this is a release of.
    ///<see cref="http://schema.org/releaseOf"/>
    ///</summary>
    public const string releaseOf = "http://schema.org/releaseOf";

    ///<summary>
    ///A review of the item.
    ///<see cref="http://schema.org/review"/>
    ///</summary>
    public const string review = "http://schema.org/review";

    ///<summary>
    ///A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.
    ///<see cref="http://schema.org/roleName"/>
    ///</summary>
    public const string roleName = "http://schema.org/roleName";

    ///<summary>
    ///Runtime platform or script interpreter dependencies (Example - Java v1, Python2.3, .Net Framework 3.0).
    ///<see cref="http://schema.org/runtimePlatform"/>
    ///</summary>
    public const string runtimePlatform = "http://schema.org/runtimePlatform";

    ///<summary>
    ///A season in a media series.
    ///<see cref="http://schema.org/season"/>
    ///</summary>
    public const string season = "http://schema.org/season";

    ///<summary>
    ///The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.
    ///<see cref="http://schema.org/serialNumber"/>
    ///</summary>
    public const string serialNumber = "http://schema.org/serialNumber";

    ///<summary>
    ///The geographic area where the service is provided.
    ///<see cref="http://schema.org/serviceArea"/>
    ///</summary>
    public const string serviceArea = "http://schema.org/serviceArea";

    ///<summary>
    ///The tangible thing generated by the service, e.g. a passport, permit, etc.
    ///<see cref="http://schema.org/serviceOutput"/>
    ///</summary>
    public const string serviceOutput = "http://schema.org/serviceOutput";

    ///<summary>
    ///A sibling of the person.
    ///<see cref="http://schema.org/sibling"/>
    ///</summary>
    public const string sibling = "http://schema.org/sibling";

    ///<summary>
    ///One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.
    ///<see cref="http://schema.org/significantLink"/>
    ///</summary>
    public const string significantLink = "http://schema.org/significantLink";

    ///<summary>
    ///Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).
    ///<see cref="http://schema.org/softwareRequirements"/>
    ///</summary>
    public const string softwareRequirements = "http://schema.org/softwareRequirements";

    ///<summary>
    ///The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of
    ///      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
    ///      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
    ///<see cref="http://schema.org/spatialCoverage"/>
    ///</summary>
    public const string spatialCoverage = "http://schema.org/spatialCoverage";

    ///<summary>
    ///A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
    ///<see cref="http://schema.org/sponsor"/>
    ///</summary>
    public const string sponsor = "http://schema.org/sponsor";

    ///<summary>
    ///A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.
    ///<see cref="http://schema.org/subOrganization"/>
    ///</summary>
    public const string subOrganization = "http://schema.org/subOrganization";

    ///<summary>
    ///Identifies a <a class="localLink" href="http://schema.org/Trip">Trip</a> that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.
    ///<see cref="http://schema.org/subTrip"/>
    ///</summary>
    public const string subTrip = "http://schema.org/subTrip";

    ///<summary>
    ///A CreativeWork or Event about this Thing.
    ///<see cref="http://schema.org/subjectOf"/>
    ///</summary>
    public const string subjectOf = "http://schema.org/subjectOf";

    ///<summary>
    ///An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.
    ///<see cref="http://schema.org/suggestedAnswer"/>
    ///</summary>
    public const string suggestedAnswer = "http://schema.org/suggestedAnswer";

    ///<summary>
    ///An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.
    ///<see cref="http://schema.org/superEvent"/>
    ///</summary>
    public const string superEvent = "http://schema.org/superEvent";

    ///<summary>
    ///A sub property of object. The collection target of the action.
    ///<see cref="http://schema.org/targetCollection"/>
    ///</summary>
    public const string targetCollection = "http://schema.org/targetCollection";

    ///<summary>
    ///The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO 8601 time interval format</a>. In
    ///      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
    ///      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".<br/><br/>
    ///
    ///Open-ended date ranges can be written with ".." in place of the end date. For example, "2015-11/.." indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.
    ///<see cref="http://schema.org/temporalCoverage"/>
    ///</summary>
    public const string temporalCoverage = "http://schema.org/temporalCoverage";

    ///<summary>
    ///A code that identifies this <a class="localLink" href="http://schema.org/DefinedTerm">DefinedTerm</a> within a <a class="localLink" href="http://schema.org/DefinedTermSet">DefinedTermSet</a>
    ///<see cref="http://schema.org/termCode"/>
    ///</summary>
    public const string termCode = "http://schema.org/termCode";

    ///<summary>
    ///A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.
    ///<see cref="http://schema.org/track"/>
    ///</summary>
    public const string track = "http://schema.org/track";

    ///<summary>
    ///The work that this work has been translated from. e.g. 物种起源 is a translationOf “On the Origin of Species”
    ///<see cref="http://schema.org/translationOfWork"/>
    ///</summary>
    public const string translationOfWork = "http://schema.org/translationOfWork";

    ///<summary>
    ///The warranty promise(s) included in the offer.
    ///<see cref="http://schema.org/warranty"/>
    ///</summary>
    public const string warranty = "http://schema.org/warranty";

    ///<summary>
    ///A work that is a translation of the content of this work. e.g. 西遊記 has an English workTranslation “Journey to the West”,a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation Tây du ký bình khảo.
    ///<see cref="http://schema.org/workTranslation"/>
    ///</summary>
    public const string workTranslation = "http://schema.org/workTranslation";

    ///<summary>
    ///The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.
    ///<see cref="http://schema.org/yield"/>
    ///</summary>
    public const string yield = "http://schema.org/yield";

    ///<summary>
    ///The subject matter of the content.
    ///<see cref="http://schema.org/about"/>
    ///</summary>
    public const string about = "http://schema.org/about";

    ///<summary>
    ///An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.
    ///<see cref="http://schema.org/actor"/>
    ///</summary>
    public const string actor = "http://schema.org/actor";

    ///<summary>
    ///A competitor in a sports event.
    ///<see cref="http://schema.org/competitor"/>
    ///</summary>
    public const string competitor = "http://schema.org/competitor";

    ///<summary>
    ///The basic containment relation between a place and one that contains it.
    ///<see cref="http://schema.org/containedInPlace"/>
    ///</summary>
    public const string containedInPlace = "http://schema.org/containedInPlace";

    ///<summary>
    ///A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.
    ///<see cref="http://schema.org/encoding"/>
    ///</summary>
    public const string encoding = "http://schema.org/encoding";

    ///<summary>
    ///A URL to a map of the place.
    ///<see cref="http://schema.org/hasMap"/>
    ///</summary>
    public const string hasMap = "http://schema.org/hasMap";

    ///<summary>
    ///An image of the item. This can be a <a class="localLink" href="http://schema.org/URL">URL</a> or a fully described <a class="localLink" href="http://schema.org/ImageObject">ImageObject</a>.
    ///<see cref="http://schema.org/image"/>
    ///</summary>
    public const string image = "http://schema.org/image";

    ///<summary>
    ///A material that something is made from, e.g. leather, wool, cotton, paper.
    ///<see cref="http://schema.org/material"/>
    ///</summary>
    public const string material = "http://schema.org/material";

    ///<summary>
    ///An Organization (or ProgramMembership) to which this Person or Organization belongs.
    ///<see cref="http://schema.org/memberOf"/>
    ///</summary>
    public const string memberOf = "http://schema.org/memberOf";

    ///<summary>
    ///The larger organization that this organization is a <a class="localLink" href="http://schema.org/subOrganization">subOrganization</a> of, if any.
    ///<see cref="http://schema.org/parentOrganization"/>
    ///</summary>
    public const string parentOrganization = "http://schema.org/parentOrganization";

    ///<summary>
    ///The result produced in the action. e.g. John wrote <em>a book</em>.
    ///<see cref="http://schema.org/result"/>
    ///</summary>
    public const string result = "http://schema.org/result";

    ///<summary>
    ///An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.
    ///<see cref="http://schema.org/seller"/>
    ///</summary>
    public const string seller = "http://schema.org/seller";

    ///<summary>
    ///A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.
    ///<see cref="http://schema.org/step"/>
    ///</summary>
    public const string step = "http://schema.org/step";

    ///<summary>
    ///An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.
    ///<see cref="http://schema.org/subEvent"/>
    ///</summary>
    public const string subEvent = "http://schema.org/subEvent";

    ///<summary>
    ///A sub-property of instrument. A supply consumed when performing instructions or a direction.
    ///<see cref="http://schema.org/supply"/>
    ///</summary>
    public const string supply = "http://schema.org/supply";

    ///<summary>
    ///A work featured in some event, e.g. exhibited in an ExhibitionEvent.
    ///       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
    ///<see cref="http://schema.org/workFeatured"/>
    ///</summary>
    public const string workFeatured = "http://schema.org/workFeatured";

    ///<summary>
    ///The geographic area where a service or offered item is provided.
    ///<see cref="http://schema.org/areaServed"/>
    ///</summary>
    public const string areaServed = "http://schema.org/areaServed";

    ///<summary>
    ///A data catalog which contains this dataset.
    ///<see cref="http://schema.org/includedInDataCatalog"/>
    ///</summary>
    public const string includedInDataCatalog = "http://schema.org/includedInDataCatalog";

    ///<summary>
    ///A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.
    ///<see cref="http://schema.org/member"/>
    ///</summary>
    public const string member = "http://schema.org/member";

    ///<summary>
    ///A sub property of participant. The participant who is at the receiving end of the action.
    ///<see cref="http://schema.org/recipient"/>
    ///</summary>
    public const string recipient = "http://schema.org/recipient";

    ///<summary>
    ///Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.
    ///<see cref="http://schema.org/workExample"/>
    ///</summary>
    public const string workExample = "http://schema.org/workExample";

    ///<summary>
    ///A Global Trade Item Number (<a href="https://www.gs1.org/standards/id-keys/gtin">GTIN</a>). GTINs identify trade items, including products and services, using numeric identification codes. The <a class="localLink" href="http://schema.org/gtin">gtin</a> property generalizes the earlier <a class="localLink" href="http://schema.org/gtin8">gtin8</a>, <a class="localLink" href="http://schema.org/gtin12">gtin12</a>, <a class="localLink" href="http://schema.org/gtin13">gtin13</a>, and <a class="localLink" href="http://schema.org/gtin14">gtin14</a> properties. The GS1 <a href="https://www.gs1.org/standards/Digital-Link/">digital link specifications</a> express GTINs as URLs. A correct <a class="localLink" href="http://schema.org/gtin">gtin</a> value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a "GS1 Digital Link" URL based on such a string. The numeric component should also have a <a href="https://www.gs1.org/services/check-digit-calculator">valid GS1 check digit</a> and meet the other rules for valid GTINs. See also <a href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1's GTIN Summary</a> and <a href="https://en.wikipedia.org/wiki/Global_Trade_Item_Number">Wikipedia</a> for more details. Left-padding of the gtin values is not required or encouraged.
    ///<see cref="http://schema.org/gtin"/>
    ///</summary>
    public const string gtin = "http://schema.org/gtin";

    ///<summary>
    ///Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).
    ///<see cref="http://schema.org/hasPart"/>
    ///</summary>
    public const string hasPart = "http://schema.org/hasPart";

    ///<summary>
    ///The position of an item in a series or sequence of items.
    ///<see cref="http://schema.org/position"/>
    ///</summary>
    public const string position = "http://schema.org/position";

    ///<summary>
    ///Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.
    ///<see cref="http://schema.org/isPartOf"/>
    ///</summary>
    public const string isPartOf = "http://schema.org/isPartOf";

    ///<summary>
    ///The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.
    ///<see cref="http://schema.org/instrument"/>
    ///</summary>
    public const string instrument = "http://schema.org/instrument";

    ///<summary>
    ///The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.
    ///<see cref="http://schema.org/object"/>
    ///</summary>
    public const string _object = "http://schema.org/object";

    ///<summary>
    ///The publishingPrinciples property indicates (typically via <a class="localLink" href="http://schema.org/URL">URL</a>) a document describing the editorial principles of an <a class="localLink" href="http://schema.org/Organization">Organization</a> (or individual e.g. a <a class="localLink" href="http://schema.org/Person">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a class="localLink" href="http://schema.org/NewsArticle">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class="localLink" href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>
    ///
    ///While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class="localLink" href="http://schema.org/funder">funder</a>) can be expressed using schema.org terminology.
    ///<see cref="http://schema.org/publishingPrinciples"/>
    ///</summary>
    public const string publishingPrinciples = "http://schema.org/publishingPrinciples";

    ///<summary>
    ///The location of for example where the event is happening, an organization is located, or where an action takes place.
    ///<see cref="http://schema.org/location"/>
    ///</summary>
    public const string location = "http://schema.org/location";

    ///<summary>
    ///Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.
    ///<see cref="http://schema.org/participant"/>
    ///</summary>
    public const string participant = "http://schema.org/participant";

    ///<summary>
    ///The identifier property represents any kind of identifier for any kind of <a class="localLink" href="http://schema.org/Thing">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href="/docs/datamodel.html#identifierBg">background notes</a> for more details.
    ///<see cref="http://schema.org/identifier"/>
    ///</summary>
    public const string identifier = "http://schema.org/identifier";
}
}